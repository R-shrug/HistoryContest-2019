{"ast":null,"code":"import _objectSpread from \"E:\\\\projects\\\\HistoryContest-2019\\\\historycontest2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"E:\\\\projects\\\\HistoryContest-2019\\\\historycontest2019\\\\src\\\\Components\\\\LoginModal\\\\LoginModal.js\";\nimport React from 'react';\nimport \"antd/dist/antd.css\";\nimport { Icon, Button, Input, Modal, message, Dropdown, Menu } from 'antd';\nimport bg from '../../img/VerifyCodeBG.png';\n\nclass LoginModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({\n      visible: true,\n      attemp: \"0\",\n      name: \"\",\n      username: '',\n      password: '',\n      toDo: \"登录\",\n      posted: false\n    }, this.initState(), {\n      inputValue: \"\"\n    });\n    this.ToLogin = this.ToLogin.bind(this);\n    this.close = this.close.bind(this);\n    this.signin = this.signin.bind(this);\n    this.ToSignin = this.ToSignin.bind(this);\n  }\n\n  ToLogin() {\n    // this.setState({ posted: true })\n    let code = this.state.data.map(v => String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13));\n    let codeString = code.join(\"\");\n    let that = this;\n    let username = this.state.username;\n    let password = this.state.password;\n    let identity = this.state.attemp; //暂时的登陆函数\n\n    if (codeString.toLowerCase() == that.state.inputValue.toLowerCase() || 1) {\n      console.log(\"login\");\n      message.success(\"登录成功！\");\n      that.props.setState({\n        isWelcome: false,\n        isLogin: true,\n        isStudent: true,\n        isAllDone: false,\n        isAdmin: false,\n        isTeacher: false,\n        host: \"\",\n        userInfo: {\n          name: '菜鸡',\n          username: \"\",\n          token: '',\n          access: -1,\n          score: -1\n        },\n        answer: [] // fetch('http://' + that.props.state.host + '/api/ui/login', {\n        //     method: 'POST',\n        //     mode: 'cors',\n        //     headers: {\n        //         \"Content-Type\": \"application/x-www-form-urlencoded\"\n        //     },\n        //     body: JSON.stringify({\n        //         Username: username,\n        //         Password: password,\n        //         Identity: identity\n        //     })\n        // }).then(\n        //     async res => {\n        //         if (res.status == 404) {\n        //             message.error(\"学号不存在\");\n        //         }\n        //         else if (res.status == 204) {\n        //             message.error(\"用户名或密码错误\");\n        //         }\n        //         else {\n        //             //学生登陆成功\n        //             let data = await res.json();\n        //             this.setState({ posted: false })\n        //             console.log(\"login\");\n        //             message.success(\"登录成功！\");\n        //             if (identity == \"0\") {\n        //                 if (data.Score == -1) {\n        //                     that.props.setState({\n        //                         isWelcome: false,\n        //                         isStudent: true,\n        //                         isAllDone: false,\n        //                         isLogin: true,\n        //                         username: this.state.username,\n        //                         userInfo: {\n        //                             name: data.Name,\n        //                             score: data.Score,\n        //                             access: 0\n        //                         }\n        //                     });\n        //                 }\n        //                 else {\n        //                     that.props.setState({\n        //                         isWelcome: false,\n        //                         isStudent: true,\n        //                         isAllDone: true,\n        //                         isLogin: true,\n        //                         username: this.state.username,\n        //                         userInfo: {\n        //                             name: data.Name,\n        //                             score: data.Score,\n        //                             access: 0\n        //                         }\n        //                     })\n        //                 }\n        //             }\n        //             else if (identity == \"2\") {\n        //                 that.props.setState({\n        //                     isWelcome: false,\n        //                     isTeacher: true,\n        //                     userInfo: {\n        //                         access: 2\n        //                     }\n        //                 })\n        //             }\n        //             else if (identity == \"1\") {\n        //                 that.props.setState({\n        //                     isWelcome: false,\n        //                     isAdmin: true,\n        //                     userInfo: {\n        //                         access: 1\n        //                     }\n        //                 })\n        //             }\n        //         }\n        //     })\n\n      });\n    } else {\n      console.log(\"false\");\n      this.setState(_objectSpread({}, this.initState(), {\n        refresh: false\n      }));\n      message.error(\"验证码错误\");\n    }\n  }\n\n  ToSignin() {\n    //暂时的注册函数\n    this.props.setState({\n      isWelcome: false,\n      isStudent: true,\n      isLogin: true\n    });\n  }\n\n  close() {\n    this.setState({\n      visible: false\n    });\n    this.props.close();\n  }\n\n  signin() {\n    this.setState({\n      toDo: \"注册\"\n    });\n  }\n\n  initState() {\n    return {\n      data: this.getRandom(109, 48, 4),\n      rotate: this.getRandom(60, -60, 4),\n      fz: this.getRandom(15, 25, 4),\n      color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\n    };\n  }\n\n  getRandom(max, min, num) {\n    const asciiNum = ~~(Math.random() * (max - min + 1) + min);\n\n    if (!Boolean(num)) {\n      return asciiNum;\n    }\n\n    const arr = [];\n\n    for (let i = 0; i < num; i++) {\n      arr.push(this.getRandom(max, min));\n    }\n\n    return arr;\n  }\n\n  render() {\n    let login = React.createElement(\"div\", {\n      id: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      title: React.createElement(Dropdown, {\n        overlay: React.createElement(Menu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(Menu.Item, {\n          key: \"1\",\n          onClick: () => this.setState({\n            attemp: \"0\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"\\u5B66\\u751F\"), React.createElement(Menu.Item, {\n          key: \"2\",\n          onClick: () => this.setState({\n            attemp: \"2\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, \"\\u8F85\\u5BFC\\u5458\"), React.createElement(Menu.Item, {\n          key: \"3\",\n          onClick: () => this.setState({\n            attemp: \"1\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"\\u7BA1\\u7406\\u5458\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"defult\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), this.state.attemp == 0 && \"学生\", this.state.attemp == 2 && \"辅导员\", this.state.attemp == 1 && \"管理员\")),\n      visible: this.state.visible,\n      onOk: this.StudentToLogin,\n      onCancel: this.close,\n      footer: [React.createElement(Button, {\n        key: \"\\u8FD4\\u56DE\",\n        type: \"defult\",\n        onClick: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"), React.createElement(Button, {\n        key: \"\\u767B\\u5F55\",\n        type: \"primary\",\n        onClick: this.ToLogin,\n        loading: this.state.posted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"check-circle\",\n        theme: \"twoTone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), \"\\u767B\\u5F55\")],\n      visible: this.state.visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"username\",\n      addonBefore: \" \\u8D26\\u6237 \",\n      placeholder: this.state.attemp == \"0\" ? \"八位学号\" : \"管理员账户\",\n      allowClear: true,\n      onChange: e => {\n        this.setState({\n          username: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Input.Password, {\n      id: \"password\",\n      addonBefore: \" \\u5BC6\\u7801 \",\n      placeholder: this.state.attemp == \"0\" ? \"一卡通号码\" : \"管理员密码\",\n      allowClear: true,\n      onChange: e => {\n        this.setState({\n          password: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        marginRight: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"70%\"\n      },\n      addonBefore: \"\\u9A8C\\u8BC1\\u7801\",\n      placeholder: \"\\u4E0D\\u533A\\u5206\\u5927\\u5C0F\\u5199\",\n      onChange: e => {\n        this.setState({\n          inputValue: e.target.value\n        });\n      },\n      suffix: React.createElement(\"div\", {\n        style: {\n          width: 120,\n          height: 30,\n          backgroundImage: \"url(\".concat(bg, \")\"),\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, this.state.data.map((v, i) => React.createElement(\"div\", {\n        key: i,\n        className: \"itemStr\",\n        style: {\n          transform: \"skewX(\".concat(this.state.rotate[i], \"deg)\"),\n          fontSize: \"\".concat(this.state.fz[i], \"px\"),\n          color: \"rgb(\".concat(this.state.color[i].toString(), \")\"),\n          display: 'inline-block'\n        },\n        onMouseEnter: () => this.setState({\n          refresh: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13), \"\\xA0\\xA0\")), this.state.refresh ? React.createElement(\"div\", {\n        className: \"mask\",\n        onClick: () => {\n          this.setState(_objectSpread({}, this.initState(), {\n            refresh: false\n          }));\n        },\n        onMouseLeave: () => {\n          this.setState({\n            refresh: false\n          });\n        },\n        style: {\n          fontSize: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"\\u770B\\u4E0D\\u6E05\\uFF1F\\u70B9\\u51FB\\u6B64\\u5904\\u5237\\u65B0\") : null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), this.state.attemp == \"0\" ? React.createElement(\"a\", {\n      onClick: () => {\n        this.setState({\n          attemp: \"1\",\n          toDo: \"注册\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\u6CA1\\u6709\\u8D26\\u53F7?\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }))));\n    let sign = React.createElement(\"div\", {\n      id: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      title: \"\\u6CE8\\u518C\\u9700\\u7BA1\\u7406\\u5458\\u767B\\u5F55\",\n      visible: this.state.visible,\n      onOk: this.StudentToLogin,\n      onCancel: this.close,\n      footer: [React.createElement(Button, {\n        key: \"\\u8FD4\\u56DE\",\n        type: \"defult\",\n        onClick: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"), React.createElement(Button, {\n        key: \"\\u6CE8\\u518C\",\n        type: \"primary\",\n        onClick: this.ToLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"\\u767B\\u5F55\")],\n      visible: this.state.visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"username\",\n      addonBefore: \" \\u8D26\\u6237 \",\n      placeholder: \"\\u7BA1\\u7406\\u5458\\u8D26\\u6237\",\n      allowClear: true,\n      onChange: (x, v) => {\n        this.setState({\n          username: v\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(Input.Password, {\n      id: \"password\",\n      addonBefore: \" \\u5BC6\\u7801 \",\n      placeholder: \"\\u7BA1\\u7406\\u5458\\u5BC6\\u7801\",\n      allowClear: true,\n      onChange: (x, v) => {\n        this.setState({\n          password: v\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \" \"), React.createElement(Input, {\n      style: {\n        width: \"70%\"\n      },\n      addonBefore: \"\\u9A8C\\u8BC1\\u7801\",\n      placeholder: \"\\u4E0D\\u533A\\u5206\\u5927\\u5C0F\\u5199\",\n      onChange: e => {\n        this.setState({\n          inputValue: e.target.value\n        });\n      },\n      suffix: React.createElement(\"div\", {\n        style: {\n          width: 120,\n          height: 30,\n          backgroundImage: \"url(\".concat(bg, \")\"),\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, this.state.data.map((v, i) => React.createElement(\"div\", {\n        key: i,\n        className: \"itemStr\",\n        style: {\n          transform: \"skewX(\".concat(this.state.rotate[i], \"deg)\"),\n          fontSize: \"\".concat(this.state.fz[i], \"px\"),\n          color: \"rgb(\".concat(this.state.color[i].toString(), \")\"),\n          display: 'inline-block'\n        },\n        onMouseEnter: () => this.setState({\n          refresh: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13), \"\\xA0\\xA0\")), this.state.refresh ? React.createElement(\"div\", {\n        className: \"mask\",\n        onClick: () => {\n          this.setState(_objectSpread({}, this.initState(), {\n            refresh: false\n          }));\n        },\n        onMouseLeave: () => {\n          this.setState({\n            refresh: false\n          });\n        },\n        style: {\n          fontSize: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"\\u770B\\u4E0D\\u6E05\\uFF1F\\u70B9\\u51FB\\u6B64\\u5904\\u5237\\u65B0\") : null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, this.state.toDo == \"登录\" ? login : sign);\n  }\n\n}\n\nexport default LoginModal;","map":{"version":3,"sources":["E:\\projects\\HistoryContest-2019\\historycontest2019\\src\\Components\\LoginModal\\LoginModal.js"],"names":["React","Icon","Button","Input","Modal","message","Dropdown","Menu","bg","LoginModal","Component","constructor","props","state","visible","attemp","name","username","password","toDo","posted","initState","inputValue","ToLogin","bind","close","signin","ToSignin","code","data","map","v","String","fromCharCode","codeString","join","that","identity","toLowerCase","console","log","success","setState","isWelcome","isLogin","isStudent","isAllDone","isAdmin","isTeacher","host","userInfo","token","access","score","answer","refresh","error","getRandom","rotate","fz","color","max","min","num","asciiNum","Math","random","Boolean","arr","i","push","render","login","StudentToLogin","e","target","value","marginRight","width","height","backgroundImage","textAlign","transform","fontSize","toString","display","sign","x"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,OAArC,EAA8CC,QAA9C,EAAwDC,IAAxD,QAAoE,MAApE;AACA,OAAOC,EAAP,MAAe,4BAAf;;AAEA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL;AACIC,MAAAA,OAAO,EAAE,IADb;AAEIC,MAAAA,MAAM,EAAE,GAFZ;AAGIC,MAAAA,IAAI,EAAE,EAHV;AAIIC,MAAAA,QAAQ,EAAE,EAJd;AAKIC,MAAAA,QAAQ,EAAE,EALd;AAMIC,MAAAA,IAAI,EAAE,IANV;AAOIC,MAAAA,MAAM,EAAE;AAPZ,OAQO,KAAKC,SAAL,EARP;AASIC,MAAAA,UAAU,EAAE;AAThB;AAWA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AACDD,EAAAA,OAAO,GAAG;AACN;AACA,QAAIK,IAAI,GAAG,KAAKf,KAAL,CAAWgB,IAAX,CAAgBC,GAAhB,CAAqBC,CAAD,IAAOC,MAAM,CAACC,YAAP,CAAoBF,CAAC,GAAG,EAAJ,IAAUA,CAAC,GAAG,EAAd,GAAmBA,CAAC,GAAG,CAAvB,GAA4BA,CAAC,GAAG,EAAJ,GAASA,CAAT,GAAaA,CAAC,GAAG,EAAjE,CAA3B,CAAX;AACA,QAAIG,UAAU,GAAGN,IAAI,CAACO,IAAL,CAAU,EAAV,CAAjB;AACA,QAAIC,IAAI,GAAG,IAAX;AACA,QAAInB,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAA1B;AACA,QAAIC,QAAQ,GAAG,KAAKL,KAAL,CAAWK,QAA1B;AACA,QAAImB,QAAQ,GAAG,KAAKxB,KAAL,CAAWE,MAA1B,CAPM,CAQN;;AACA,QAAImB,UAAU,CAACI,WAAX,MAA4BF,IAAI,CAACvB,KAAL,CAAWS,UAAX,CAAsBgB,WAAtB,EAA5B,IAAiE,CAArE,EAAwE;AACpEC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAnC,MAAAA,OAAO,CAACoC,OAAR,CAAgB,OAAhB;AACAL,MAAAA,IAAI,CAACxB,KAAL,CAAW8B,QAAX,CAAoB;AAChBC,QAAAA,SAAS,EAAE,KADK;AAEhBC,QAAAA,OAAO,EAAE,IAFO;AAGhBC,QAAAA,SAAS,EAAE,IAHK;AAIhBC,QAAAA,SAAS,EAAE,KAJK;AAKhBC,QAAAA,OAAO,EAAE,KALO;AAMhBC,QAAAA,SAAS,EAAE,KANK;AAOhBC,QAAAA,IAAI,EAAE,EAPU;AAQhBC,QAAAA,QAAQ,EACR;AACIlC,UAAAA,IAAI,EAAE,IADV;AAEIC,UAAAA,QAAQ,EAAE,EAFd;AAGIkC,UAAAA,KAAK,EAAE,EAHX;AAIIC,UAAAA,MAAM,EAAE,CAAC,CAJb;AAKIC,UAAAA,KAAK,EAAE,CAAC;AALZ,SATgB;AAgBhBC,QAAAA,MAAM,EAAE,EAhBQ,CAmBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7FwB,OAApB;AA+FH,KAlGD,MAmGK;AACDf,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAKE,QAAL,mBAAmB,KAAKrB,SAAL,EAAnB;AAAqCkC,QAAAA,OAAO,EAAE;AAA9C;AACAlD,MAAAA,OAAO,CAACmD,KAAR,CAAc,OAAd;AACH;AAOJ;;AACD7B,EAAAA,QAAQ,GAAG;AACP;AACA,SAAKf,KAAL,CAAW8B,QAAX,CAAoB;AAAEC,MAAAA,SAAS,EAAE,KAAb;AAAoBE,MAAAA,SAAS,EAAE,IAA/B;AAAqCD,MAAAA,OAAO,EAAE;AAA9C,KAApB;AACH;;AACDnB,EAAAA,KAAK,GAAG;AACJ,SAAKiB,QAAL,CAAc;AAAE5B,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,SAAKF,KAAL,CAAWa,KAAX;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,SAAKgB,QAAL,CAAc;AAAEvB,MAAAA,IAAI,EAAE;AAAR,KAAd;AACH;;AACDE,EAAAA,SAAS,GAAG;AACR,WAAO;AACHQ,MAAAA,IAAI,EAAE,KAAK4B,SAAL,CAAe,GAAf,EAAoB,EAApB,EAAwB,CAAxB,CADH;AAEHC,MAAAA,MAAM,EAAE,KAAKD,SAAL,CAAe,EAAf,EAAmB,CAAC,EAApB,EAAwB,CAAxB,CAFL;AAGHE,MAAAA,EAAE,EAAE,KAAKF,SAAL,CAAe,EAAf,EAAmB,EAAnB,EAAuB,CAAvB,CAHD;AAIHG,MAAAA,KAAK,EAAE,CAAC,KAAKH,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAAD,EAA8B,KAAKA,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAA9B,EAA2D,KAAKA,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAA3D,EAAwF,KAAKA,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAAxF;AAJJ,KAAP;AAMH;;AAEDA,EAAAA,SAAS,CAACI,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgB;AACrB,UAAMC,QAAQ,GAAG,CAAC,EAAEC,IAAI,CAACC,MAAL,MAAiBL,GAAG,GAAGC,GAAN,GAAY,CAA7B,IAAkCA,GAApC,CAAlB;;AACA,QAAI,CAACK,OAAO,CAACJ,GAAD,CAAZ,EAAmB;AACf,aAAOC,QAAP;AACH;;AACD,UAAMI,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAApB,EAAyBM,CAAC,EAA1B,EAA8B;AAC1BD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAKb,SAAL,CAAeI,GAAf,EAAoBC,GAApB,CAAT;AACH;;AACD,WAAOM,GAAP;AACH;;AACDG,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR,oBAAC,KAAD;AACI,MAAA,KAAK,EACD,oBAAC,QAAD;AAAU,QAAA,OAAO,EACb,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAC,GAAf;AAAmB,UAAA,OAAO,EAAE,MAAM,KAAK9B,QAAL,CAAc;AAAE3B,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAC,GAAf;AAAmB,UAAA,OAAO,EAAE,MAAM,KAAK2B,QAAL,CAAc;AAAE3B,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,EAGI,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAC,GAAf;AAAmB,UAAA,OAAO,EAAE,MAAM,KAAK2B,QAAL,CAAc;AAAE3B,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHJ,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEK,KAAKF,KAAL,CAAWE,MAAX,IAAqB,CAArB,IAA0B,IAF/B,EAGK,KAAKF,KAAL,CAAWE,MAAX,IAAqB,CAArB,IAA0B,KAH/B,EAIK,KAAKF,KAAL,CAAWE,MAAX,IAAqB,CAArB,IAA0B,KAJ/B,CANJ,CAFR;AAeI,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OAfxB;AAgBI,MAAA,IAAI,EAAE,KAAK2D,cAhBf;AAiBI,MAAA,QAAQ,EAAE,KAAKhD,KAjBnB;AAkBI,MAAA,MAAM,EAAE,CACJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,cAAZ;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,OAAO,EAAE,KAAKA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADI,EAIJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,cAAZ;AAAiB,QAAA,IAAI,EAAC,SAAtB;AAAgC,QAAA,OAAO,EAAE,KAAKF,OAA9C;AAAuD,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWO,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,KAAK,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,iBAJI,CAlBZ;AA2BI,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC,OA3BxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA6BI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,UAAV;AAAqB,MAAA,WAAW,EAAC,gBAAjC;AAAwC,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,MAAX,IAAmB,GAAnB,GAAuB,MAAvB,GAA8B,OAAnF;AAA4F,MAAA,UAAU,MAAtG;AAAuG,MAAA,QAAQ,EAAG2D,CAAD,IAAO;AAAE,aAAKhC,QAAL,CAAc;AAAEzB,UAAAA,QAAQ,EAAEyD,CAAC,CAACC,MAAF,CAASC;AAArB,SAAd;AAA6C,OAAvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BJ,EA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,EA+BI,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,EAAE,EAAC,UAAnB;AAA8B,MAAA,WAAW,EAAC,gBAA1C;AAAiD,MAAA,WAAW,EAAE,KAAK/D,KAAL,CAAWE,MAAX,IAAmB,GAAnB,GAAuB,OAAvB,GAA+B,OAA7F;AAAsG,MAAA,UAAU,MAAhH;AAAiH,MAAA,QAAQ,EAAG2D,CAAD,IAAO;AAAE,aAAKhC,QAAL,CAAc;AAAExB,UAAAA,QAAQ,EAAEwD,CAAC,CAACC,MAAF,CAASC;AAArB,SAAd;AAA6C,OAAjL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BJ,EAgCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCJ,EAiCI;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAd;AAA4B,MAAA,WAAW,EAAC,oBAAxC;AAA8C,MAAA,WAAW,EAAC,sCAA1D;AAAmE,MAAA,QAAQ,EAAGJ,CAAD,IAAO;AAAE,aAAKhC,QAAL,CAAc;AAAEpB,UAAAA,UAAU,EAAEoD,CAAC,CAACC,MAAF,CAASC;AAAvB,SAAd;AAA+C,OAArI;AACA,MAAA,MAAM,EACF;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE,EAAtB;AAA0BC,UAAAA,eAAe,gBAASxE,EAAT,MAAzC;AAAyDyE,UAAAA,SAAS,EAAE;AAApE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKpE,KAAL,CAAWgB,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,CAAD,EAAIsC,CAAJ,KACjB;AACI,QAAA,GAAG,EAAEA,CADT;AAEI,QAAA,SAAS,EAAC,SAFd;AAGI,QAAA,KAAK,EAAE;AACHa,UAAAA,SAAS,kBAAW,KAAKrE,KAAL,CAAW6C,MAAX,CAAkBW,CAAlB,CAAX,SADN;AAEHc,UAAAA,QAAQ,YAAK,KAAKtE,KAAL,CAAW8C,EAAX,CAAcU,CAAd,CAAL,OAFL;AAGHT,UAAAA,KAAK,gBAAS,KAAK/C,KAAL,CAAW+C,KAAX,CAAiBS,CAAjB,EAAoBe,QAApB,EAAT,MAHF;AAIHC,UAAAA,OAAO,EAAE;AAJN,SAHX;AASI,QAAA,YAAY,EAAE,MAAM,KAAK3C,QAAL,CAAc;AAAEa,UAAAA,OAAO,EAAE;AAAX,SAAd,CATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUKvB,MAAM,CAACC,YAAP,CAAoBF,CAAC,GAAG,EAAJ,IAAUA,CAAC,GAAG,EAAd,GAAmBA,CAAC,GAAG,CAAvB,GAA4BA,CAAC,GAAG,EAAJ,GAASA,CAAT,GAAaA,CAAC,GAAG,EAAjE,CAVL,aADH,CADD,EAeC,KAAKlB,KAAL,CAAW0C,OAAX,GAEG;AACI,QAAA,SAAS,EAAC,MADd;AAEI,QAAA,OAAO,EAAE,MAAM;AACX,eAAKb,QAAL,mBAAmB,KAAKrB,SAAL,EAAnB;AAAqCkC,YAAAA,OAAO,EAAE;AAA9C;AACH,SAJL;AAKI,QAAA,YAAY,EAAE,MAAM;AAAE,eAAKb,QAAL,CAAc;AAAEa,YAAAA,OAAO,EAAE;AAAX,WAAd;AAAmC,SAL7D;AAMI,QAAA,KAAK,EAAE;AAAE4B,UAAAA,QAAQ,EAAE;AAAZ,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAFH,GAYG,IA3BJ,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAjCJ,EAsEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,EACC,KAAKtE,KAAL,CAAWE,MAAX,IAAmB,GAAnB,GACG;AAAG,MAAA,OAAO,EAAE,MAAI;AAAC,aAAK2B,QAAL,CAAc;AAAC3B,UAAAA,MAAM,EAAC,GAAR;AAAYI,UAAAA,IAAI,EAAC;AAAjB,SAAd;AAAsC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADH,GAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJT,CAtEJ,CADQ,CAAZ;AAiFA,QAAImE,IAAI,GAAG;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,kDADV;AAEI,MAAA,OAAO,EAAE,KAAKzE,KAAL,CAAWC,OAFxB;AAGI,MAAA,IAAI,EAAE,KAAK2D,cAHf;AAII,MAAA,QAAQ,EAAE,KAAKhD,KAJnB;AAKI,MAAA,MAAM,EAAE,CACJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,cAAZ;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,OAAO,EAAE,KAAKA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADI,EAIJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,cAAZ;AAAiB,QAAA,IAAI,EAAC,SAAtB;AAAgC,QAAA,OAAO,EAAE,KAAKF,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJI,CALZ;AAaI,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWC,OAbxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,UAAV;AAAqB,MAAA,WAAW,EAAC,gBAAjC;AAAwC,MAAA,WAAW,EAAC,gCAApD;AAA4D,MAAA,UAAU,MAAtE;AAAuE,MAAA,QAAQ,EAAE,CAACyE,CAAD,EAAIxD,CAAJ,KAAU;AAAE,aAAKW,QAAL,CAAc;AAAEzB,UAAAA,QAAQ,EAAEc;AAAZ,SAAd;AAAgC,OAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,EAiBI,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,EAAE,EAAC,UAAnB;AAA8B,MAAA,WAAW,EAAC,gBAA1C;AAAiD,MAAA,WAAW,EAAC,gCAA7D;AAAqE,MAAA,UAAU,MAA/E;AAAgF,MAAA,QAAQ,EAAE,CAACwD,CAAD,EAAIxD,CAAJ,KAAU;AAAE,aAAKW,QAAL,CAAc;AAAExB,UAAAA,QAAQ,EAAEa;AAAZ,SAAd;AAAgC,OAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAlBJ,EAmBI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAC+C,QAAAA,KAAK,EAAC;AAAP,OAAd;AAA4B,MAAA,WAAW,EAAC,oBAAxC;AAA8C,MAAA,WAAW,EAAC,sCAA1D;AAAmE,MAAA,QAAQ,EAAGJ,CAAD,IAAO;AAAE,aAAKhC,QAAL,CAAc;AAAEpB,UAAAA,UAAU,EAAEoD,CAAC,CAACC,MAAF,CAASC;AAAvB,SAAd;AAA+C,OAArI;AACI,MAAA,MAAM,EACF;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE,EAAtB;AAA0BC,UAAAA,eAAe,gBAASxE,EAAT,MAAzC;AAAyDyE,UAAAA,SAAS,EAAE;AAApE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKpE,KAAL,CAAWgB,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,CAAD,EAAIsC,CAAJ,KACjB;AACI,QAAA,GAAG,EAAEA,CADT;AAEI,QAAA,SAAS,EAAC,SAFd;AAGI,QAAA,KAAK,EAAE;AACHa,UAAAA,SAAS,kBAAW,KAAKrE,KAAL,CAAW6C,MAAX,CAAkBW,CAAlB,CAAX,SADN;AAEHc,UAAAA,QAAQ,YAAK,KAAKtE,KAAL,CAAW8C,EAAX,CAAcU,CAAd,CAAL,OAFL;AAGHT,UAAAA,KAAK,gBAAS,KAAK/C,KAAL,CAAW+C,KAAX,CAAiBS,CAAjB,EAAoBe,QAApB,EAAT,MAHF;AAIHC,UAAAA,OAAO,EAAE;AAJN,SAHX;AASI,QAAA,YAAY,EAAE,MAAM,KAAK3C,QAAL,CAAc;AAAEa,UAAAA,OAAO,EAAE;AAAX,SAAd,CATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUKvB,MAAM,CAACC,YAAP,CAAoBF,CAAC,GAAG,EAAJ,IAAUA,CAAC,GAAG,EAAd,GAAmBA,CAAC,GAAG,CAAvB,GAA4BA,CAAC,GAAG,EAAJ,GAASA,CAAT,GAAaA,CAAC,GAAG,EAAjE,CAVL,aADH,CADD,EAeC,KAAKlB,KAAL,CAAW0C,OAAX,GAEG;AACI,QAAA,SAAS,EAAC,MADd;AAEI,QAAA,OAAO,EAAE,MAAM;AACX,eAAKb,QAAL,mBAAmB,KAAKrB,SAAL,EAAnB;AAAqCkC,YAAAA,OAAO,EAAE;AAA9C;AACH,SAJL;AAKI,QAAA,YAAY,EAAE,MAAM;AAAE,eAAKb,QAAL,CAAc;AAAEa,YAAAA,OAAO,EAAE;AAAX,WAAd;AAAmC,SAL7D;AAMI,QAAA,KAAK,EAAE;AAAE4B,UAAAA,QAAQ,EAAE;AAAZ,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAFH,GAYG,IA3BJ,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,EAqDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArDJ,CADO,CAAX;AAyDA,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKtE,KAAL,CAAWM,IAAX,IAAmB,IAAnB,GAA0BqD,KAA1B,GAAkCc,IADvC,CADJ;AAKH;;AA1ToC;;AA6TzC,eAAe7E,UAAf","sourcesContent":["import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport { Icon, Button, Input, Modal, message, Dropdown, Menu } from 'antd';\r\nimport bg from '../../img/VerifyCodeBG.png'\r\n\r\nclass LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: true,\r\n            attemp: \"0\",\r\n            name: \"\",\r\n            username: '',\r\n            password: '',\r\n            toDo: \"登录\",\r\n            posted: false,\r\n            ...this.initState(),\r\n            inputValue: \"\",\r\n        }\r\n        this.ToLogin = this.ToLogin.bind(this);\r\n        this.close = this.close.bind(this);\r\n        this.signin = this.signin.bind(this);\r\n        this.ToSignin = this.ToSignin.bind(this);\r\n    }\r\n    ToLogin() {\r\n        // this.setState({ posted: true })\r\n        let code = this.state.data.map((v) => String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13)));\r\n        let codeString = code.join(\"\");\r\n        let that = this;\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        let identity = this.state.attemp;\r\n        //暂时的登陆函数\r\n        if (codeString.toLowerCase() == that.state.inputValue.toLowerCase()||1) {\r\n            console.log(\"login\");\r\n            message.success(\"登录成功！\");\r\n            that.props.setState({\r\n                isWelcome: false,\r\n                isLogin: true,\r\n                isStudent: true,\r\n                isAllDone: false,\r\n                isAdmin: false,\r\n                isTeacher: false,\r\n                host: \"\",\r\n                userInfo:\r\n                {\r\n                    name: '菜鸡',\r\n                    username: \"\",\r\n                    token: '',\r\n                    access: -1,\r\n                    score: -1\r\n                },\r\n                answer: []\r\n                \r\n\r\n        // fetch('http://' + that.props.state.host + '/api/ui/login', {\r\n        //     method: 'POST',\r\n        //     mode: 'cors',\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        //     },\r\n        //     body: JSON.stringify({\r\n        //         Username: username,\r\n        //         Password: password,\r\n        //         Identity: identity\r\n        //     })\r\n        // }).then(\r\n        //     async res => {\r\n        //         if (res.status == 404) {\r\n        //             message.error(\"学号不存在\");\r\n        //         }\r\n        //         else if (res.status == 204) {\r\n        //             message.error(\"用户名或密码错误\");\r\n        //         }\r\n        //         else {\r\n        //             //学生登陆成功\r\n        //             let data = await res.json();\r\n        //             this.setState({ posted: false })\r\n        //             console.log(\"login\");\r\n        //             message.success(\"登录成功！\");\r\n        //             if (identity == \"0\") {\r\n        //                 if (data.Score == -1) {\r\n        //                     that.props.setState({\r\n        //                         isWelcome: false,\r\n        //                         isStudent: true,\r\n        //                         isAllDone: false,\r\n        //                         isLogin: true,\r\n        //                         username: this.state.username,\r\n        //                         userInfo: {\r\n        //                             name: data.Name,\r\n        //                             score: data.Score,\r\n        //                             access: 0\r\n        //                         }\r\n        //                     });\r\n        //                 }\r\n        //                 else {\r\n        //                     that.props.setState({\r\n        //                         isWelcome: false,\r\n        //                         isStudent: true,\r\n        //                         isAllDone: true,\r\n        //                         isLogin: true,\r\n        //                         username: this.state.username,\r\n        //                         userInfo: {\r\n        //                             name: data.Name,\r\n        //                             score: data.Score,\r\n        //                             access: 0\r\n        //                         }\r\n        //                     })\r\n        //                 }\r\n        //             }\r\n        //             else if (identity == \"2\") {\r\n        //                 that.props.setState({\r\n        //                     isWelcome: false,\r\n        //                     isTeacher: true,\r\n        //                     userInfo: {\r\n        //                         access: 2\r\n        //                     }\r\n        //                 })\r\n        //             }\r\n        //             else if (identity == \"1\") {\r\n        //                 that.props.setState({\r\n        //                     isWelcome: false,\r\n        //                     isAdmin: true,\r\n        //                     userInfo: {\r\n        //                         access: 1\r\n        //                     }\r\n        //                 })\r\n        //             }\r\n        //         }\r\n        //     })\r\n            })\r\n        }\r\n        else {\r\n            console.log(\"false\");\r\n            this.setState({ ...this.initState(), refresh: false });\r\n            message.error(\"验证码错误\")\r\n        }\r\n\r\n\r\n\r\n       \r\n\r\n\r\n    }\r\n    ToSignin() {\r\n        //暂时的注册函数\r\n        this.props.setState({ isWelcome: false, isStudent: true, isLogin: true });\r\n    }\r\n    close() {\r\n        this.setState({ visible: false });\r\n        this.props.close();\r\n    }\r\n    signin() {\r\n        this.setState({ toDo: \"注册\" });\r\n    }\r\n    initState() {\r\n        return {\r\n            data: this.getRandom(109, 48, 4),\r\n            rotate: this.getRandom(60, -60, 4),\r\n            fz: this.getRandom(15, 25, 4),\r\n            color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\r\n        }\r\n    }\r\n\r\n    getRandom(max, min, num) {\r\n        const asciiNum = ~~(Math.random() * (max - min + 1) + min)\r\n        if (!Boolean(num)) {\r\n            return asciiNum\r\n        }\r\n        const arr = []\r\n        for (let i = 0; i < num; i++) {\r\n            arr.push(this.getRandom(max, min))\r\n        }\r\n        return arr\r\n    }\r\n    render() {\r\n        let login = <div id='modal'>\r\n            <Modal\r\n                title={\r\n                    <Dropdown overlay={\r\n                        <Menu>\r\n                            <Menu.Item key=\"1\" onClick={() => this.setState({ attemp: \"0\" })}>学生</Menu.Item>\r\n                            <Menu.Item key=\"2\" onClick={() => this.setState({ attemp: \"2\" })}>辅导员</Menu.Item>\r\n                            <Menu.Item key=\"3\" onClick={() => this.setState({ attemp: \"1\" })}>管理员</Menu.Item>\r\n                        </Menu >}>\r\n                        <Button type=\"defult\">\r\n                            <Icon type=\"down\" />\r\n                            {this.state.attemp == 0 && \"学生\"}\r\n                            {this.state.attemp == 2 && \"辅导员\"}\r\n                            {this.state.attemp == 1 && \"管理员\"}\r\n                        </Button>\r\n                    </Dropdown>}\r\n                visible={this.state.visible}\r\n                onOk={this.StudentToLogin}\r\n                onCancel={this.close}\r\n                footer={[\r\n                    <Button key=\"返回\" type=\"defult\" onClick={this.close}>\r\n                        返回\r\n              </Button>,\r\n                    <Button key=\"登录\" type=\"primary\" onClick={this.ToLogin} loading={this.state.posted}>\r\n                        <Icon type=\"check-circle\" theme=\"twoTone\" />\r\n                        登录\r\n              </Button>\r\n                ]}\r\n                visible={this.state.visible}\r\n            >\r\n                <Input id=\"username\" addonBefore=\" 账户 \" placeholder={this.state.attemp==\"0\"?\"八位学号\":\"管理员账户\"} allowClear onChange={(e) => { this.setState({ username: e.target.value }) }}></Input>\r\n                <p></p>\r\n                <Input.Password id=\"password\" addonBefore=\" 密码 \" placeholder={this.state.attemp==\"0\"?\"一卡通号码\":\"管理员密码\"} allowClear onChange={(e) => { this.setState({ password: e.target.value }) }} />\r\n                <p></p>\r\n                <p style={{ marginRight: 0 }}>\r\n                    <Input style={{width:\"70%\"}}addonBefore=\"验证码\" placeholder=\"不区分大小写\" onChange={(e) => { this.setState({ inputValue: e.target.value }) }} \r\n                    suffix ={\r\n                        <div style={{ width: 120, height: 30, backgroundImage: `url(${bg})`, textAlign: \"center\" }} >\r\n                        {this.state.data.map((v, i) =>\r\n                            <div\r\n                                key={i}\r\n                                className='itemStr'\r\n                                style={{\r\n                                    transform: `skewX(${this.state.rotate[i]}deg)`,\r\n                                    fontSize: `${this.state.fz[i]}px`,\r\n                                    color: `rgb(${this.state.color[i].toString()})`,\r\n                                    display: 'inline-block'\r\n                                }}\r\n                                onMouseEnter={() => this.setState({ refresh: true })}>\r\n                                {String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13))}&nbsp;&nbsp;\r\n                                 </div>\r\n                        )}\r\n                        {this.state.refresh\r\n                            ?\r\n                            <div\r\n                                className='mask'\r\n                                onClick={() => {\r\n                                    this.setState({ ...this.initState(), refresh: false })\r\n                                }}\r\n                                onMouseLeave={() => { this.setState({ refresh: false }) }}\r\n                                style={{ fontSize: \"10px\" }}>\r\n                                看不清？点击此处刷新\r\n                                </div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                    }>\r\n                    </Input>\r\n                    \r\n                </p>\r\n                <p > <br></br>\r\n                {this.state.attemp==\"0\"?\r\n                    <a onClick={()=>{this.setState({attemp:\"1\",toDo:\"注册\"})}}>\r\n                        &nbsp;&nbsp;没有账号?\r\n                    </a>:<div/>}\r\n                </p>\r\n\r\n            </Modal>\r\n        </div>\r\n\r\n        let sign = <div id='modal'>\r\n            <Modal\r\n                title=\"注册需管理员登录\"\r\n                visible={this.state.visible}\r\n                onOk={this.StudentToLogin}\r\n                onCancel={this.close}\r\n                footer={[\r\n                    <Button key=\"返回\" type=\"defult\" onClick={this.close}>\r\n                        返回\r\n              </Button>,\r\n                    <Button key=\"注册\" type=\"primary\" onClick={this.ToLogin}>\r\n                        登录\r\n              </Button>\r\n                ]}\r\n                visible={this.state.visible}\r\n            >\r\n                <Input id=\"username\" addonBefore=\" 账户 \" placeholder=\"管理员账户\" allowClear onChange={(x, v) => { this.setState({ username: v }) }}></Input>\r\n                <p></p>\r\n                <Input.Password id=\"password\" addonBefore=\" 密码 \" placeholder=\"管理员密码\" allowClear onChange={(x, v) => { this.setState({ password: v }) }} />\r\n                <p> </p>\r\n                <Input style={{width:\"70%\"}}addonBefore=\"验证码\" placeholder=\"不区分大小写\" onChange={(e) => { this.setState({ inputValue: e.target.value }) }} \r\n                    suffix ={\r\n                        <div style={{ width: 120, height: 30, backgroundImage: `url(${bg})`, textAlign: \"center\" }} >\r\n                        {this.state.data.map((v, i) =>\r\n                            <div\r\n                                key={i}\r\n                                className='itemStr'\r\n                                style={{\r\n                                    transform: `skewX(${this.state.rotate[i]}deg)`,\r\n                                    fontSize: `${this.state.fz[i]}px`,\r\n                                    color: `rgb(${this.state.color[i].toString()})`,\r\n                                    display: 'inline-block'\r\n                                }}\r\n                                onMouseEnter={() => this.setState({ refresh: true })}>\r\n                                {String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13))}&nbsp;&nbsp;\r\n                                 </div>\r\n                        )}\r\n                        {this.state.refresh\r\n                            ?\r\n                            <div\r\n                                className='mask'\r\n                                onClick={() => {\r\n                                    this.setState({ ...this.initState(), refresh: false })\r\n                                }}\r\n                                onMouseLeave={() => { this.setState({ refresh: false }) }}\r\n                                style={{ fontSize: \"10px\" }}>\r\n                                看不清？点击此处刷新\r\n                                </div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                    }>\r\n                    </Input>\r\n                <br></br>\r\n            </Modal>\r\n        </div>\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.toDo == \"登录\" ? login : sign}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginModal;"]},"metadata":{},"sourceType":"module"}