{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\projects\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _defineProperty from \"E:\\\\projects\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"E:\\\\projects\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:\\\\projects\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\projects\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\projects\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\projects\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\projects\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"E:\\\\projects\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\projects\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\projects\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\src\\\\Components\\\\LoginModal\\\\LoginModal.js\";\nimport React from 'react';\nimport \"antd/dist/antd.css\";\nimport { Icon, Button, Input, Modal, message, Dropdown, Menu } from 'antd';\nimport bg from '../../img/VerifyCodeBG.png';\nimport QueueAnim from 'rc-queue-anim';\n\nvar LoginModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginModal, _React$Component);\n\n  function LoginModal(props) {\n    var _this;\n\n    _classCallCheck(this, LoginModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginModal).call(this, props));\n    _this.state = _objectSpread({\n      visible: true,\n      attemp: \"0\",\n      username: '09018316',\n      password: '213181432',\n      toDo: \"登录\",\n      posted: false\n    }, _this.initState(), {\n      inputValue: \"\"\n    });\n    _this.ToLogin = _this.ToLogin.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    _this.signin = _this.signin.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LoginModal, [{\n    key: \"ToLogin\",\n    value: function ToLogin() {\n      var _this2 = this;\n\n      // this.setState({ posted: true })\n      var code = this.state.data.map(function (v) {\n        return String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13);\n      });\n      var codeString = code.join(\"\");\n      var that = this;\n      var username = this.state.username;\n      var password = this.state.password;\n      var identity = this.state.attemp; //暂时的登陆函数\n\n      if (codeString.toLowerCase() == that.state.inputValue.toLowerCase()) {\n        // console.log(\"login\");\n        // message.success(\"登录成功！\");\n        // that.props.setState({\n        //     isWelcome: false,\n        //     isLogin: true,\n        //     isStudent: true,\n        //     isAllDone: false,\n        //     isAdmin: false,\n        //     isTeacher: false,\n        //     host: \"\",\n        //         name: '菜鸡',\n        //         username: \"\",\n        //         token: '',\n        //         access: -1,\n        //         score: -1\n        //     answer: []\n        // })\n        if (username.length == 8 && password.length == 9) {\n          this.setState({\n            posted: true\n          });\n          fetch(\"http://\" + that.props.host + '/api/ui/login', {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              Username: username,\n              Password: password,\n              Identity: identity\n            })\n          }).then(\n          /*#__PURE__*/\n          function () {\n            var _ref = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee(res) {\n              var data, _that$props$setState;\n\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      that.setState({\n                        posted: false\n                      });\n\n                      if (!(res.status == 404 || res.status == 500)) {\n                        _context.next = 6;\n                        break;\n                      }\n\n                      _this2.setState(_objectSpread({}, _this2.initState(), {\n                        refresh: false\n                      }));\n\n                      message.error(\"用户名不存在!\", 1);\n                      _context.next = 17;\n                      break;\n\n                    case 6:\n                      if (!(res.status == 403)) {\n                        _context.next = 11;\n                        break;\n                      }\n\n                      _this2.setState(_objectSpread({}, _this2.initState(), {\n                        refresh: false\n                      }));\n\n                      message.error(\"用户名或密码错误!\", 1);\n                      _context.next = 17;\n                      break;\n\n                    case 11:\n                      _context.next = 13;\n                      return res.json();\n\n                    case 13:\n                      data = _context.sent;\n                      console.log(\"login!\");\n                      message.success(\"登录成功\", 1.0);\n\n                      if (identity == \"0\") {\n                        if (data.Score == -1) {\n                          that.props.setState((_that$props$setState = {\n                            isWelcome: false,\n                            isStudent: true,\n                            isLogin: true,\n                            username: _this2.state.username,\n                            token: data.Token\n                          }, _defineProperty(_that$props$setState, \"username\", _this2.state.username), _defineProperty(_that$props$setState, \"name\", data.Name), _defineProperty(_that$props$setState, \"score\", data.Score), _defineProperty(_that$props$setState, \"token\", data.Token), _defineProperty(_that$props$setState, \"access\", 0), _that$props$setState)); // that.props.setState({\n                          //     isWelcome: false,\n                          //     isStudent: true,\n                          //     isLogin: true,\n                          //         score: data.Score,\n                          // })\n                        } else {\n                          that.props.setState({\n                            isWelcome: false,\n                            isStudent: true,\n                            isLogin: true,\n                            username: _this2.state.username,\n                            score: data.Score,\n                            name: data.Name,\n                            token: data.Token,\n                            access: 0\n                          }); // that.props.setState({\n                          //     isWelcome: false,\n                          //     isStudent: true,\n                          //     isLogin: true,\n                          //         score: data.Score,\n                          // })\n                        }\n                      } else if (identity == \"2\") {\n                        that.props.setState({\n                          isWelcome: false,\n                          isTeacher: true,\n                          token: data.Token,\n                          name: data.Name,\n                          username: _this2.state.username,\n                          departId: data.Id,\n                          depart: data.Department,\n                          access: 2\n                        });\n                      } else if (identity == \"1\") {\n                        that.props.setState({\n                          isWelcome: false,\n                          isAdmin: true,\n                          token: data.Token,\n                          name: data.Name,\n                          username: _this2.state.username,\n                          access: 1\n                        });\n                      }\n\n                    case 17:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }()).catch(function (err) {\n            console.log(err);\n          });\n        } else {\n          this.setState(_objectSpread({}, this.initState(), {\n            refresh: false\n          }));\n          message.error(\"账户或密码格式不符!\");\n        }\n      } else {\n        console.log(\"false\");\n        that.setState({\n          posted: false\n        });\n        this.setState(_objectSpread({}, this.initState(), {\n          refresh: false\n        }));\n        message.error(\"验证码错误\", 1);\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.setState({\n        visible: false\n      });\n      this.props.close();\n    }\n  }, {\n    key: \"signin\",\n    value: function signin() {\n      this.setState({\n        toDo: \"注册\"\n      });\n    }\n  }, {\n    key: \"initState\",\n    value: function initState() {\n      return {\n        data: this.getRandom(109, 48, 4),\n        rotate: this.getRandom(60, -60, 4),\n        fz: this.getRandom(15, 25, 4),\n        color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\n      };\n    }\n  }, {\n    key: \"getRandom\",\n    value: function getRandom(max, min, num) {\n      var asciiNum = ~~(Math.random() * (max - min + 1) + min);\n\n      if (!Boolean(num)) {\n        return asciiNum;\n      }\n\n      var arr = [];\n\n      for (var i = 0; i < num; i++) {\n        arr.push(this.getRandom(max, min));\n      }\n\n      return arr;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _React$createElement,\n          _React$createElement2;\n\n      var login = React.createElement(\"div\", {\n        id: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Modal, (_React$createElement = {\n        visible: this.props.visible,\n        closable: false,\n        destroyOnClose: true,\n        title: React.createElement(Dropdown, {\n          overlay: React.createElement(Menu, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, React.createElement(Menu.Item, {\n            key: \"1\",\n            onClick: function onClick() {\n              return _this3.setState({\n                attemp: \"0\"\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, \"\\u5B66\\u751F\"), React.createElement(Menu.Item, {\n            key: \"2\",\n            onClick: function onClick() {\n              return _this3.setState({\n                attemp: \"2\"\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, \"\\u8F85\\u5BFC\\u5458\"), React.createElement(Menu.Item, {\n            key: \"3\",\n            onClick: function onClick() {\n              return _this3.setState({\n                attemp: \"1\"\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, \"\\u7BA1\\u7406\\u5458\")),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"defult\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"down\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }), this.state.attemp == 0 && \"学生\", this.state.attemp == 2 && \"辅导员\", this.state.attemp == 1 && \"管理员\"))\n      }, _defineProperty(_React$createElement, \"visible\", this.state.visible), _defineProperty(_React$createElement, \"onOk\", this.StudentToLogin), _defineProperty(_React$createElement, \"onCancel\", this.close), _defineProperty(_React$createElement, \"footer\", [React.createElement(Button, {\n        key: \"\\u8FD4\\u56DE\",\n        type: \"defult\",\n        onClick: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"), React.createElement(Button, {\n        key: \"\\u767B\\u5F55\",\n        type: \"primary\",\n        onClick: this.ToLogin,\n        loading: this.state.posted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"check-circle\",\n        theme: \"twoTone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), \"\\u767B\\u5F55\")]), _defineProperty(_React$createElement, \"visible\", this.state.visible), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(QueueAnim, {\n        delay: 180,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Input, {\n        key: \"username\",\n        id: \"username\",\n        addonBefore: \" \\u8D26\\u6237 \",\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }),\n        placeholder: this.state.attemp == \"0\" ? \"八位学号\" : \"管理员账户\",\n        allowClear: true,\n        onChange: function onChange(e) {\n          _this3.setState({\n            username: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(QueueAnim, {\n        delay: 180,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Input.Password, {\n        key: \"password\",\n        id: \"password\",\n        addonBefore: \" \\u5BC6\\u7801 \",\n        onPressEnter: this.ToLogin,\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }),\n        placeholder: this.state.attemp == \"0\" ? \"一卡通号码\" : \"管理员密码\",\n        allowClear: true,\n        onChange: function onChange(e) {\n          _this3.setState({\n            password: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(QueueAnim, {\n        delay: 180,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        key: \"check\",\n        style: {\n          marginRight: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: \"70%\"\n        },\n        addonBefore: \"\\u9A8C\\u8BC1\\u7801\",\n        onPressEnter: this.ToLogin,\n        placeholder: \"\\u4E0D\\u533A\\u5206\\u5927\\u5C0F\\u5199\",\n        onChange: function onChange(e) {\n          _this3.setState({\n            inputValue: e.target.value\n          });\n        },\n        suffix: React.createElement(\"div\", {\n          style: {\n            width: 120,\n            height: 30,\n            backgroundImage: \"url(\".concat(bg, \")\"),\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, this.state.data.map(function (v, i) {\n          return React.createElement(\"div\", {\n            key: i,\n            className: \"itemStr\",\n            style: {\n              transform: \"skewX(\".concat(_this3.state.rotate[i], \"deg)\"),\n              fontSize: \"\".concat(_this3.state.fz[i], \"px\"),\n              color: \"rgb(\".concat(_this3.state.color[i].toString(), \")\"),\n              display: 'inline-block',\n              MozUserSelect: '-moz-none',\n              KhtmlUserSelect: 'none',\n              WebkitUserSelect: 'none',\n              msUserSelect: 'none',\n              userSelect: 'none'\n            },\n            onMouseEnter: function onMouseEnter() {\n              return _this3.setState({\n                refresh: true\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            },\n            __self: this\n          }, String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13), \"\\xA0\\xA0\");\n        }), this.state.refresh ? React.createElement(\"div\", {\n          className: \"mask\",\n          onClick: function onClick() {\n            _this3.setState(_objectSpread({}, _this3.initState(), {\n              refresh: false\n            }));\n          },\n          onMouseLeave: function onMouseLeave() {\n            _this3.setState({\n              refresh: false\n            });\n          },\n          style: {\n            fontSize: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, \"\\u770B\\u4E0D\\u6E05\\uFF1F\\u70B9\\u51FB\\u6B64\\u5904\\u5237\\u65B0\") : null),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), this.state.attemp == \"0\" ? React.createElement(\"a\", {\n        onClick: function onClick() {\n          _this3.setState({\n            attemp: \"1\",\n            toDo: \"注册\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\u6CA1\\u6709\\u8D26\\u53F7?\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }))));\n      var sign = React.createElement(\"div\", {\n        id: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Modal, (_React$createElement2 = {\n        title: \"\\u6CE8\\u518C\\u9700\\u7BA1\\u7406\\u5458\\u767B\\u5F55\",\n        visible: this.state.visible,\n        onOk: this.StudentToLogin,\n        onCancel: this.close,\n        footer: [React.createElement(Button, {\n          key: \"\\u8FD4\\u56DE\",\n          type: \"defult\",\n          onClick: this.close,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, \"\\u8FD4\\u56DE\"), React.createElement(Button, {\n          key: \"\\u6CE8\\u518C\",\n          type: \"primary\",\n          onClick: this.ToLogin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, \"\\u767B\\u5F55\")]\n      }, _defineProperty(_React$createElement2, \"visible\", this.state.visible), _defineProperty(_React$createElement2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2), React.createElement(Input, {\n        id: \"username\",\n        addonBefore: \" \\u8D26\\u6237 \",\n        placeholder: \"\\u7BA1\\u7406\\u5458\\u8D26\\u6237\",\n        allowClear: true,\n        onChange: function onChange(x, v) {\n          _this3.setState({\n            username: v\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }), React.createElement(Input.Password, {\n        id: \"password\",\n        addonBefore: \" \\u5BC6\\u7801 \",\n        onPressEnter: this.ToLogin,\n        placeholder: \"\\u7BA1\\u7406\\u5458\\u5BC6\\u7801\",\n        allowClear: true,\n        onChange: function onChange(x, v) {\n          _this3.setState({\n            password: v\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \" \"), React.createElement(Input, {\n        style: {\n          width: \"70%\"\n        },\n        addonBefore: \"\\u9A8C\\u8BC1\\u7801\",\n        onPressEnter: this.ToLogin,\n        placeholder: \"\\u4E0D\\u533A\\u5206\\u5927\\u5C0F\\u5199\",\n        onChange: function onChange(e) {\n          _this3.setState({\n            inputValue: e.target.value\n          });\n        },\n        suffix: React.createElement(\"div\", {\n          style: {\n            width: 120,\n            height: 30,\n            backgroundImage: \"url(\".concat(bg, \")\"),\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, this.state.data.map(function (v, i) {\n          return React.createElement(\"div\", {\n            key: i,\n            className: \"itemStr\",\n            style: {\n              transform: \"skewX(\".concat(_this3.state.rotate[i], \"deg)\"),\n              fontSize: \"\".concat(_this3.state.fz[i], \"px\"),\n              color: \"rgb(\".concat(_this3.state.color[i].toString(), \")\"),\n              display: 'inline-block'\n            },\n            onMouseEnter: function onMouseEnter() {\n              return _this3.setState({\n                refresh: true\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301\n            },\n            __self: this\n          }, String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13), \"\\xA0\\xA0\");\n        }), this.state.refresh ? React.createElement(\"div\", {\n          className: \"mask\",\n          onClick: function onClick() {\n            _this3.setState(_objectSpread({}, _this3.initState(), {\n              refresh: false\n            }));\n          },\n          onMouseLeave: function onMouseLeave() {\n            _this3.setState({\n              refresh: false\n            });\n          },\n          style: {\n            fontSize: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, \"\\u770B\\u4E0D\\u6E05\\uFF1F\\u70B9\\u51FB\\u6B64\\u5904\\u5237\\u65B0\") : null),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      })));\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, this.state.toDo == \"登录\" ? login : sign);\n    }\n  }]);\n\n  return LoginModal;\n}(React.Component);\n\nexport default LoginModal;","map":{"version":3,"sources":["E:\\projects\\HistoryContest-2019\\HistoryContest_2019_client\\src\\Components\\LoginModal\\LoginModal.js"],"names":["React","Icon","Button","Input","Modal","message","Dropdown","Menu","bg","QueueAnim","LoginModal","props","state","visible","attemp","username","password","toDo","posted","initState","inputValue","ToLogin","bind","close","signin","code","data","map","v","String","fromCharCode","codeString","join","that","identity","toLowerCase","length","setState","fetch","host","method","mode","headers","body","JSON","stringify","Username","Password","Identity","then","res","status","refresh","error","json","console","log","success","Score","isWelcome","isStudent","isLogin","token","Token","Name","score","name","access","isTeacher","departId","Id","depart","Department","isAdmin","catch","err","getRandom","rotate","fz","color","max","min","num","asciiNum","Math","random","Boolean","arr","i","push","login","StudentToLogin","e","target","value","marginRight","width","height","backgroundImage","textAlign","transform","fontSize","toString","display","MozUserSelect","KhtmlUserSelect","WebkitUserSelect","msUserSelect","userSelect","sign","x","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport { Icon, Button, Input, Modal, message, Dropdown, Menu } from 'antd';\r\nimport bg from '../../img/VerifyCodeBG.png'\r\nimport QueueAnim from 'rc-queue-anim';\r\nclass LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: true,\r\n            attemp: \"0\",\r\n            username: '09018316',\r\n            password: '213181432',\r\n            toDo: \"登录\",\r\n            posted: false,\r\n            ...this.initState(),\r\n            inputValue: \"\",\r\n        }\r\n        this.ToLogin = this.ToLogin.bind(this);\r\n        this.close = this.close.bind(this);\r\n        this.signin = this.signin.bind(this);\r\n    }\r\n    ToLogin() {\r\n        // this.setState({ posted: true })\r\n        let code = this.state.data.map((v) => String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13)));\r\n        let codeString = code.join(\"\");\r\n        let that = this;\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        let identity = this.state.attemp;\r\n        //暂时的登陆函数\r\n        if (codeString.toLowerCase() == that.state.inputValue.toLowerCase()) {\r\n            // console.log(\"login\");\r\n            // message.success(\"登录成功！\");\r\n            // that.props.setState({\r\n            //     isWelcome: false,\r\n            //     isLogin: true,\r\n            //     isStudent: true,\r\n            //     isAllDone: false,\r\n            //     isAdmin: false,\r\n            //     isTeacher: false,\r\n            //     host: \"\",\r\n            //         name: '菜鸡',\r\n            //         username: \"\",\r\n            //         token: '',\r\n            //         access: -1,\r\n            //         score: -1\r\n            //     answer: []\r\n            // })\r\n            if(username.length==8&&password.length==9){\r\n            this.setState({ posted: true })\r\n            fetch(\"http://\" + that.props.host + '/api/ui/login', {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    Username: username,\r\n                    Password: password,\r\n                    Identity: identity\r\n                })\r\n            }).then(\r\n                async res => {\r\n                    that.setState({ posted: false })\r\n                    if (res.status == 404||res.status==500) {\r\n                        this.setState({ ...this.initState(), refresh: false });\r\n                        message.error(\"用户名不存在!\",1);\r\n                    }\r\n                    else if (res.status == 403) {\r\n                        this.setState({ ...this.initState(), refresh: false });\r\n                        message.error(\"用户名或密码错误!\",1);\r\n                    }\r\n                    else {\r\n                        //学生登陆成功\r\n                        let data = await res.json();\r\n                        console.log(\"login!\");\r\n                        message.success(\"登录成功\",1.0);\r\n                        if (identity == \"0\") {\r\n                            if (data.Score == -1) {\r\n                                that.props.setState({\r\n                                    isWelcome: false,\r\n                                    isStudent: true,\r\n                                    isLogin: true,\r\n                                    username: this.state.username,\r\n                                    token: data.Token,\r\n                                    username: this.state.username,\r\n                                    name: data.Name,\r\n                                    score: data.Score,\r\n                                    token: data.Token,\r\n                                    access: 0\r\n\r\n                                });\r\n                                // that.props.setState({\r\n                                //     isWelcome: false,\r\n                                //     isStudent: true,\r\n                                //     isLogin: true,\r\n                                //         score: data.Score,\r\n\r\n                                // })\r\n                            }\r\n                            else {\r\n                                that.props.setState({\r\n                                    isWelcome: false,\r\n                                    isStudent: true,\r\n                                    isLogin: true,\r\n                                    username: this.state.username,\r\n                                    score: data.Score,\r\n                                    name: data.Name,\r\n                                    token: data.Token,\r\n                                    access: 0\r\n                                })\r\n                                // that.props.setState({\r\n                                //     isWelcome: false,\r\n                                //     isStudent: true,\r\n                                //     isLogin: true,\r\n                                //         score: data.Score,\r\n                                // })\r\n                            }\r\n                        }\r\n                        else if (identity == \"2\") {\r\n                            that.props.setState({\r\n                                isWelcome: false,\r\n                                isTeacher: true,\r\n                                token: data.Token,\r\n                                name: data.Name,\r\n                                username:this.state.username,\r\n                                departId: data.Id,\r\n                                depart: data.Department,\r\n                                access: 2\r\n                            })\r\n                        }\r\n                        else if (identity == \"1\") {\r\n                            that.props.setState({\r\n                                isWelcome: false,\r\n                                isAdmin: true,\r\n                                token: data.Token,\r\n                                name: data.Name,\r\n                                username:this.state.username,\r\n                                access: 1\r\n                            })\r\n                        }\r\n                    }\r\n                }).catch(err => { console.log(err) })\r\n\r\n        \r\n    }\r\n    else{\r\n        this.setState({ ...this.initState(), refresh: false });\r\n        message.error(\"账户或密码格式不符!\")\r\n    }}\r\n        else {\r\n            console.log(\"false\");\r\n            that.setState({ posted: false })\r\n            this.setState({ ...this.initState(), refresh: false });\r\n            message.error(\"验证码错误\",1)\r\n        }\r\n    }\r\n\r\n\r\n    close() {\r\n        this.setState({ visible: false });\r\n        this.props.close();\r\n    }\r\n    signin() {\r\n        this.setState({ toDo: \"注册\" });\r\n    }\r\n    initState() {\r\n        return {\r\n            data: this.getRandom(109, 48, 4),\r\n            rotate: this.getRandom(60, -60, 4),\r\n            fz: this.getRandom(15, 25, 4),\r\n            color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\r\n        }\r\n    }\r\n\r\n    getRandom(max, min, num) {\r\n        const asciiNum = ~~(Math.random() * (max - min + 1) + min)\r\n        if (!Boolean(num)) {\r\n            return asciiNum\r\n        }\r\n        const arr = []\r\n        for (let i = 0; i < num; i++) {\r\n            arr.push(this.getRandom(max, min))\r\n        }\r\n        return arr\r\n    }\r\n    render() {\r\n        let login = <div id='modal'>\r\n            <Modal visible={this.props.visible}\r\n                closable={false}\r\n                destroyOnClose={true}\r\n                title={\r\n                    <Dropdown overlay={\r\n                        <Menu>\r\n                            <Menu.Item key=\"1\" onClick={() => this.setState({ attemp: \"0\" })}>学生</Menu.Item>\r\n                            <Menu.Item key=\"2\" onClick={() => this.setState({ attemp: \"2\" })}>辅导员</Menu.Item>\r\n                            <Menu.Item key=\"3\" onClick={() => this.setState({ attemp: \"1\" })}>管理员</Menu.Item>\r\n                        </Menu >}>\r\n                        <Button type=\"defult\">\r\n                            <Icon type=\"down\" />\r\n                            {this.state.attemp == 0 && \"学生\"}\r\n                            {this.state.attemp == 2 && \"辅导员\"}\r\n                            {this.state.attemp == 1 && \"管理员\"}\r\n                        </Button>\r\n                    </Dropdown>}\r\n                visible={this.state.visible}\r\n                onOk={this.StudentToLogin}\r\n                onCancel={this.close}\r\n                footer={[\r\n                    <Button key=\"返回\" type=\"defult\" onClick={this.close}>\r\n                        返回\r\n              </Button>,\r\n                    <Button key=\"登录\" type=\"primary\" onClick={this.ToLogin} loading={this.state.posted}>\r\n                        <Icon type=\"check-circle\" theme=\"twoTone\" />\r\n                        登录\r\n              </Button>\r\n                ]}\r\n                visible={this.state.visible}\r\n            >\r\n                <QueueAnim delay={180}>\r\n                <Input key=\"username\" id=\"username\" addonBefore=\" 账户 \" prefix={<Icon type=\"user\" />} placeholder={this.state.attemp == \"0\" ? \"八位学号\" : \"管理员账户\"} allowClear onChange={(e) => { this.setState({ username: e.target.value }) }}></Input>\r\n                </QueueAnim><p></p><QueueAnim delay={180}>\r\n                <Input.Password key=\"password\" id=\"password\" addonBefore=\" 密码 \" onPressEnter={this.ToLogin} prefix={<Icon type=\"lock\" />} placeholder={this.state.attemp == \"0\" ? \"一卡通号码\" : \"管理员密码\"} allowClear onChange={(e) => { this.setState({ password: e.target.value }) }} />\r\n                </QueueAnim><p></p><QueueAnim delay={180}>\r\n                <p  key=\"check\" style={{ marginRight: 0 }}>\r\n                    <Input style={{ width: \"70%\" }} addonBefore=\"验证码\" onPressEnter={this.ToLogin} placeholder=\"不区分大小写\" onChange={(e) => { this.setState({ inputValue: e.target.value }) }}\r\n                        suffix={\r\n                            <div style={{ width: 120, height: 30, backgroundImage: `url(${bg})`, textAlign: \"center\" }} >\r\n                                {this.state.data.map((v, i) =>\r\n                                    <div\r\n                                        key={i}\r\n                                        className='itemStr'\r\n                                        style={{\r\n                                            transform: `skewX(${this.state.rotate[i]}deg)`,\r\n                                            fontSize: `${this.state.fz[i]}px`,\r\n                                            color: `rgb(${this.state.color[i].toString()})`,\r\n                                            display: 'inline-block',\r\n                                            MozUserSelect: '-moz-none',\r\n                                            KhtmlUserSelect: 'none',\r\n                                            WebkitUserSelect: 'none',\r\n                                            msUserSelect: 'none',\r\n                                            userSelect: 'none'\r\n                                        }}\r\n                                        onMouseEnter={() => this.setState({ refresh: true })}>\r\n                                        {String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13))}&nbsp;&nbsp;\r\n                                 </div>\r\n                                )}\r\n                                {this.state.refresh\r\n                                    ?\r\n                                    <div\r\n                                        className='mask'\r\n                                        onClick={() => {\r\n                                            this.setState({ ...this.initState(), refresh: false })\r\n                                        }}\r\n                                        onMouseLeave={() => { this.setState({ refresh: false }) }}\r\n                                        style={{ fontSize: \"10px\" }}>\r\n                                        看不清？点击此处刷新\r\n                                </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        }>\r\n                    </Input>\r\n\r\n                </p></QueueAnim>\r\n                <p > <br></br>\r\n                    {this.state.attemp == \"0\" ?\r\n                        <a onClick={() => { this.setState({ attemp: \"1\", toDo: \"注册\" }) }}>\r\n                            &nbsp;&nbsp;没有账号?\r\n                    </a> : <div />}\r\n                </p>\r\n            </Modal>\r\n        </div>\r\n\r\n        let sign = <div id='modal'>\r\n            <Modal\r\n                title=\"注册需管理员登录\"\r\n                visible={this.state.visible}\r\n                onOk={this.StudentToLogin}\r\n                onCancel={this.close}\r\n                footer={[\r\n                    <Button key=\"返回\" type=\"defult\" onClick={this.close}>\r\n                        返回\r\n              </Button>,\r\n                    <Button key=\"注册\" type=\"primary\" onClick={this.ToLogin}>\r\n                        登录\r\n              </Button>\r\n                ]}\r\n                visible={this.state.visible}\r\n            >\r\n                <Input id=\"username\" addonBefore=\" 账户 \" placeholder=\"管理员账户\" allowClear onChange={(x, v) => { this.setState({ username: v }) }}></Input>\r\n                <p></p>\r\n                <Input.Password id=\"password\" addonBefore=\" 密码 \" onPressEnter={this.ToLogin} placeholder=\"管理员密码\" allowClear onChange={(x, v) => { this.setState({ password: v }) }} />\r\n                <p> </p>\r\n                <Input style={{ width: \"70%\" }} addonBefore=\"验证码\" onPressEnter={this.ToLogin} placeholder=\"不区分大小写\" onChange={(e) => { this.setState({ inputValue: e.target.value }) }}\r\n                    suffix={\r\n                        <div style={{ width: 120, height: 30, backgroundImage: `url(${bg})`, textAlign: \"center\" }} >\r\n                            {this.state.data.map((v, i) =>\r\n                                <div\r\n                                    key={i}\r\n                                    className='itemStr'\r\n                                    style={{\r\n                                        transform: `skewX(${this.state.rotate[i]}deg)`,\r\n                                        fontSize: `${this.state.fz[i]}px`,\r\n                                        color: `rgb(${this.state.color[i].toString()})`,\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    onMouseEnter={() => this.setState({ refresh: true })}>\r\n                                    {String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13))}&nbsp;&nbsp;\r\n                                 </div>\r\n                            )}\r\n                            {this.state.refresh\r\n                                ?\r\n                                <div\r\n                                    className='mask'\r\n                                    onClick={() => {\r\n                                        this.setState({ ...this.initState(), refresh: false })\r\n                                    }}\r\n                                    onMouseLeave={() => { this.setState({ refresh: false }) }}\r\n                                    style={{ fontSize: \"10px\" }}>\r\n                                    看不清？点击此处刷新\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                    }>\r\n                </Input>\r\n                <br></br>\r\n            </Modal>\r\n        </div>\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.toDo == \"登录\" ? login : sign}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginModal;"]},"metadata":{},"sourceType":"module"}