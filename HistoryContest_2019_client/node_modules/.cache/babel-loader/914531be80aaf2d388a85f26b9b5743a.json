{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.parse = parse;\nexports.build = build;\n\nvar _xlsx = require('xlsx');\n\nvar _xlsx2 = _interopRequireDefault(_xlsx);\n\nvar _bufferFrom = require('buffer-from');\n\nvar _bufferFrom2 = _interopRequireDefault(_bufferFrom);\n\nvar _helpers = require('./helpers');\n\nvar _workbook = require('./workbook');\n\nvar _workbook2 = _interopRequireDefault(_workbook);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction parse(mixed) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var workSheet = _xlsx2.default[(0, _helpers.isString)(mixed) ? 'readFile' : 'read'](mixed, options);\n\n  return Object.keys(workSheet.Sheets).map(function (name) {\n    var sheet = workSheet.Sheets[name];\n    return {\n      name: name,\n      data: _xlsx2.default.utils.sheet_to_json(sheet, {\n        header: 1,\n        raw: options.raw !== false\n      })\n    };\n  });\n}\n\nfunction build(worksheets) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var defaults = {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  };\n  var workBook = new _workbook2.default();\n  worksheets.forEach(function (worksheet) {\n    var sheetName = worksheet.name || 'Sheet';\n    var sheetOptions = worksheet.options || {};\n    var sheetData = (0, _helpers.buildSheetFromMatrix)(worksheet.data || [], _extends({}, options, sheetOptions));\n    workBook.SheetNames.push(sheetName);\n    workBook.Sheets[sheetName] = sheetData;\n  });\n\n  var excelData = _xlsx2.default.write(workBook, Object.assign({}, defaults, options));\n\n  return excelData instanceof Buffer ? excelData : (0, _bufferFrom2.default)(excelData, 'binary');\n}\n\nexports.default = {\n  parse: parse,\n  build: build\n};","map":null,"metadata":{},"sourceType":"script"}