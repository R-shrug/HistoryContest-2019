{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\87102\\\\Documents\\\\GitHub\\\\HistoryContest-2019\\\\historycontest2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\87102\\\\Documents\\\\GitHub\\\\HistoryContest-2019\\\\historycontest2019\\\\src\\\\Components\\\\VerifyCode\\\\VerifyCode.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport bg from '../../img/VerifyCodeBG.png';\nimport { Row, Col, Input, Button, Icon } from 'antd';\n\nclass VerifyCode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, this.initState(), {\n      inputValue: \"\",\n      verifyCode: \"\"\n    });\n    this.getInput = this.getInput.bind(this);\n  }\n\n  initState() {\n    return {\n      data: this.getRandom(109, 48, 4),\n      rotate: this.getRandom(60, -60, 4),\n      fz: this.getRandom(10, 20, 4),\n      color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\n    };\n  }\n\n  getRandom(max, min, num) {\n    const asciiNum = ~~(Math.random() * (max - min + 1) + min);\n\n    if (!Boolean(num)) {\n      return asciiNum;\n    }\n\n    const arr = [];\n\n    for (let i = 0; i < num; i++) {\n      arr.push(this.getRandom(max, min));\n    }\n\n    return arr;\n  }\n\n  getInput(e) {\n    console.log(this.state.verifyCode);\n    this.setState({\n      inputValue: e.target.value\n    });\n\n    if (this.state.data.join(\"\").toLowerCase() == this.state.inputValue) {\n      this.props.setState({\n        isVerify: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u9A8C\\u8BC1\\u7801\\uFF08\\u4E0D\\u533A\\u5206\\u5927\\u5C0F\\u5199\\uFF09\",\n      onChange: this.getInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: 100,\n        height: 25,\n        backgroundImage: \"url(\".concat(bg, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.data.map((v, i) => React.createElement(\"div\", {\n      key: i,\n      className: \"itemStr\",\n      style: {\n        transform: \"skewX(\".concat(this.state.rotate[i], \"deg)\"),\n        fontSize: \"\".concat(this.state.fz[i], \"px\"),\n        color: \"rgb(\".concat(this.state.color[i].toString(), \")\"),\n        display: 'inline-block'\n      },\n      onMouseEnter: () => this.setState({\n        refresh: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13), \"\\xA0\\xA0\")), this.state.refresh ? React.createElement(\"div\", {\n      className: \"mask\",\n      onClick: () => {\n        this.setState(_objectSpread({}, this.initState(), {\n          refresh: false\n        }));\n      },\n      onMouseLeave: () => {\n        this.setState({\n          refresh: false\n        });\n      },\n      style: {\n        fontSize: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"\\u770B\\u4E0D\\u6E05\\uFF1F\\u70B9\\u51FB\\u6B64\\u5904\\u5237\\u65B0\") : null))));\n  }\n\n}\n\nexport default VerifyCode;","map":{"version":3,"sources":["C:\\Users\\87102\\Documents\\GitHub\\HistoryContest-2019\\historycontest2019\\src\\Components\\VerifyCode\\VerifyCode.js"],"names":["React","bg","Row","Col","Input","Button","Icon","VerifyCode","Component","constructor","props","state","initState","inputValue","verifyCode","getInput","bind","data","getRandom","rotate","fz","color","max","min","num","asciiNum","Math","random","Boolean","arr","i","push","e","console","log","setState","target","value","join","toLowerCase","isVerify","render","width","height","backgroundImage","map","v","transform","fontSize","toString","display","refresh","String","fromCharCode"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,EAAP,MAAe,4BAAf;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,IAAlC,QAA8C,MAA9C;;AAEA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,qBACO,KAAKC,SAAL,EADP;AAEIC,MAAAA,UAAU,EAAE,EAFhB;AAGIC,MAAAA,UAAU,EAAE;AAHhB;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AACDJ,EAAAA,SAAS,GAAG;AACR,WAAO;AACHK,MAAAA,IAAI,EAAE,KAAKC,SAAL,CAAe,GAAf,EAAoB,EAApB,EAAwB,CAAxB,CADH;AAEHC,MAAAA,MAAM,EAAE,KAAKD,SAAL,CAAe,EAAf,EAAmB,CAAC,EAApB,EAAwB,CAAxB,CAFL;AAGHE,MAAAA,EAAE,EAAE,KAAKF,SAAL,CAAe,EAAf,EAAmB,EAAnB,EAAuB,CAAvB,CAHD;AAIHG,MAAAA,KAAK,EAAE,CAAC,KAAKH,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAAD,EAA8B,KAAKA,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAA9B,EAA2D,KAAKA,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAA3D,EAAwF,KAAKA,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAAxF;AAJJ,KAAP;AAMH;;AAEDA,EAAAA,SAAS,CAACI,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgB;AACrB,UAAMC,QAAQ,GAAG,CAAC,EAAEC,IAAI,CAACC,MAAL,MAAiBL,GAAG,GAAGC,GAAN,GAAY,CAA7B,IAAkCA,GAApC,CAAlB;;AACA,QAAI,CAACK,OAAO,CAACJ,GAAD,CAAZ,EAAmB;AACf,aAAOC,QAAP;AACH;;AACD,UAAMI,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAApB,EAAyBM,CAAC,EAA1B,EAA8B;AAC1BD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAKb,SAAL,CAAeI,GAAf,EAAoBC,GAApB,CAAT;AACH;;AACD,WAAOM,GAAP;AACH;;AAGDd,EAAAA,QAAQ,CAACiB,CAAD,EAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWG,UAAvB;AACA,SAAKqB,QAAL,CAAc;AAAEtB,MAAAA,UAAU,EAAEmB,CAAC,CAACI,MAAF,CAASC;AAAvB,KAAd;;AACA,QAAG,KAAK1B,KAAL,CAAWM,IAAX,CAAgBqB,IAAhB,CAAqB,EAArB,EAAyBC,WAAzB,MAAwC,KAAK5B,KAAL,CAAWE,UAAtD,EACA;AACI,WAAKH,KAAL,CAAWyB,QAAX,CAAoB;AAACK,QAAAA,QAAQ,EAAC;AAAV,OAApB;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,sFAAnB;AAAoC,MAAA,QAAQ,EAAE,KAAK1B,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAAE2B,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE,EAAtB;AAA0BC,QAAAA,eAAe,gBAAS3C,EAAT;AAAzC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKU,KAAL,CAAWM,IAAX,CAAgB4B,GAAhB,CAAoB,CAACC,CAAD,EAAIhB,CAAJ,KACjB;AACI,MAAA,GAAG,EAAEA,CADT;AAEI,MAAA,SAAS,EAAC,SAFd;AAGI,MAAA,KAAK,EAAE;AACHiB,QAAAA,SAAS,kBAAW,KAAKpC,KAAL,CAAWQ,MAAX,CAAkBW,CAAlB,CAAX,SADN;AAEHkB,QAAAA,QAAQ,YAAK,KAAKrC,KAAL,CAAWS,EAAX,CAAcU,CAAd,CAAL,OAFL;AAGHT,QAAAA,KAAK,gBAAS,KAAKV,KAAL,CAAWU,KAAX,CAAiBS,CAAjB,EAAoBmB,QAApB,EAAT,MAHF;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAHX;AASI,MAAA,YAAY,EAAE,MAAM,KAAKf,QAAL,CAAc;AAAEgB,QAAAA,OAAO,EAAE;AAAX,OAAd,CATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUKC,MAAM,CAACC,YAAP,CAAoBP,CAAC,GAAG,EAAJ,IAAUA,CAAC,GAAG,EAAd,GAAmBA,CAAC,GAAG,CAAvB,GAA4BA,CAAC,GAAG,EAAJ,GAASA,CAAT,GAAaA,CAAC,GAAG,EAAjE,CAVL,aADH,CADL,EAeK,KAAKnC,KAAL,CAAWwC,OAAX,GAEG;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,OAAO,EAAE,MAAM;AACX,aAAKhB,QAAL,mBAAmB,KAAKvB,SAAL,EAAnB;AAAqCuC,UAAAA,OAAO,EAAE;AAA9C;AACH,OAJL;AAKI,MAAA,YAAY,EAAE,MAAM;AAAE,aAAKhB,QAAL,CAAc;AAAEgB,UAAAA,OAAO,EAAE;AAAX,SAAd;AAAmC,OAL7D;AAMI,MAAA,KAAK,EAAE;AAAEH,QAAAA,QAAQ,EAAE;AAAZ,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFH,GAYG,IA3BR,CADJ,CALJ,CADJ,CADJ;AA0CH;;AAnFoC;;AAsFzC,eAAezC,UAAf","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport bg from '../../img/VerifyCodeBG.png'\r\nimport { Row, Col, Input, Button, Icon } from 'antd';\r\n\r\nclass VerifyCode extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.initState(),\r\n            inputValue: \"\",\r\n            verifyCode: \"\",\r\n        }\r\n        this.getInput = this.getInput.bind(this);\r\n    }\r\n    initState() {\r\n        return {\r\n            data: this.getRandom(109, 48, 4),\r\n            rotate: this.getRandom(60, -60, 4),\r\n            fz: this.getRandom(10, 20, 4),\r\n            color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\r\n        }\r\n    }\r\n\r\n    getRandom(max, min, num) {\r\n        const asciiNum = ~~(Math.random() * (max - min + 1) + min)\r\n        if (!Boolean(num)) {\r\n            return asciiNum\r\n        }\r\n        const arr = []\r\n        for (let i = 0; i < num; i++) {\r\n            arr.push(this.getRandom(max, min))\r\n        }\r\n        return arr\r\n    }\r\n\r\n\r\n    getInput(e) {\r\n        console.log(this.state.verifyCode);\r\n        this.setState({ inputValue: e.target.value });\r\n        if(this.state.data.join(\"\").toLowerCase()==this.state.inputValue)\r\n        {\r\n            this.props.setState({isVerify:true});\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col span={6}>\r\n                        <Input placeholder=\"请输入验证码（不区分大小写）\" onChange={this.getInput}>\r\n                        </Input>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        <div style={{ width: 100, height: 25, backgroundImage: `url(${bg})` }} >\r\n                            {this.state.data.map((v, i) =>\r\n                                <div\r\n                                    key={i}\r\n                                    className='itemStr'\r\n                                    style={{\r\n                                        transform: `skewX(${this.state.rotate[i]}deg)`,\r\n                                        fontSize: `${this.state.fz[i]}px`,\r\n                                        color: `rgb(${this.state.color[i].toString()})`,\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    onMouseEnter={() => this.setState({ refresh: true })}>\r\n                                    {String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13))}&nbsp;&nbsp;\r\n                                 </div>\r\n                            )}\r\n                            {this.state.refresh\r\n                                ?\r\n                                <div\r\n                                    className='mask'\r\n                                    onClick={() => {\r\n                                        this.setState({ ...this.initState(), refresh: false })\r\n                                    }}\r\n                                    onMouseLeave={() => { this.setState({ refresh: false }) }}\r\n                                    style={{ fontSize: \"10px\" }}>\r\n                                    看不清？点击此处刷新\r\n                                </div>\r\n                                : \r\n                                null\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nexport default VerifyCode;"]},"metadata":{},"sourceType":"module"}