{"ast":null,"code":"import _objectSpread from \"E:\\\\projects\\\\HistotyContest_2019\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"E:\\\\projects\\\\HistotyContest_2019\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\src\\\\Components\\\\LoginModal\\\\LoginModal.js\";\nimport React from 'react';\nimport \"antd/dist/antd.css\";\nimport { Icon, Button, Input, Modal, message, Dropdown, Menu } from 'antd';\nimport bg from '../../img/VerifyCodeBG.png';\nimport QueueAnim from 'rc-queue-anim';\n\nclass LoginModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({\n      visible: true,\n      attemp: \"0\",\n      username: '',\n      password: '',\n      toDo: \"登录\",\n      posted: false\n    }, this.initState(), {\n      inputValue: \"\"\n    });\n    this.ToLogin = this.ToLogin.bind(this);\n    this.close = this.close.bind(this);\n    this.signin = this.signin.bind(this);\n    this.ToSignin = this.ToSignin.bind(this);\n  }\n\n  ToLogin() {\n    // this.setState({ posted: true })\n    let code = this.state.data.map(v => String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13));\n    let codeString = code.join(\"\");\n    let that = this;\n    let username = this.state.username;\n    let password = this.state.password;\n    let identity = this.state.attemp; //暂时的登陆函数\n\n    if (codeString.toLowerCase() == that.state.inputValue.toLowerCase() || 1) {\n      // console.log(\"login\");\n      // message.success(\"登录成功！\");\n      // that.props.setState({\n      //     isWelcome: false,\n      //     isLogin: true,\n      //     isStudent: true,\n      //     isAllDone: false,\n      //     isAdmin: false,\n      //     isTeacher: false,\n      //     host: \"\",\n      //         name: '菜鸡',\n      //         username: \"\",\n      //         token: '',\n      //         access: -1,\n      //         score: -1\n      //     answer: []\n      // })\n      this.setState({\n        posted: true\n      });\n      fetch(\"http://\" + that.props.host + '/api/ui/login', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          Username: username,\n          Password: password,\n          Identity: identity\n        })\n      }).then(async res => {\n        that.setState({\n          posted: false\n        });\n\n        if (res.status == 404) {\n          message.error(\"用户名不存在\");\n        } else if (res.status == 403) {\n          message.error(\"用户名或密码错误\");\n        } else {\n          //学生登陆成功\n          let data = await res.json();\n          console.log(\"login\");\n          message.success(\"登录成功！\");\n\n          if (identity == \"0\") {\n            if (data.Score == -1) {\n              that.props.setState({\n                isWelcome: false,\n                isStudent: true,\n                isLogin: true,\n                username: this.state.username,\n                token: data.Token,\n                username: this.state.username,\n                name: data.Name,\n                score: data.Score,\n                token: data.Token,\n                access: 0\n              }); // that.props.setState({\n              //     isWelcome: false,\n              //     isStudent: true,\n              //     isLogin: true,\n              //         score: data.Score,\n              // })\n            } else {\n              that.props.setState({\n                isWelcome: false,\n                isStudent: true,\n                isLogin: true,\n                username: this.state.username,\n                score: data.Score,\n                name: data.Name,\n                token: data.Token,\n                access: 0\n              }); // that.props.setState({\n              //     isWelcome: false,\n              //     isStudent: true,\n              //     isLogin: true,\n              //         score: data.Score,\n              // })\n            }\n          } else if (identity == \"2\") {\n            that.props.setState({\n              isWelcome: false,\n              isTeacher: true,\n              token: data.Token,\n              name: data.Name,\n              username: this.state.username,\n              departId: data.Id,\n              depart: data.Department,\n              access: 2\n            });\n          } else if (identity == \"1\") {\n            that.props.setState({\n              isWelcome: false,\n              isAdmin: true,\n              token: data.Token,\n              name: data.Name,\n              username: this.state.username,\n              access: 1\n            });\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      console.log(\"false\");\n      that.setState({\n        posted: false\n      });\n      this.setState(_objectSpread({}, this.initState(), {\n        refresh: false\n      }));\n      message.error(\"验证码错误\");\n    }\n  }\n\n  ToSignin() {\n    //暂时的注册函数\n    this.props.setState({\n      isWelcome: false,\n      isStudent: true,\n      isLogin: true\n    });\n  }\n\n  close() {\n    this.setState({\n      visible: false\n    });\n    this.props.close();\n  }\n\n  signin() {\n    this.setState({\n      toDo: \"注册\"\n    });\n  }\n\n  initState() {\n    return {\n      data: this.getRandom(109, 48, 4),\n      rotate: this.getRandom(60, -60, 4),\n      fz: this.getRandom(15, 25, 4),\n      color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\n    };\n  }\n\n  getRandom(max, min, num) {\n    const asciiNum = ~~(Math.random() * (max - min + 1) + min);\n\n    if (!Boolean(num)) {\n      return asciiNum;\n    }\n\n    const arr = [];\n\n    for (let i = 0; i < num; i++) {\n      arr.push(this.getRandom(max, min));\n    }\n\n    return arr;\n  }\n\n  render() {\n    let login = React.createElement(\"div\", {\n      id: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      title: React.createElement(Dropdown, {\n        overlay: React.createElement(Menu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(Menu.Item, {\n          key: \"1\",\n          onClick: () => this.setState({\n            attemp: \"0\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"\\u5B66\\u751F\"), React.createElement(Menu.Item, {\n          key: \"2\",\n          onClick: () => this.setState({\n            attemp: \"2\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, \"\\u8F85\\u5BFC\\u5458\"), React.createElement(Menu.Item, {\n          key: \"3\",\n          onClick: () => this.setState({\n            attemp: \"1\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, \"\\u7BA1\\u7406\\u5458\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"defult\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), this.state.attemp == 0 && \"学生\", this.state.attemp == 2 && \"辅导员\", this.state.attemp == 1 && \"管理员\")),\n      visible: this.state.visible,\n      onOk: this.StudentToLogin,\n      onCancel: this.close,\n      footer: [React.createElement(Button, {\n        key: \"\\u8FD4\\u56DE\",\n        type: \"defult\",\n        onClick: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"), React.createElement(Button, {\n        key: \"\\u767B\\u5F55\",\n        type: \"primary\",\n        onClick: this.ToLogin,\n        loading: this.state.posted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"check-circle\",\n        theme: \"twoTone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), \"\\u767B\\u5F55\")],\n      visible: this.state.visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(QueueAnim, {\n      delay: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Input, {\n      key: \"username\",\n      id: \"username\",\n      addonBefore: \" \\u8D26\\u6237 \",\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }),\n      placeholder: this.state.attemp == \"0\" ? \"八位学号\" : \"管理员账户\",\n      allowClear: true,\n      onChange: e => {\n        this.setState({\n          username: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(Input.Password, {\n      key: \"password\",\n      id: \"password\",\n      addonBefore: \" \\u5BC6\\u7801 \",\n      onPressEnter: this.ToLogin,\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }),\n      placeholder: this.state.attemp == \"0\" ? \"一卡通号码\" : \"管理员密码\",\n      allowClear: true,\n      onChange: e => {\n        this.setState({\n          password: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        marginRight: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Input, {\n      key: \"check\",\n      style: {\n        width: \"70%\"\n      },\n      addonBefore: \"\\u9A8C\\u8BC1\\u7801\",\n      onPressEnter: this.ToLogin,\n      placeholder: \"\\u4E0D\\u533A\\u5206\\u5927\\u5C0F\\u5199\",\n      onChange: e => {\n        this.setState({\n          inputValue: e.target.value\n        });\n      },\n      suffix: React.createElement(\"div\", {\n        style: {\n          width: 120,\n          height: 30,\n          backgroundImage: \"url(\".concat(bg, \")\"),\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, this.state.data.map((v, i) => React.createElement(\"div\", {\n        key: i,\n        className: \"itemStr\",\n        style: {\n          transform: \"skewX(\".concat(this.state.rotate[i], \"deg)\"),\n          fontSize: \"\".concat(this.state.fz[i], \"px\"),\n          color: \"rgb(\".concat(this.state.color[i].toString(), \")\"),\n          display: 'inline-block'\n        },\n        onMouseEnter: () => this.setState({\n          refresh: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13), \"\\xA0\\xA0\")), this.state.refresh ? React.createElement(\"div\", {\n        className: \"mask\",\n        onClick: () => {\n          this.setState(_objectSpread({}, this.initState(), {\n            refresh: false\n          }));\n        },\n        onMouseLeave: () => {\n          this.setState({\n            refresh: false\n          });\n        },\n        style: {\n          fontSize: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"\\u770B\\u4E0D\\u6E05\\uFF1F\\u70B9\\u51FB\\u6B64\\u5904\\u5237\\u65B0\") : null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), this.state.attemp == \"0\" ? React.createElement(\"a\", {\n      onClick: () => {\n        this.setState({\n          attemp: \"1\",\n          toDo: \"注册\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\u6CA1\\u6709\\u8D26\\u53F7?\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    })))));\n    let sign = React.createElement(\"div\", {\n      id: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      title: \"\\u6CE8\\u518C\\u9700\\u7BA1\\u7406\\u5458\\u767B\\u5F55\",\n      visible: this.state.visible,\n      onOk: this.StudentToLogin,\n      onCancel: this.close,\n      footer: [React.createElement(Button, {\n        key: \"\\u8FD4\\u56DE\",\n        type: \"defult\",\n        onClick: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"), React.createElement(Button, {\n        key: \"\\u6CE8\\u518C\",\n        type: \"primary\",\n        onClick: this.ToLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"\\u767B\\u5F55\")],\n      visible: this.state.visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"username\",\n      addonBefore: \" \\u8D26\\u6237 \",\n      placeholder: \"\\u7BA1\\u7406\\u5458\\u8D26\\u6237\",\n      allowClear: true,\n      onChange: (x, v) => {\n        this.setState({\n          username: v\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(Input.Password, {\n      id: \"password\",\n      addonBefore: \" \\u5BC6\\u7801 \",\n      onPressEnter: this.ToLogin,\n      placeholder: \"\\u7BA1\\u7406\\u5458\\u5BC6\\u7801\",\n      allowClear: true,\n      onChange: (x, v) => {\n        this.setState({\n          password: v\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \" \"), React.createElement(Input, {\n      style: {\n        width: \"70%\"\n      },\n      addonBefore: \"\\u9A8C\\u8BC1\\u7801\",\n      onPressEnter: this.ToLogin,\n      placeholder: \"\\u4E0D\\u533A\\u5206\\u5927\\u5C0F\\u5199\",\n      onChange: e => {\n        this.setState({\n          inputValue: e.target.value\n        });\n      },\n      suffix: React.createElement(\"div\", {\n        style: {\n          width: 120,\n          height: 30,\n          backgroundImage: \"url(\".concat(bg, \")\"),\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, this.state.data.map((v, i) => React.createElement(\"div\", {\n        key: i,\n        className: \"itemStr\",\n        style: {\n          transform: \"skewX(\".concat(this.state.rotate[i], \"deg)\"),\n          fontSize: \"\".concat(this.state.fz[i], \"px\"),\n          color: \"rgb(\".concat(this.state.color[i].toString(), \")\"),\n          display: 'inline-block'\n        },\n        onMouseEnter: () => this.setState({\n          refresh: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13), \"\\xA0\\xA0\")), this.state.refresh ? React.createElement(\"div\", {\n        className: \"mask\",\n        onClick: () => {\n          this.setState(_objectSpread({}, this.initState(), {\n            refresh: false\n          }));\n        },\n        onMouseLeave: () => {\n          this.setState({\n            refresh: false\n          });\n        },\n        style: {\n          fontSize: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"\\u770B\\u4E0D\\u6E05\\uFF1F\\u70B9\\u51FB\\u6B64\\u5904\\u5237\\u65B0\") : null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, this.state.toDo == \"登录\" ? login : sign);\n  }\n\n}\n\nexport default LoginModal;","map":{"version":3,"sources":["E:\\projects\\HistotyContest_2019\\HistoryContest-2019\\HistoryContest_2019_client\\src\\Components\\LoginModal\\LoginModal.js"],"names":["React","Icon","Button","Input","Modal","message","Dropdown","Menu","bg","QueueAnim","LoginModal","Component","constructor","props","state","visible","attemp","username","password","toDo","posted","initState","inputValue","ToLogin","bind","close","signin","ToSignin","code","data","map","v","String","fromCharCode","codeString","join","that","identity","toLowerCase","setState","fetch","host","method","mode","headers","body","JSON","stringify","Username","Password","Identity","then","res","status","error","json","console","log","success","Score","isWelcome","isStudent","isLogin","token","Token","name","Name","score","access","isTeacher","departId","Id","depart","Department","isAdmin","catch","err","refresh","getRandom","rotate","fz","color","max","min","num","asciiNum","Math","random","Boolean","arr","i","push","render","login","StudentToLogin","e","target","value","marginRight","width","height","backgroundImage","textAlign","transform","fontSize","toString","display","sign","x"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport { Icon, Button, Input, Modal, message, Dropdown, Menu } from 'antd';\r\nimport bg from '../../img/VerifyCodeBG.png'\r\nimport QueueAnim from 'rc-queue-anim';\r\nclass LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: true,\r\n            attemp: \"0\",\r\n            username: '',\r\n            password: '',\r\n            toDo: \"登录\",\r\n            posted: false,\r\n            ...this.initState(),\r\n            inputValue: \"\",\r\n        }\r\n        this.ToLogin = this.ToLogin.bind(this);\r\n        this.close = this.close.bind(this);\r\n        this.signin = this.signin.bind(this);\r\n        this.ToSignin = this.ToSignin.bind(this);\r\n    }\r\n    ToLogin() {\r\n        // this.setState({ posted: true })\r\n        let code = this.state.data.map((v) => String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13)));\r\n        let codeString = code.join(\"\");\r\n        let that = this;\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        let identity = this.state.attemp;\r\n        //暂时的登陆函数\r\n        if (codeString.toLowerCase() == that.state.inputValue.toLowerCase() || 1) {\r\n            // console.log(\"login\");\r\n            // message.success(\"登录成功！\");\r\n            // that.props.setState({\r\n            //     isWelcome: false,\r\n            //     isLogin: true,\r\n            //     isStudent: true,\r\n            //     isAllDone: false,\r\n            //     isAdmin: false,\r\n            //     isTeacher: false,\r\n            //     host: \"\",\r\n            //         name: '菜鸡',\r\n            //         username: \"\",\r\n            //         token: '',\r\n            //         access: -1,\r\n            //         score: -1\r\n            //     answer: []\r\n            // })\r\n            this.setState({ posted: true })\r\n            fetch(\"http://\" + that.props.host + '/api/ui/login', {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    Username: username,\r\n                    Password: password,\r\n                    Identity: identity\r\n                })\r\n            }).then(\r\n                async res => {\r\n                    that.setState({ posted: false })\r\n                    if (res.status == 404) {\r\n                        message.error(\"用户名不存在\");\r\n                    }\r\n                    else if (res.status == 403) {\r\n                        message.error(\"用户名或密码错误\");\r\n                    }\r\n                    else {\r\n                        //学生登陆成功\r\n                        let data = await res.json();\r\n                        console.log(\"login\");\r\n                        message.success(\"登录成功！\");\r\n                        if (identity == \"0\") {\r\n                            if (data.Score == -1) {\r\n                                that.props.setState({\r\n                                    isWelcome: false,\r\n                                    isStudent: true,\r\n                                    isLogin: true,\r\n                                    username: this.state.username,\r\n                                    token: data.Token,\r\n                                    username: this.state.username,\r\n                                    name: data.Name,\r\n                                    score: data.Score,\r\n                                    token: data.Token,\r\n                                    access: 0\r\n\r\n                                });\r\n                                // that.props.setState({\r\n                                //     isWelcome: false,\r\n                                //     isStudent: true,\r\n                                //     isLogin: true,\r\n                                //         score: data.Score,\r\n\r\n                                // })\r\n                            }\r\n                            else {\r\n                                that.props.setState({\r\n                                    isWelcome: false,\r\n                                    isStudent: true,\r\n                                    isLogin: true,\r\n                                    username: this.state.username,\r\n                                    score: data.Score,\r\n                                    name: data.Name,\r\n                                    token: data.Token,\r\n                                    access: 0\r\n                                })\r\n                                // that.props.setState({\r\n                                //     isWelcome: false,\r\n                                //     isStudent: true,\r\n                                //     isLogin: true,\r\n                                //         score: data.Score,\r\n                                // })\r\n                            }\r\n                        }\r\n                        else if (identity == \"2\") {\r\n                            that.props.setState({\r\n                                isWelcome: false,\r\n                                isTeacher: true,\r\n                                token: data.Token,\r\n                                name: data.Name,\r\n                                username:this.state.username,\r\n                                departId: data.Id,\r\n                                depart: data.Department,\r\n                                access: 2\r\n                            })\r\n                        }\r\n                        else if (identity == \"1\") {\r\n                            that.props.setState({\r\n                                isWelcome: false,\r\n                                isAdmin: true,\r\n                                token: data.Token,\r\n                                name: data.Name,\r\n                                username:this.state.username,\r\n                                access: 1\r\n                            })\r\n                        }\r\n                    }\r\n                }).catch(err => { console.log(err) })\r\n\r\n        }\r\n        else {\r\n            console.log(\"false\");\r\n            that.setState({ posted: false })\r\n            this.setState({ ...this.initState(), refresh: false });\r\n            message.error(\"验证码错误\")\r\n        }\r\n    }\r\n\r\n    ToSignin() {\r\n        //暂时的注册函数\r\n        this.props.setState({ isWelcome: false, isStudent: true, isLogin: true });\r\n    }\r\n    close() {\r\n        this.setState({ visible: false });\r\n        this.props.close();\r\n    }\r\n    signin() {\r\n        this.setState({ toDo: \"注册\" });\r\n    }\r\n    initState() {\r\n        return {\r\n            data: this.getRandom(109, 48, 4),\r\n            rotate: this.getRandom(60, -60, 4),\r\n            fz: this.getRandom(15, 25, 4),\r\n            color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\r\n        }\r\n    }\r\n\r\n    getRandom(max, min, num) {\r\n        const asciiNum = ~~(Math.random() * (max - min + 1) + min)\r\n        if (!Boolean(num)) {\r\n            return asciiNum\r\n        }\r\n        const arr = []\r\n        for (let i = 0; i < num; i++) {\r\n            arr.push(this.getRandom(max, min))\r\n        }\r\n        return arr\r\n    }\r\n    render() {\r\n        let login = <div id='modal'>\r\n            <Modal\r\n                title={\r\n                    <Dropdown overlay={\r\n                        <Menu>\r\n                            <Menu.Item key=\"1\" onClick={() => this.setState({ attemp: \"0\" })}>学生</Menu.Item>\r\n                            <Menu.Item key=\"2\" onClick={() => this.setState({ attemp: \"2\" })}>辅导员</Menu.Item>\r\n                            <Menu.Item key=\"3\" onClick={() => this.setState({ attemp: \"1\" })}>管理员</Menu.Item>\r\n                        </Menu >}>\r\n                        <Button type=\"defult\">\r\n                            <Icon type=\"down\" />\r\n                            {this.state.attemp == 0 && \"学生\"}\r\n                            {this.state.attemp == 2 && \"辅导员\"}\r\n                            {this.state.attemp == 1 && \"管理员\"}\r\n                        </Button>\r\n                    </Dropdown>}\r\n                visible={this.state.visible}\r\n                onOk={this.StudentToLogin}\r\n                onCancel={this.close}\r\n                footer={[\r\n                    <Button key=\"返回\" type=\"defult\" onClick={this.close}>\r\n                        返回\r\n              </Button>,\r\n                    <Button key=\"登录\" type=\"primary\" onClick={this.ToLogin} loading={this.state.posted}>\r\n                        <Icon type=\"check-circle\" theme=\"twoTone\" />\r\n                        登录\r\n              </Button>\r\n                ]}\r\n                visible={this.state.visible}\r\n            >\r\n                <QueueAnim delay={500}>\r\n                <Input key=\"username\" id=\"username\" addonBefore=\" 账户 \" prefix={<Icon type=\"user\" />} placeholder={this.state.attemp == \"0\" ? \"八位学号\" : \"管理员账户\"} allowClear onChange={(e) => { this.setState({ username: e.target.value }) }}></Input>\r\n                <p></p>\r\n                <Input.Password key=\"password\" id=\"password\" addonBefore=\" 密码 \" onPressEnter={this.ToLogin} prefix={<Icon type=\"lock\" />} placeholder={this.state.attemp == \"0\" ? \"一卡通号码\" : \"管理员密码\"} allowClear onChange={(e) => { this.setState({ password: e.target.value }) }} />\r\n                <p></p>\r\n                <p style={{ marginRight: 0 }}>\r\n                    <Input key=\"check\" style={{ width: \"70%\" }} addonBefore=\"验证码\" onPressEnter={this.ToLogin} placeholder=\"不区分大小写\" onChange={(e) => { this.setState({ inputValue: e.target.value }) }}\r\n                        suffix={\r\n                            <div style={{ width: 120, height: 30, backgroundImage: `url(${bg})`, textAlign: \"center\" }} >\r\n                                {this.state.data.map((v, i) =>\r\n                                    <div\r\n                                        key={i}\r\n                                        className='itemStr'\r\n                                        style={{\r\n                                            transform: `skewX(${this.state.rotate[i]}deg)`,\r\n                                            fontSize: `${this.state.fz[i]}px`,\r\n                                            color: `rgb(${this.state.color[i].toString()})`,\r\n                                            display: 'inline-block'\r\n                                        }}\r\n                                        onMouseEnter={() => this.setState({ refresh: true })}>\r\n                                        {String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13))}&nbsp;&nbsp;\r\n                                 </div>\r\n                                )}\r\n                                {this.state.refresh\r\n                                    ?\r\n                                    <div\r\n                                        className='mask'\r\n                                        onClick={() => {\r\n                                            this.setState({ ...this.initState(), refresh: false })\r\n                                        }}\r\n                                        onMouseLeave={() => { this.setState({ refresh: false }) }}\r\n                                        style={{ fontSize: \"10px\" }}>\r\n                                        看不清？点击此处刷新\r\n                                </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        }>\r\n                    </Input>\r\n\r\n                </p>\r\n                <p > <br></br>\r\n                    {this.state.attemp == \"0\" ?\r\n                        <a onClick={() => { this.setState({ attemp: \"1\", toDo: \"注册\" }) }}>\r\n                            &nbsp;&nbsp;没有账号?\r\n                    </a> : <div />}\r\n                </p>\r\n                </QueueAnim>\r\n            </Modal>\r\n        </div>\r\n\r\n        let sign = <div id='modal'>\r\n            <Modal\r\n                title=\"注册需管理员登录\"\r\n                visible={this.state.visible}\r\n                onOk={this.StudentToLogin}\r\n                onCancel={this.close}\r\n                footer={[\r\n                    <Button key=\"返回\" type=\"defult\" onClick={this.close}>\r\n                        返回\r\n              </Button>,\r\n                    <Button key=\"注册\" type=\"primary\" onClick={this.ToLogin}>\r\n                        登录\r\n              </Button>\r\n                ]}\r\n                visible={this.state.visible}\r\n            >\r\n                <Input id=\"username\" addonBefore=\" 账户 \" placeholder=\"管理员账户\" allowClear onChange={(x, v) => { this.setState({ username: v }) }}></Input>\r\n                <p></p>\r\n                <Input.Password id=\"password\" addonBefore=\" 密码 \" onPressEnter={this.ToLogin} placeholder=\"管理员密码\" allowClear onChange={(x, v) => { this.setState({ password: v }) }} />\r\n                <p> </p>\r\n                <Input style={{ width: \"70%\" }} addonBefore=\"验证码\" onPressEnter={this.ToLogin} placeholder=\"不区分大小写\" onChange={(e) => { this.setState({ inputValue: e.target.value }) }}\r\n                    suffix={\r\n                        <div style={{ width: 120, height: 30, backgroundImage: `url(${bg})`, textAlign: \"center\" }} >\r\n                            {this.state.data.map((v, i) =>\r\n                                <div\r\n                                    key={i}\r\n                                    className='itemStr'\r\n                                    style={{\r\n                                        transform: `skewX(${this.state.rotate[i]}deg)`,\r\n                                        fontSize: `${this.state.fz[i]}px`,\r\n                                        color: `rgb(${this.state.color[i].toString()})`,\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    onMouseEnter={() => this.setState({ refresh: true })}>\r\n                                    {String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13))}&nbsp;&nbsp;\r\n                                 </div>\r\n                            )}\r\n                            {this.state.refresh\r\n                                ?\r\n                                <div\r\n                                    className='mask'\r\n                                    onClick={() => {\r\n                                        this.setState({ ...this.initState(), refresh: false })\r\n                                    }}\r\n                                    onMouseLeave={() => { this.setState({ refresh: false }) }}\r\n                                    style={{ fontSize: \"10px\" }}>\r\n                                    看不清？点击此处刷新\r\n                                </div>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                    }>\r\n                </Input>\r\n                <br></br>\r\n            </Modal>\r\n        </div>\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.toDo == \"登录\" ? login : sign}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginModal;"]},"metadata":{},"sourceType":"module"}