{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\87102\\\\Documents\\\\GitHub\\\\HistoryContest-2019\\\\historycontest2019\\\\src\\\\Components\\\\Test\\\\Test.js\";\nimport React from 'react';\nimport { Row, Col, Icon, Tabs, Button, Modal, Layout, List } from 'antd';\nimport 'antd/dist/antd.css';\nimport './Test.css';\nimport bg1 from '../../img/background1.png';\nimport bg2 from '../../img/background2.png';\nimport bg3 from '../../img/background3.png';\nimport bg4 from '../../img/background4.jpg';\nimport bg5 from '../../img/background5.jpg';\nimport bg6 from '../../img/background6.jpg';\nimport bg7 from '../../img/background7.jpg';\nimport bg8 from '../../img/background8.jpg';\nimport bg9 from '../../img/background9.jpg';\nimport bg10 from '../../img/background10.jpg';\nimport bg11 from '../../img/background11.jpg';\nimport BG from '../../img/图片2.jpg';\nimport Timer from '../Timer/Timer';\nimport Choice from '../Choice/Choice';\nimport TrueFalse from '../TrueFalse/TrueFalse';\nimport { nullLiteral } from '@babel/types';\nlet imgs = [bg1, bg2, bg3, bg4, bg5, bg6, bg7, bg8, bg9, bg10, bg11];\nconst TabPane = Tabs.TabPane;\nconst Header = Layout.Header,\n      Footer = Layout.Footer,\n      Sider = Layout.Sider,\n      Content = Layout.Content;\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"菜鸡\",\n      isTesting: false,\n      isPaperGet: false,\n      isAllDone: false,\n      focusOn: 0,\n      pic: 0\n    };\n    this.logout = this.logout.bind(this);\n    this.done = this.done.bind(this);\n    this.Next = this.Next.bind(this);\n    this.Prev = this.Prev.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  Next() {\n    let x = this.state.focusOn;\n    x++;\n\n    if (x < 30) {\n      this.setState({\n        focusOn: x\n      });\n    }\n  }\n\n  Prev() {\n    let n = this.state.focusOn;\n    n--;\n\n    if (n >= 0) {\n      this.setState({\n        focusOn: n\n      });\n    }\n  }\n\n  Random(arr) {\n    let length = arr.length,\n        randomIndex,\n        temp;\n\n    while (length) {\n      randomIndex = Math.floor(Math.random() * --length);\n      temp = arr[randomIndex];\n      arr[randomIndex] = arr[length];\n      arr[length] = temp;\n    }\n\n    return arr;\n  }\n\n  componentWillMount() {// let that=this;\n    // fetch('http://'+that.props.state.host+'/api/student/test',{\n    //     method: 'POST',\n    //     mode: 'cors',\n    //     headers: {\n    //         \"Content-Type\": \"application/x-www-form-urlencoded\"\n    //     },\n    //     body: JSON.stringify({\n    //         Username: that.props.state.username,\n    //     })\n    // }\n    // ).then(\n    //     res=>{return res.json()}\n    // ).then(\n    //     data=>{\n    //         for(let i=0;i<20;i++){\n    //             that.state.question[i].id=data.test[i].id;\n    //             that.state.question[i].title=data.test[i].text;\n    //             let temp=[\n    //                 {\n    //                     text:data.test[i].a,\n    //                     value:1\n    //                 },\n    //                 {\n    //                     text:data.test[i].b,\n    //                     value:2\n    //                 },\n    //                 {\n    //                     text:data.test[i].c,\n    //                     value:3\n    //                 },\n    //                 {\n    //                     text:data.test[i].d,\n    //                     value:4\n    //                 }\n    //             ]\n    //             that.state.question[i].choice=this.Random(temp);\n    //         }\n    //         for(let i=20;i<30;i++){\n    //             that.state.question[i].id=data.test[i].id;\n    //             that.state.question[i].title=data.test[i].text;\n    //         }\n    //     }\n    // )\n  }\n\n  componentWillUnmount() {// clearInterval(this.timer);\n  }\n\n  logout() {\n    this.props.setState({\n      isWelcome: true,\n      isLogin: false,\n      isStudent: false,\n      isAdmin: false,\n      isTeacher: false,\n      userInfo: {\n        name: '',\n        token: '',\n        access: -1,\n        score: 0\n      },\n      answer: {\n        choice: {},\n        true_false: {}\n      }\n    });\n  }\n\n  submit() {//提交函数\n    // let that = this;\n    // let data={answer:[]};\n    // this.state.question.forEach((x,i)=>{\n    //     data.answer.push({id:x.id,value:x.value})\n    // })\n    // fetch(\"htttp://\" + that.props.state.host + \"/api/student/hangin\",\n    //     {\n    //         method: 'POST',\n    //         mode: 'cors',\n    //         headers: {\n    //             \"Content-Type\": \"application/x-www-form-urlencoded\"\n    //         },\n    //         body: JSON.stringify(data)\n    //     }.then((res)=>{that.setState({isAllDone:true});return res.json()}\n    // ).then(data=>{that.props.setState({userInfo:{score:data.score}})})\n    // )\n  }\n\n  done(i, value) {\n    let x = this.props.state.question;\n    x[i].isFinish = true;\n    x[i].value = value;\n    this.setState({\n      question: x\n    });\n  }\n\n  render() {\n    if (!this.state.isTesting) {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(BG, \")\"),\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          width: \"100%\",\n          height: \"100%\",\n          position: \"absolute\",\n          top: \"0px\",\n          bottom: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        visible: !this.state.isTesting,\n        title: \"\\u7B54\\u9898\\u987B\\u77E5\",\n        centered: true,\n        footer: [React.createElement(Button, {\n          type: \"primary\",\n          onClick: () => {\n            let that = this;\n            that.setState({\n              isTesting: true\n            }); // fetch(\"http://\" + this.props.state.host + '/api/student/start',\n            //     {\n            //         method: 'POST',\n            //         mode: 'cors',\n            //         headers: {\n            //             \"Content-Type\": \"application/x-www-form-urlencoded\"\n            //         },\n            //         body: JSON.stringify({\n            //             Username: that.props.state.username,\n            //         }).then(() => { that.setState({ isTesting: true }) })\n            //     })\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \"\\u5F00\\u59CB\\u7B54\\u9898\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        style: {\n          fontSize: \"15px\",\n          color: \"#1890ff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, this.props.state.name, \"\\u540C\\u5B66,\\u4F60\\u597D!\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"\\u6B22\\u8FCE\\u6765\\u5230\\u6821\\u53F2\\u6821\\u60C5\\u7ADE\\u8D5B\\u7B54\\u9898!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"- \\xA0\\u672C\\u7B54\\u9898\\u5171\\u6709\", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"30\\u9053\\u9898\"), \",\\xA0\\u5176\\u4E2D\\u6709\", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"20\\u9053\\u9009\\u62E9\\u9898,\\xA010\\u9053\\u5224\\u65AD\\u9898\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"- \\xA0\\u9009\\u62E9\\u9898\\u6BCF\\u90534\\u5206,\\xA0\\u5224\\u65AD\\u9898\\u6BCF\\u90532\\u5206,\\xA0\\u6EE1\\u5206\\u5171\", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"100\\u5206\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"- \\xA0\\u7B54\\u9898\\u65F6\\u9650\\u4E3A\", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"30\\u5206\\u949F\"), \",\\xA0\\u65F6\\u95F4\\u7528\\u5B8C\\u81EA\\u52A8\\u4EA4\\u5377\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"- \\xA0\\u5728\\u672A\\u6210\\u529F\\u4EA4\\u5377\\u524D,\\xA0\\u51FA\\u73B0\\u7279\\u6B8A\\u60C5\\u51B5,\\u53EF\\u91CD\\u65B0\\u8FDB\\u5165\\u7B54\\u9898\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"- \\xA0\\u5BF9\\u672C\\u7B54\\u9898\\u6709\\u7591\\u95EE,\\xA0\\u53EF\\u8054\\u7CFB\\u5728\\u573A\\u8D1F\\u8D23\\u8001\\u5E08\")));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      style: {\n        overflow: \"hidder\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"\\u4E1C\\u5357\\u5927\\u5B66\\u6821\\u53F2\\u6821\\u60C5\\u77E5\\u8BC6\\u7ADE\\u8D5B\")), React.createElement(Col, {\n      span: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      state: this.state,\n      setState: this.setState.bind(this),\n      submit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })))), React.createElement(Content, {\n      style: {\n        backgroundColor: '#1C1C1C'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      activeKey: \"\".concat(this.state.focusOn),\n      animated: \"true\",\n      onTabClick: x => {\n        this.setState({\n          focusOn: x\n        });\n      },\n      tabBarGutter: \"0\",\n      tabPosition: \"bottom\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, this.props.state.question.map((x, i) => React.createElement(TabPane, {\n      tab: !x.isFinish ? React.createElement(\"div\", {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, i + 1) : React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#0089A7',\n          backgroundSize: 'cover',\n          color: 'white',\n          borderRadius: 360\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, i + 1),\n      key: i,\n      onChange: () => {\n        this.done(i);\n      },\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, x.kind == \"选择题\" ? React.createElement(Choice, {\n      className: \"choice\",\n      Id: i,\n      state: x,\n      setFinish: this.done.bind(this),\n      Next: this.Next,\n      Prev: this.Prev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }) : React.createElement(TrueFalse, {\n      Id: i,\n      state: x,\n      setFinish: this.done.bind(this),\n      Next: this.Next,\n      Prev: this.Prev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })))))), React.createElement(Footer, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"\\u56FE\\u6E90\\uFF1A\\u4E1C\\u5357\\u5927\\u5B66\\u5B98\\u5FAE\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), \"\\u7248\\u6743\\u6240\\u6709\\xA9\")));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["C:\\Users\\87102\\Documents\\GitHub\\HistoryContest-2019\\historycontest2019\\src\\Components\\Test\\Test.js"],"names":["React","Row","Col","Icon","Tabs","Button","Modal","Layout","List","bg1","bg2","bg3","bg4","bg5","bg6","bg7","bg8","bg9","bg10","bg11","BG","Timer","Choice","TrueFalse","nullLiteral","imgs","TabPane","Header","Footer","Sider","Content","Test","Component","constructor","props","state","name","isTesting","isPaperGet","isAllDone","focusOn","pic","logout","bind","done","Next","Prev","submit","x","setState","n","Random","arr","length","randomIndex","temp","Math","floor","random","componentWillMount","componentWillUnmount","isWelcome","isLogin","isStudent","isAdmin","isTeacher","userInfo","token","access","score","answer","choice","true_false","i","value","question","isFinish","render","backgroundImage","backgroundSize","backgroundPosition","width","height","position","top","bottom","that","fontSize","color","overflow","backgroundColor","textAlign","map","borderRadius","kind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Icon, Tabs, Button, Modal, Layout ,List} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './Test.css';\r\nimport bg1 from '../../img/background1.png';\r\nimport bg2 from '../../img/background2.png';\r\nimport bg3 from '../../img/background3.png';\r\nimport bg4 from '../../img/background4.jpg';\r\nimport bg5 from '../../img/background5.jpg';\r\nimport bg6 from '../../img/background6.jpg';\r\nimport bg7 from '../../img/background7.jpg';\r\nimport bg8 from '../../img/background8.jpg';\r\nimport bg9 from '../../img/background9.jpg';\r\nimport bg10 from '../../img/background10.jpg';\r\nimport bg11 from '../../img/background11.jpg';\r\nimport BG from '../../img/图片2.jpg'\r\n\r\nimport Timer from '../Timer/Timer';\r\nimport Choice from '../Choice/Choice';\r\nimport TrueFalse from '../TrueFalse/TrueFalse';\r\nimport { nullLiteral } from '@babel/types';\r\n\r\nlet imgs = [bg1, bg2, bg3, bg4, bg5, bg6, bg7, bg8, bg9, bg10, bg11];\r\nconst { TabPane } = Tabs;\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nclass Test extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"菜鸡\",\r\n            isTesting: false,\r\n            isPaperGet: false,\r\n            isAllDone: false,\r\n            focusOn: 0,\r\n            pic: 0,\r\n        }\r\n        this.logout = this.logout.bind(this);\r\n        this.done = this.done.bind(this);\r\n        this.Next = this.Next.bind(this);\r\n        this.Prev = this.Prev.bind(this);\r\n        this.submit = this.submit.bind(this);}\r\n    Next() {\r\n        let x = this.state.focusOn;\r\n        x++;\r\n        if (x < 30) {\r\n            this.setState({ focusOn: x })\r\n        }\r\n    }\r\n    Prev() {\r\n        let n = this.state.focusOn;\r\n        n--;\r\n        if (n >= 0) {\r\n            this.setState({ focusOn: n })\r\n        }\r\n    }\r\n    Random(arr) {\r\n        let length = arr.length,\r\n            randomIndex,\r\n            temp;\r\n        while (length) {\r\n            randomIndex = Math.floor(Math.random() * (--length));\r\n            temp = arr[randomIndex];\r\n            arr[randomIndex] = arr[length];\r\n            arr[length] = temp\r\n        }\r\n        return arr;\r\n    }\r\n    componentWillMount() {\r\n        // let that=this;\r\n        // fetch('http://'+that.props.state.host+'/api/student/test',{\r\n        //     method: 'POST',\r\n        //     mode: 'cors',\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        //     },\r\n        //     body: JSON.stringify({\r\n        //         Username: that.props.state.username,\r\n        //     })\r\n        // }\r\n        // ).then(\r\n        //     res=>{return res.json()}\r\n        // ).then(\r\n        //     data=>{\r\n        //         for(let i=0;i<20;i++){\r\n        //             that.state.question[i].id=data.test[i].id;\r\n        //             that.state.question[i].title=data.test[i].text;\r\n        //             let temp=[\r\n        //                 {\r\n        //                     text:data.test[i].a,\r\n        //                     value:1\r\n        //                 },\r\n        //                 {\r\n        //                     text:data.test[i].b,\r\n        //                     value:2\r\n        //                 },\r\n        //                 {\r\n        //                     text:data.test[i].c,\r\n        //                     value:3\r\n        //                 },\r\n        //                 {\r\n        //                     text:data.test[i].d,\r\n        //                     value:4\r\n        //                 }\r\n        //             ]\r\n        //             that.state.question[i].choice=this.Random(temp);\r\n        //         }\r\n        //         for(let i=20;i<30;i++){\r\n        //             that.state.question[i].id=data.test[i].id;\r\n        //             that.state.question[i].title=data.test[i].text;\r\n        //         }\r\n        //     }\r\n        // )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // clearInterval(this.timer);\r\n    }\r\n    logout() {\r\n        this.props.setState({\r\n            isWelcome: true,\r\n            isLogin: false,\r\n            isStudent: false,\r\n            isAdmin: false,\r\n            isTeacher: false,\r\n            userInfo:\r\n            {\r\n                name: '',\r\n                token: '',\r\n                access: -1,\r\n                score: 0\r\n            },\r\n            answer: {\r\n                choice: {},\r\n                true_false: {}\r\n            },\r\n        })\r\n    }\r\n    submit() {\r\n        //提交函数\r\n        // let that = this;\r\n        // let data={answer:[]};\r\n        // this.state.question.forEach((x,i)=>{\r\n        //     data.answer.push({id:x.id,value:x.value})\r\n        // })\r\n        // fetch(\"htttp://\" + that.props.state.host + \"/api/student/hangin\",\r\n        //     {\r\n        //         method: 'POST',\r\n        //         mode: 'cors',\r\n        //         headers: {\r\n        //             \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        //         },\r\n        //         body: JSON.stringify(data)\r\n        //     }.then((res)=>{that.setState({isAllDone:true});return res.json()}\r\n        // ).then(data=>{that.props.setState({userInfo:{score:data.score}})})\r\n        // )\r\n    }\r\n    done(i, value) {\r\n        let x = this.props.state.question;\r\n        x[i].isFinish = true;\r\n        x[i].value = value;\r\n        this.setState({ question: x });\r\n    }\r\n    render() {\r\n        if (!this.state.isTesting) {\r\n            return (\r\n                <div style={{\r\n                    backgroundImage: `url(${BG})`,\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center',\r\n                    width: \"100%\", height: \"100%\",\r\n                    position: \"absolute\",\r\n                    top: \"0px\",\r\n                    bottom: \"0px\"\r\n                }}>\r\n                    <Modal\r\n                        visible={!this.state.isTesting}\r\n                        title=\"答题须知\"\r\n                        centered={true}\r\n                        footer={[\r\n                            <Button type=\"primary\" onClick={() => {\r\n                                let that = this;\r\n                                that.setState({ isTesting: true })\r\n                                // fetch(\"http://\" + this.props.state.host + '/api/student/start',\r\n                                //     {\r\n                                //         method: 'POST',\r\n                                //         mode: 'cors',\r\n                                //         headers: {\r\n                                //             \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                                //         },\r\n                                //         body: JSON.stringify({\r\n                                //             Username: that.props.state.username,\r\n                                //         }).then(() => { that.setState({ isTesting: true }) })\r\n                                //     })\r\n                            }}>\r\n                                开始答题\r\n                      </Button>\r\n                        ]}>\r\n                        <b style={{fontSize:\"15px\",color:\"#1890ff\"}}>{this.props.state.name}同学,你好!</b><br></br>\r\n                        <p>欢迎来到校史校情竞赛答题!</p><p></p>\r\n                        <p>- &nbsp;本答题共有<b>30道题</b>,&nbsp;其中有<b>20道选择题,&nbsp;10道判断题</b></p>\r\n                        <p>- &nbsp;选择题每道4分,&nbsp;判断题每道2分,&nbsp;满分共<b>100分</b></p>\r\n                        <p>- &nbsp;答题时限为<b>30分钟</b>,&nbsp;时间用完自动交卷</p>\r\n                        <p>- &nbsp;在未成功交卷前,&nbsp;出现特殊情况,可重新进入答题</p>\r\n                        <p>- &nbsp;对本答题有疑问,&nbsp;可联系在场负责老师</p>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Layout style={{ overflow: \"hidder\" }}>\r\n                    <Header>\r\n                        <Row>\r\n                            <Col span={2}></Col>\r\n                            <Col span={16}>\r\n                                <h1 style={{ color: 'white' }}>东南大学校史校情知识竞赛</h1>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Timer state={this.state} setState={this.setState.bind(this)} submit={this.submit}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Header>\r\n                    <Content style={{ backgroundColor: '#1C1C1C' }}>\r\n                        <Row>\r\n                            <Tabs activeKey={`${this.state.focusOn}`}\r\n                                animated='true'\r\n                                onTabClick={(x) => { this.setState({ focusOn: x }) }}\r\n                                tabBarGutter='0'\r\n                                tabPosition=\"bottom\"\r\n                                style={{ textAlign: \"center\" }}>\r\n                                {this.props.state.question.map((x, i) => (\r\n                                    <TabPane tab={!x.isFinish ? <div style={{ color: 'white' }}>{i + 1}</div> : <div style={{ backgroundColor: '#0089A7', backgroundSize: 'cover', color: 'white', borderRadius: 360 }}>{i + 1}</div>}\r\n                                        key={i}\r\n                                        onChange={() => { this.done(i) }}\r\n                                        style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                        <Col span={2}>\r\n\r\n                                        </Col>\r\n                                        <Col span={20}>\r\n                                            {x.kind == \"选择题\" ?\r\n                                                <Choice className=\"choice\" Id={i} state={x} setFinish={this.done.bind(this)} Next={this.Next} Prev={this.Prev} />\r\n                                                : <TrueFalse Id={i} state={x} setFinish={this.done.bind(this)} Next={this.Next} Prev={this.Prev} />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={2}>\r\n\r\n                                        </Col>\r\n                                    </TabPane>))\r\n                                }\r\n                            </Tabs>\r\n                        </Row>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>图源：东南大学官微<br />版权所有©</Footer>\r\n                </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test\r\n"]},"metadata":{},"sourceType":"module"}