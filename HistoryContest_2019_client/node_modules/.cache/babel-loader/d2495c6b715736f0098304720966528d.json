{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\\\u65B0\\u5EFA\\u6587\\u4EF6\\u5939\\\\HistoryContest-2019\\\\HistoryContest_2019_client\\\\src\\\\Components\\\\Timer\\\\Timer.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport 'rc-texty/assets/index.css';\nimport { Icon, notification } from 'antd';\nimport Texty from 'rc-texty';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      min: this.props.min,\n      sec: this.props.sec,\n      isClocking: true\n    };\n  }\n\n  componentWillMount() {\n    this.timerId = setInterval(function () {\n      let x = this.state.sec;\n      let y = this.state.min;\n\n      if (y == 0 && x == 0) {\n        clearInterval(this.timerId);\n        this.state.isClocking = false;\n        this.props.finish();\n      } else if (x > 0) {\n        this.setState({\n          sec: x - 1\n        });\n      } else {\n        this.setState({\n          sec: 59,\n          min: y - 1\n        });\n      }\n\n      if (y == 1 && x == 0) {\n        notification.open({\n          message: \"时间还有1分钟\",\n          description: \"距离自动交卷只剩1分钟了哦，同学要加油啦\",\n          icon: React.createElement(Icon, {\n            type: \"clock-circle\",\n            style: {\n              color: \"rgb(248, 39, 39)\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          })\n        });\n      } else if (y == 10 && x == 0) {\n        notification.open({\n          message: \"时间还有10分钟\",\n          description: \"距离自动交卷还有10分钟，同学要加油啦\",\n          icon: React.createElement(Icon, {\n            type: \"clock-circle\",\n            style: {\n              color: \"rgb(248, 39, 39)\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          })\n        });\n      }\n    }.bind(this), 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.state.isClocking) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: \"white\",\n        fontSize: \"20px\"\n      },\n      type: \"scaleY\",\n      mode: \"sync\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.info + this.state.min + \" 分 \" + this.state.sec + \" 秒 \"));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["D:\\Project\\新建文件夹\\HistoryContest-2019\\HistoryContest_2019_client\\src\\Components\\Timer\\Timer.js"],"names":["React","Icon","notification","Texty","Timer","Component","constructor","props","state","min","sec","isClocking","componentWillMount","timerId","setInterval","x","y","clearInterval","finish","setState","open","message","description","icon","color","bind","componentWillUnmount","render","fontSize","info"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport 'rc-texty/assets/index.css';\r\nimport {Icon, notification} from 'antd';\r\nimport Texty from 'rc-texty';\r\n\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            min: this.props.min,\r\n            sec: this.props.sec,\r\n            isClocking: true\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.timerId = setInterval(\r\n            function () {\r\n                let x = this.state.sec;\r\n                let y = this.state.min;\r\n                if (y == 0 && x == 0) {\r\n                    clearInterval(this.timerId);\r\n                    this.state.isClocking = false;\r\n                    this.props.finish();\r\n                }\r\n                else if (x > 0) {\r\n                    this.setState({ sec: x - 1 });\r\n                }\r\n                else {\r\n                    this.setState({ sec: 59, min: y - 1 });\r\n                }\r\n                if (y == 1 && x == 0) {\r\n                    notification.open({\r\n                        message: \"时间还有1分钟\",\r\n                        description: \"距离自动交卷只剩1分钟了哦，同学要加油啦\",\r\n                        icon: <Icon type=\"clock-circle\" style={{ color: \"rgb(248, 39, 39)\" }} />\r\n                    })\r\n                }\r\n                else if (y == 10 && x == 0) {\r\n                    notification.open({\r\n                        message: \"时间还有10分钟\",\r\n                        description: \"距离自动交卷还有10分钟，同学要加油啦\",\r\n                        icon: <Icon type=\"clock-circle\" style={{ color: \"rgb(248, 39, 39)\" }} />\r\n                    })\r\n                }\r\n\r\n            }.bind(this),\r\n            1000\r\n        )\r\n    }\r\n    componentWillUnmount() {\r\n        if (this.state.isClocking) {\r\n            clearInterval(this.timerId);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{ color: \"white\", fontSize: \"20px\" }} type=\"scaleY\" mode=\"sync\" >\r\n                    {/* <Icon type=\"clock-circle\" style={{ color: \"rgb(248, 39, 39)\", fontSize: \"25px\" }} /> */}\r\n                    {this.props.info+this.state.min+\" 分 \"+this.state.sec+\" 秒 \"}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}