{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\87102\\\\Documents\\\\GitHub\\\\HistoryContest-2019\\\\historycontest2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\87102\\\\Documents\\\\GitHub\\\\HistoryContest-2019\\\\historycontest2019\\\\src\\\\Components\\\\LoginModal\\\\LoginModal.js\";\nimport React from 'react';\nimport \"antd/dist/antd.css\";\nimport { Icon, Button, Input, Modal, message, Dropdown, Menu } from 'antd';\nimport bg from '../../img/VerifyCodeBG.png';\n\nclass LoginModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({\n      visible: true,\n      attemp: \"0\",\n      name: \"\",\n      username: '',\n      password: '',\n      toDo: \"登录\",\n      posted: false\n    }, this.initState(), {\n      inputValue: \"\",\n      verifyCode: \"\"\n    });\n    this.ToLogin = this.ToLogin.bind(this);\n    this.close = this.close.bind(this);\n    this.signin = this.signin.bind(this);\n    this.ToSignin = this.ToSignin.bind(this);\n  }\n\n  ToLogin() {\n    let code = this.state.data.map(v => String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13));\n    let code1 = code.join(\"\");\n    let that = this;\n    let username = this.state.username;\n    let password = this.state.password;\n    let identity = this.state.attemp;\n    that.setState({\n      verifyCode: code1\n    }); //暂时的登陆函数\n\n    if (this.state.verifyCode.toLowerCase() == this.state.inputValue.toLowerCase()) {\n      console.log(\"login\");\n      message.success(\"登录成功！\");\n      that.props.setState({\n        isWelcome: false,\n        isStudent: true,\n        isLogin: true,\n        username: that.state.username\n      });\n    } else {\n      console.log(\"false\");\n    } // fetch('http://' + that.props.state.host + '/api/login', {\n    //     method: 'POST',\n    //     mode: 'cors',\n    //     headers: {\n    //         \"Content-Type\": \"application/x-www-form-urlencoded\"\n    //     },\n    //     body: JSON.stringify({\n    //         Username: username,\n    //         Password: password,\n    //         Identity: identity\n    //     })\n    // }).then(\n    //     async res => { \n    //     if (res.status == 404) {\n    //         message.error(\"学号不存在\");\n    //     }\n    //     else if (res.status == 204) {\n    //         message.error(\"用户名或密码错误\");\n    //     }\n    //     else {\n    //         //学生登陆成功\n    //         let data= await res.json() ;\n    //         this.setState({posted:false})\n    //         console.log(\"login\");\n    //         message.success(\"登录成功！\");\n    //         if (identity == \"0\") {\n    //             that.props.setState({\n    //                 isWelcome: false,\n    //                 isStudent: true,\n    //                 isLogin: true,\n    //                 username: this.state.username,\n    //                 userInfo:{\n    //                     name:data.body.Name,\n    //                     score:data.body.Score,\n    //                     access:0\n    //                 }\n    //             });\n    //         }\n    //         else if(identity==\"2\"){\n    //             that.props.setState({\n    //                 isWelcome:false,\n    //                 isTeacher:true,\n    //                 userInfo:{\n    //                     access:2\n    //                 }\n    //             })\n    //         }\n    //         else if(identity==\"1\"){\n    //             that.props.setState({\n    //                 isWelcome:false,\n    //                 isAdmin:true,\n    //                 userInfo:{\n    //                     access:1\n    //                 }\n    //             })\n    //         }\n    //     }\n    // })\n\n  }\n\n  ToSignin() {\n    //暂时的注册函数\n    this.props.setState({\n      isWelcome: false,\n      isStudent: true,\n      isLogin: true\n    });\n  }\n\n  close() {\n    this.setState({\n      visible: false\n    });\n    this.props.close();\n  }\n\n  signin() {\n    this.setState({\n      toDo: \"注册\"\n    });\n  }\n\n  initState() {\n    return {\n      data: this.getRandom(109, 48, 4),\n      rotate: this.getRandom(60, -60, 4),\n      fz: this.getRandom(10, 20, 4),\n      color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\n    };\n  }\n\n  getRandom(max, min, num) {\n    const asciiNum = ~~(Math.random() * (max - min + 1) + min);\n\n    if (!Boolean(num)) {\n      return asciiNum;\n    }\n\n    const arr = [];\n\n    for (let i = 0; i < num; i++) {\n      arr.push(this.getRandom(max, min));\n    }\n\n    return arr;\n  }\n\n  render() {\n    let login = React.createElement(\"div\", {\n      id: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      title: React.createElement(Dropdown, {\n        overlay: React.createElement(Menu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(Menu.Item, {\n          key: \"1\",\n          onClick: () => this.setState({\n            attemp: \"0\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \"\\u5B66\\u751F\"), React.createElement(Menu.Item, {\n          key: \"2\",\n          onClick: () => this.setState({\n            attemp: \"2\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \"\\u8F85\\u5BFC\\u5458\"), React.createElement(Menu.Item, {\n          key: \"3\",\n          onClick: () => this.setState({\n            attemp: \"1\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \"\\u7BA1\\u7406\\u5458\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"defult\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), this.state.attemp == 0 && \"学生\", this.state.attemp == 2 && \"辅导员\", this.state.attemp == 1 && \"管理员\")),\n      visible: this.state.visible,\n      onOk: this.StudentToLogin,\n      onCancel: this.close,\n      footer: [React.createElement(Button, {\n        key: \"\\u8FD4\\u56DE\",\n        type: \"defult\",\n        onClick: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"), React.createElement(Button, {\n        key: \"\\u767B\\u5F55\",\n        type: \"primary\",\n        onClick: this.ToLogin,\n        loading: this.state.posted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"check-circle\",\n        theme: \"twoTone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), \"\\u767B\\u5F55\")],\n      visible: this.state.visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"username\",\n      addonBefore: \" \\u8D26\\u6237 \",\n      placeholder: \"\\u516B\\u4F4D\\u5B66\\u53F7\",\n      allowClear: true,\n      onChange: (x, v) => {\n        this.setState({\n          username: v\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(Input.Password, {\n      id: \"password\",\n      addonBefore: \" \\u5BC6\\u7801 \",\n      placeholder: \"\\u4E00\\u5361\\u901A\\u53F7\\u7801\",\n      allowClear: true,\n      onChange: (x, v) => {\n        this.setState({\n          password: v\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        marginRight: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u9A8C\\u8BC1\\u7801\\uFF08\\u4E0D\\u533A\\u5206\\u5927\\u5C0F\\u5199\\uFF09\",\n      onChange: e => {\n        this.setState({\n          inputValue: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: 100,\n        height: 25,\n        backgroundImage: \"url(\".concat(bg, \")\"),\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.data.map((v, i) => React.createElement(\"div\", {\n      key: i,\n      className: \"itemStr\",\n      style: {\n        transform: \"skewX(\".concat(this.state.rotate[i], \"deg)\"),\n        fontSize: \"\".concat(this.state.fz[i], \"px\"),\n        color: \"rgb(\".concat(this.state.color[i].toString(), \")\"),\n        display: 'inline-block'\n      },\n      onMouseEnter: () => this.setState({\n        refresh: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13), \"\\xA0\\xA0\")), this.state.refresh ? React.createElement(\"div\", {\n      className: \"mask\",\n      onClick: () => {\n        this.setState(_objectSpread({}, this.initState(), {\n          refresh: false\n        }));\n      },\n      onMouseLeave: () => {\n        this.setState({\n          refresh: false\n        });\n      },\n      style: {\n        fontSize: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"\\u770B\\u4E0D\\u6E05\\uFF1F\\u70B9\\u51FB\\u6B64\\u5904\\u5237\\u65B0\") : null)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      onClick: this.signin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\u6CA1\\u6709\\u8D26\\u53F7?\"))));\n    let sign = React.createElement(\"div\", {\n      id: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      title: \"\\u5B66\\u751F\\u6CE8\\u518C \",\n      visible: this.state.visible,\n      onOk: this.StudentToLogin,\n      onCancel: this.close,\n      footer: [React.createElement(Button, {\n        key: \"\\u8FD4\\u56DE\",\n        type: \"defult\",\n        onClick: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"), React.createElement(Button, {\n        key: \"\\u6CE8\\u518C\",\n        type: \"primary\",\n        onClick: this.ToSignin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"\\u6CE8\\u518C\")],\n      visible: this.state.visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"name\",\n      addonBefore: \" \\u59D3\\u540D \",\n      placeholder: \"\\u4F60\\u7684\\u59D3\\u540D\",\n      allowClear: true,\n      onChange: (x, v) => {\n        this.setState({\n          name: v\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: \"username\",\n      addonBefore: \" \\u8D26\\u6237 \",\n      placeholder: \"\\u5B66\\u53F7\",\n      allowClear: true,\n      onChange: (x, v) => {\n        this.setState({\n          username: v\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(Input.Password, {\n      id: \"password\",\n      addonBefore: \" \\u5BC6\\u7801 \",\n      placeholder: \"\\u4E00\\u5361\\u901A\\u53F7\",\n      allowClear: true,\n      onChange: (x, v) => {\n        this.setState({\n          password: v\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, this.state.toDo == \"登录\" ? login : sign);\n  }\n\n}\n\nexport default LoginModal;","map":{"version":3,"sources":["C:\\Users\\87102\\Documents\\GitHub\\HistoryContest-2019\\historycontest2019\\src\\Components\\LoginModal\\LoginModal.js"],"names":["React","Icon","Button","Input","Modal","message","Dropdown","Menu","bg","LoginModal","Component","constructor","props","state","visible","attemp","name","username","password","toDo","posted","initState","inputValue","verifyCode","ToLogin","bind","close","signin","ToSignin","code","data","map","v","String","fromCharCode","code1","join","that","identity","setState","toLowerCase","console","log","success","isWelcome","isStudent","isLogin","getRandom","rotate","fz","color","max","min","num","asciiNum","Math","random","Boolean","arr","i","push","render","login","StudentToLogin","x","marginRight","e","target","value","width","height","backgroundImage","textAlign","transform","fontSize","toString","display","refresh","sign"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,OAArC,EAA8CC,QAA9C,EAAwDC,IAAxD,QAAoE,MAApE;AACA,OAAOC,EAAP,MAAe,4BAAf;;AAEA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL;AACIC,MAAAA,OAAO,EAAE,IADb;AAEIC,MAAAA,MAAM,EAAE,GAFZ;AAGIC,MAAAA,IAAI,EAAE,EAHV;AAIIC,MAAAA,QAAQ,EAAE,EAJd;AAKIC,MAAAA,QAAQ,EAAE,EALd;AAMIC,MAAAA,IAAI,EAAE,IANV;AAOIC,MAAAA,MAAM,EAAE;AAPZ,OAQO,KAAKC,SAAL,EARP;AASIC,MAAAA,UAAU,EAAE,EAThB;AAUIC,MAAAA,UAAU,EAAE;AAVhB;AAYA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AACDD,EAAAA,OAAO,GAAG;AACN,QAAIK,IAAI,GAAC,KAAKhB,KAAL,CAAWiB,IAAX,CAAgBC,GAAhB,CAAqBC,CAAD,IAAKC,MAAM,CAACC,YAAP,CAAoBF,CAAC,GAAG,EAAJ,IAAUA,CAAC,GAAG,EAAd,GAAmBA,CAAC,GAAG,CAAvB,GAA4BA,CAAC,GAAG,EAAJ,GAASA,CAAT,GAAaA,CAAC,GAAG,EAAjE,CAAzB,CAAT;AACA,QAAIG,KAAK,GAACN,IAAI,CAACO,IAAL,CAAU,EAAV,CAAV;AAEA,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIpB,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAA1B;AACA,QAAIC,QAAQ,GAAG,KAAKL,KAAL,CAAWK,QAA1B;AACA,QAAIoB,QAAQ,GAAG,KAAKzB,KAAL,CAAWE,MAA1B;AACAsB,IAAAA,IAAI,CAACE,QAAL,CAAc;AAAChB,MAAAA,UAAU,EAAEY;AAAb,KAAd,EARM,CASN;;AACA,QAAI,KAAKtB,KAAL,CAAWU,UAAX,CAAsBiB,WAAtB,MAAqC,KAAK3B,KAAL,CAAWS,UAAX,CAAsBkB,WAAtB,EAAzC,EAA8E;AAC1EC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACArC,MAAAA,OAAO,CAACsC,OAAR,CAAgB,OAAhB;AACAN,MAAAA,IAAI,CAACzB,KAAL,CAAW2B,QAAX,CAAoB;AAChBK,QAAAA,SAAS,EAAE,KADK;AAEhBC,QAAAA,SAAS,EAAE,IAFK;AAGhBC,QAAAA,OAAO,EAAE,IAHO;AAIhB7B,QAAAA,QAAQ,EAAEoB,IAAI,CAACxB,KAAL,CAAWI;AAJL,OAApB;AAMH,KATD,MAUI;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,KAtBK,CA0BN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGH;;AACDd,EAAAA,QAAQ,GAAG;AACP;AACA,SAAKhB,KAAL,CAAW2B,QAAX,CAAoB;AAAEK,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,SAAS,EAAE,IAA/B;AAAqCC,MAAAA,OAAO,EAAE;AAA9C,KAApB;AACH;;AACDpB,EAAAA,KAAK,GAAG;AACJ,SAAKa,QAAL,CAAc;AAAEzB,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,SAAKF,KAAL,CAAWc,KAAX;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,SAAKY,QAAL,CAAc;AAAEpB,MAAAA,IAAI,EAAE;AAAR,KAAd;AACH;;AACDE,EAAAA,SAAS,GAAG;AACR,WAAO;AACHS,MAAAA,IAAI,EAAE,KAAKiB,SAAL,CAAe,GAAf,EAAoB,EAApB,EAAwB,CAAxB,CADH;AAEHC,MAAAA,MAAM,EAAE,KAAKD,SAAL,CAAe,EAAf,EAAmB,CAAC,EAApB,EAAwB,CAAxB,CAFL;AAGHE,MAAAA,EAAE,EAAE,KAAKF,SAAL,CAAe,EAAf,EAAmB,EAAnB,EAAuB,CAAvB,CAHD;AAIHG,MAAAA,KAAK,EAAE,CAAC,KAAKH,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAAD,EAA8B,KAAKA,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAA9B,EAA2D,KAAKA,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAA3D,EAAwF,KAAKA,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAAxF;AAJJ,KAAP;AAMH;;AAEDA,EAAAA,SAAS,CAACI,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgB;AACrB,UAAMC,QAAQ,GAAG,CAAC,EAAEC,IAAI,CAACC,MAAL,MAAiBL,GAAG,GAAGC,GAAN,GAAY,CAA7B,IAAkCA,GAApC,CAAlB;;AACA,QAAI,CAACK,OAAO,CAACJ,GAAD,CAAZ,EAAmB;AACf,aAAOC,QAAP;AACH;;AACD,UAAMI,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAApB,EAAyBM,CAAC,EAA1B,EAA8B;AAC1BD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAKb,SAAL,CAAeI,GAAf,EAAoBC,GAApB,CAAT;AACH;;AACD,WAAOM,GAAP;AACH;;AACDG,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR,oBAAC,KAAD;AACI,MAAA,KAAK,EACD,oBAAC,QAAD;AAAU,QAAA,OAAO,EACb,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAC,GAAf;AAAmB,UAAA,OAAO,EAAE,MAAM,KAAKvB,QAAL,CAAc;AAAExB,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAC,GAAf;AAAmB,UAAA,OAAO,EAAE,MAAM,KAAKwB,QAAL,CAAc;AAAExB,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,EAGI,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAC,GAAf;AAAmB,UAAA,OAAO,EAAE,MAAM,KAAKwB,QAAL,CAAc;AAAExB,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHJ,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEK,KAAKF,KAAL,CAAWE,MAAX,IAAqB,CAArB,IAA0B,IAF/B,EAGK,KAAKF,KAAL,CAAWE,MAAX,IAAqB,CAArB,IAA0B,KAH/B,EAIK,KAAKF,KAAL,CAAWE,MAAX,IAAqB,CAArB,IAA0B,KAJ/B,CANJ,CAFR;AAeI,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OAfxB;AAgBI,MAAA,IAAI,EAAE,KAAKiD,cAhBf;AAiBI,MAAA,QAAQ,EAAE,KAAKrC,KAjBnB;AAkBI,MAAA,MAAM,EAAE,CACJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,cAAZ;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,OAAO,EAAE,KAAKA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADI,EAIJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,cAAZ;AAAiB,QAAA,IAAI,EAAC,SAAtB;AAAgC,QAAA,OAAO,EAAE,KAAKF,OAA9C;AAAuD,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWO,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,KAAK,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,iBAJI,CAlBZ;AA2BI,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC,OA3BxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA6BI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,UAAV;AAAqB,MAAA,WAAW,EAAC,gBAAjC;AAAwC,MAAA,WAAW,EAAC,0BAApD;AAA2D,MAAA,UAAU,MAArE;AAAsE,MAAA,QAAQ,EAAE,CAACkD,CAAD,EAAIhC,CAAJ,KAAU;AAAE,aAAKO,QAAL,CAAc;AAAEtB,UAAAA,QAAQ,EAAEe;AAAZ,SAAd;AAAgC,OAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BJ,EA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,EA+BI,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,EAAE,EAAC,UAAnB;AAA8B,MAAA,WAAW,EAAC,gBAA1C;AAAiD,MAAA,WAAW,EAAC,gCAA7D;AAAqE,MAAA,UAAU,MAA/E;AAAgF,MAAA,QAAQ,EAAE,CAACgC,CAAD,EAAIhC,CAAJ,KAAU;AAAE,aAAKO,QAAL,CAAc;AAAErB,UAAAA,QAAQ,EAAEc;AAAZ,SAAd;AAAgC,OAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BJ,EAgCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCJ,EAiCI;AAAG,MAAA,KAAK,EAAE;AAAEiC,QAAAA,WAAW,EAAE;AAAf,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,sFAAnB;AAAoC,MAAA,QAAQ,EAAGC,CAAD,IAAO;AAAE,aAAK3B,QAAL,CAAc;AAAEjB,UAAAA,UAAU,EAAE4C,CAAC,CAACC,MAAF,CAASC;AAAvB,SAAd;AAA+C,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE,EAAtB;AAA0BC,QAAAA,eAAe,gBAAS/D,EAAT,MAAzC;AAAyDgE,QAAAA,SAAS,EAAC;AAAnE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK3D,KAAL,CAAWiB,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,CAAD,EAAI2B,CAAJ,KACjB;AACI,MAAA,GAAG,EAAEA,CADT;AAEI,MAAA,SAAS,EAAC,SAFd;AAGI,MAAA,KAAK,EAAE;AACHc,QAAAA,SAAS,kBAAW,KAAK5D,KAAL,CAAWmC,MAAX,CAAkBW,CAAlB,CAAX,SADN;AAEHe,QAAAA,QAAQ,YAAK,KAAK7D,KAAL,CAAWoC,EAAX,CAAcU,CAAd,CAAL,OAFL;AAGHT,QAAAA,KAAK,gBAAS,KAAKrC,KAAL,CAAWqC,KAAX,CAAiBS,CAAjB,EAAoBgB,QAApB,EAAT,MAHF;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAHX;AASI,MAAA,YAAY,EAAE,MAAM,KAAKrC,QAAL,CAAc;AAAEsC,QAAAA,OAAO,EAAE;AAAX,OAAd,CATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUK5C,MAAM,CAACC,YAAP,CAAoBF,CAAC,GAAG,EAAJ,IAAUA,CAAC,GAAG,EAAd,GAAmBA,CAAC,GAAG,CAAvB,GAA4BA,CAAC,GAAG,EAAJ,GAASA,CAAT,GAAaA,CAAC,GAAG,EAAjE,CAVL,aADH,CADL,EAeK,KAAKnB,KAAL,CAAWgE,OAAX,GAEG;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,OAAO,EAAE,MAAM;AACX,aAAKtC,QAAL,mBAAmB,KAAKlB,SAAL,EAAnB;AAAqCwD,UAAAA,OAAO,EAAE;AAA9C;AACH,OAJL;AAKI,MAAA,YAAY,EAAE,MAAM;AAAE,aAAKtC,QAAL,CAAc;AAAEsC,UAAAA,OAAO,EAAE;AAAX,SAAd;AAAmC,OAL7D;AAMI,MAAA,KAAK,EAAE;AAAEH,QAAAA,QAAQ,EAAE;AAAZ,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFH,GAYG,IA3BR,CAHJ,CAjCJ,EAmEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,EACI;AAAG,MAAA,OAAO,EAAE,KAAK/C,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,CAnEJ,CADQ,CAAZ;AA8EA,QAAImD,IAAI,GAAG;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,2BADV;AAEI,MAAA,OAAO,EAAE,KAAKjE,KAAL,CAAWC,OAFxB;AAGI,MAAA,IAAI,EAAE,KAAKiD,cAHf;AAII,MAAA,QAAQ,EAAE,KAAKrC,KAJnB;AAKI,MAAA,MAAM,EAAE,CACJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,cAAZ;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,OAAO,EAAE,KAAKA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADI,EAIJ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,cAAZ;AAAiB,QAAA,IAAI,EAAC,SAAtB;AAAgC,QAAA,OAAO,EAAE,KAAKE,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJI,CALZ;AAaI,MAAA,OAAO,EAAE,KAAKf,KAAL,CAAWC,OAbxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,MAAV;AAAiB,MAAA,WAAW,EAAC,gBAA7B;AAAoC,MAAA,WAAW,EAAC,0BAAhD;AAAuD,MAAA,UAAU,MAAjE;AAAkE,MAAA,QAAQ,EAAE,CAACkD,CAAD,EAAIhC,CAAJ,KAAU;AAAE,aAAKO,QAAL,CAAc;AAAEvB,UAAAA,IAAI,EAAEgB;AAAR,SAAd;AAA4B,OAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,EAiBI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,UAAV;AAAqB,MAAA,WAAW,EAAC,gBAAjC;AAAwC,MAAA,WAAW,EAAC,cAApD;AAAyD,MAAA,UAAU,MAAnE;AAAoE,MAAA,QAAQ,EAAE,CAACgC,CAAD,EAAIhC,CAAJ,KAAU;AAAE,aAAKO,QAAL,CAAc;AAAEtB,UAAAA,QAAQ,EAAEe;AAAZ,SAAd;AAAgC,OAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,EAmBI,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,EAAE,EAAC,UAAnB;AAA8B,MAAA,WAAW,EAAC,gBAA1C;AAAiD,MAAA,WAAW,EAAC,0BAA7D;AAAoE,MAAA,UAAU,MAA9E;AAA+E,MAAA,QAAQ,EAAE,CAACgC,CAAD,EAAIhC,CAAJ,KAAU;AAAE,aAAKO,QAAL,CAAc;AAAErB,UAAAA,QAAQ,EAAEc;AAAZ,SAAd;AAAgC,OAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,CADO,CAAX;AAwBA,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnB,KAAL,CAAWM,IAAX,IAAmB,IAAnB,GAA0B2C,KAA1B,GAAkCgB,IADvC,CADJ;AAKH;;AAtPoC;;AAyPzC,eAAerE,UAAf","sourcesContent":["import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport { Icon, Button, Input, Modal, message, Dropdown, Menu } from 'antd';\r\nimport bg from '../../img/VerifyCodeBG.png'\r\n\r\nclass LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: true,\r\n            attemp: \"0\",\r\n            name: \"\",\r\n            username: '',\r\n            password: '',\r\n            toDo: \"登录\",\r\n            posted: false,\r\n            ...this.initState(),\r\n            inputValue: \"\",\r\n            verifyCode: \"\",\r\n        }\r\n        this.ToLogin = this.ToLogin.bind(this);\r\n        this.close = this.close.bind(this);\r\n        this.signin = this.signin.bind(this);\r\n        this.ToSignin = this.ToSignin.bind(this);\r\n    }\r\n    ToLogin() {\r\n        let code=this.state.data.map((v)=>String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13)));\r\n        let code1=code.join(\"\");\r\n        \r\n        let that = this;\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        let identity = this.state.attemp;\r\n        that.setState({verifyCode: code1 });\r\n        //暂时的登陆函数\r\n        if (this.state.verifyCode.toLowerCase()==this.state.inputValue.toLowerCase()) {\r\n            console.log(\"login\");\r\n            message.success(\"登录成功！\");\r\n            that.props.setState({\r\n                isWelcome: false,\r\n                isStudent: true,\r\n                isLogin: true,\r\n                username: that.state.username\r\n            })\r\n        }\r\n        else{\r\n            console.log(\"false\");\r\n        }\r\n\r\n\r\n\r\n        // fetch('http://' + that.props.state.host + '/api/login', {\r\n        //     method: 'POST',\r\n        //     mode: 'cors',\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        //     },\r\n        //     body: JSON.stringify({\r\n        //         Username: username,\r\n        //         Password: password,\r\n        //         Identity: identity\r\n        //     })\r\n        // }).then(\r\n        //     async res => { \r\n        //     if (res.status == 404) {\r\n        //         message.error(\"学号不存在\");\r\n        //     }\r\n        //     else if (res.status == 204) {\r\n        //         message.error(\"用户名或密码错误\");\r\n        //     }\r\n        //     else {\r\n        //         //学生登陆成功\r\n        //         let data= await res.json() ;\r\n        //         this.setState({posted:false})\r\n        //         console.log(\"login\");\r\n        //         message.success(\"登录成功！\");\r\n        //         if (identity == \"0\") {\r\n        //             that.props.setState({\r\n        //                 isWelcome: false,\r\n        //                 isStudent: true,\r\n        //                 isLogin: true,\r\n        //                 username: this.state.username,\r\n        //                 userInfo:{\r\n        //                     name:data.body.Name,\r\n        //                     score:data.body.Score,\r\n        //                     access:0\r\n        //                 }\r\n        //             });\r\n        //         }\r\n        //         else if(identity==\"2\"){\r\n        //             that.props.setState({\r\n        //                 isWelcome:false,\r\n        //                 isTeacher:true,\r\n        //                 userInfo:{\r\n        //                     access:2\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //         else if(identity==\"1\"){\r\n        //             that.props.setState({\r\n        //                 isWelcome:false,\r\n        //                 isAdmin:true,\r\n        //                 userInfo:{\r\n        //                     access:1\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //     }\r\n        // })\r\n\r\n\r\n    }\r\n    ToSignin() {\r\n        //暂时的注册函数\r\n        this.props.setState({ isWelcome: false, isStudent: true, isLogin: true });\r\n    }\r\n    close() {\r\n        this.setState({ visible: false });\r\n        this.props.close();\r\n    }\r\n    signin() {\r\n        this.setState({ toDo: \"注册\" });\r\n    }\r\n    initState() {\r\n        return {\r\n            data: this.getRandom(109, 48, 4),\r\n            rotate: this.getRandom(60, -60, 4),\r\n            fz: this.getRandom(10, 20, 4),\r\n            color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\r\n        }\r\n    }\r\n\r\n    getRandom(max, min, num) {\r\n        const asciiNum = ~~(Math.random() * (max - min + 1) + min)\r\n        if (!Boolean(num)) {\r\n            return asciiNum\r\n        }\r\n        const arr = []\r\n        for (let i = 0; i < num; i++) {\r\n            arr.push(this.getRandom(max, min))\r\n        }\r\n        return arr\r\n    }\r\n    render() {\r\n        let login = <div id='modal'>\r\n            <Modal\r\n                title={\r\n                    <Dropdown overlay={\r\n                        <Menu>\r\n                            <Menu.Item key=\"1\" onClick={() => this.setState({ attemp: \"0\" })}>学生</Menu.Item>\r\n                            <Menu.Item key=\"2\" onClick={() => this.setState({ attemp: \"2\" })}>辅导员</Menu.Item>\r\n                            <Menu.Item key=\"3\" onClick={() => this.setState({ attemp: \"1\" })}>管理员</Menu.Item>\r\n                        </Menu >}>\r\n                        <Button type=\"defult\">\r\n                            <Icon type=\"down\" />\r\n                            {this.state.attemp == 0 && \"学生\"}\r\n                            {this.state.attemp == 2 && \"辅导员\"}\r\n                            {this.state.attemp == 1 && \"管理员\"}\r\n                        </Button>\r\n                    </Dropdown>}\r\n                visible={this.state.visible}\r\n                onOk={this.StudentToLogin}\r\n                onCancel={this.close}\r\n                footer={[\r\n                    <Button key=\"返回\" type=\"defult\" onClick={this.close}>\r\n                        返回\r\n              </Button>,\r\n                    <Button key=\"登录\" type=\"primary\" onClick={this.ToLogin} loading={this.state.posted}>\r\n                        <Icon type=\"check-circle\" theme=\"twoTone\" />\r\n                        登录\r\n              </Button>\r\n                ]}\r\n                visible={this.state.visible}\r\n            >\r\n                <Input id=\"username\" addonBefore=\" 账户 \" placeholder=\"八位学号\" allowClear onChange={(x, v) => { this.setState({ username: v }) }}></Input>\r\n                <p></p>\r\n                <Input.Password id=\"password\" addonBefore=\" 密码 \" placeholder=\"一卡通号码\" allowClear onChange={(x, v) => { this.setState({ password: v }) }} />\r\n                <p></p>\r\n                <p style={{ marginRight: 0 }}>\r\n                    <Input placeholder=\"请输入验证码（不区分大小写）\" onChange={(e) => { this.setState({ inputValue: e.target.value }) }}>\r\n                    </Input>\r\n                    <div style={{ width: 100, height: 25, backgroundImage: `url(${bg})`, textAlign:\"center\" }} >\r\n                        {this.state.data.map((v, i) =>\r\n                            <div\r\n                                key={i}\r\n                                className='itemStr'\r\n                                style={{\r\n                                    transform: `skewX(${this.state.rotate[i]}deg)`,\r\n                                    fontSize: `${this.state.fz[i]}px`,\r\n                                    color: `rgb(${this.state.color[i].toString()})`,\r\n                                    display: 'inline-block'\r\n                                }}\r\n                                onMouseEnter={() => this.setState({ refresh: true })}>\r\n                                {String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13))}&nbsp;&nbsp;\r\n                                 </div>\r\n                        )}\r\n                        {this.state.refresh\r\n                            ?\r\n                            <div\r\n                                className='mask'\r\n                                onClick={() => {\r\n                                    this.setState({ ...this.initState(), refresh: false })\r\n                                }}\r\n                                onMouseLeave={() => { this.setState({ refresh: false }) }}\r\n                                style={{ fontSize: \"10px\" }}>\r\n                                看不清？点击此处刷新\r\n                                </div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </p>\r\n                <p > <br></br>\r\n                    <a onClick={this.signin}>\r\n                        &nbsp;&nbsp;没有账号?\r\n                    </a>\r\n                </p>\r\n\r\n            </Modal>\r\n        </div>\r\n\r\n\r\n        let sign = <div id='modal'>\r\n            <Modal\r\n                title=\"学生注册 \"\r\n                visible={this.state.visible}\r\n                onOk={this.StudentToLogin}\r\n                onCancel={this.close}\r\n                footer={[\r\n                    <Button key=\"返回\" type=\"defult\" onClick={this.close}>\r\n                        返回\r\n              </Button>,\r\n                    <Button key=\"注册\" type=\"primary\" onClick={this.ToSignin}>\r\n                        注册\r\n              </Button>\r\n                ]}\r\n                visible={this.state.visible}\r\n            >\r\n                <Input id=\"name\" addonBefore=\" 姓名 \" placeholder=\"你的姓名\" allowClear onChange={(x, v) => { this.setState({ name: v }) }}></Input>\r\n                <p></p>\r\n                <Input id=\"username\" addonBefore=\" 账户 \" placeholder=\"学号\" allowClear onChange={(x, v) => { this.setState({ username: v }) }}></Input>\r\n                <p></p>\r\n                <Input.Password id=\"password\" addonBefore=\" 密码 \" placeholder=\"一卡通号\" allowClear onChange={(x, v) => { this.setState({ password: v }) }} />\r\n\r\n            </Modal>\r\n        </div>\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.toDo == \"登录\" ? login : sign}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginModal;"]},"metadata":{},"sourceType":"module"}