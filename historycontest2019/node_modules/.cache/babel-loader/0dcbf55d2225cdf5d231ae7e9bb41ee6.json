{"ast":null,"code":"import _objectSpread from \"E:\\\\projects\\\\HistoryContest-2019\\\\historycontest2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"E:\\\\projects\\\\HistoryContest-2019\\\\historycontest2019\\\\src\\\\Components\\\\admin\\\\admin.js\";\nimport React from 'react';\nimport { Row, Col, Icon, Tabs, Button, Modal, Layout, Badge, Table, Descriptions, Input, Tag } from 'antd';\nimport 'antd/dist/antd.css';\nimport bg1 from '../../img/background1.png';\nimport mark from '../../img/校徽实体.png';\nimport { async } from 'q';\nconst Header = Layout.Header,\n      Footer = Layout.Footer,\n      Sider = Layout.Sider,\n      Content = Layout.Content;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: \"\\u6309 \".concat(dataIndex, \"\\u67E5\\u627E\"),\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm),\n        icon: \"search\",\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"\\u67E5\\u627E\"), React.createElement(Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"\\u91CD\\u7F6E\")),\n      filterIcon: filtered => React.createElement(Icon, {\n        type: \"search\",\n        size: \"large\",\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }),\n      onFilter: (value, record) => record[dataIndex].includes(value),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      }\n    });\n\n    this.handleSearch = (selectedKeys, confirm) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0]\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n\n    this.state = {\n      data: [],\n      num: 150,\n      depart: \"计算机类\",\n      average: 90,\n      numOfDone: 80,\n      searchText: '',\n      loading: false,\n      register: {\n        Visible: false,\n        post: false,\n        name: \"\",\n        username: \"\",\n        password: \"\"\n      },\n      reset: {\n        Visible: false,\n        post: false,\n        username: \"\",\n        password: \"\",\n        conpassword: \"\"\n      }\n    };\n    this.logout = this.logout.bind(this);\n    this.get = this.get.bind(this);\n    this.register = this.register.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  async get() {\n    const testdata = await require(\"./Students.json\");\n    await testdata.forEach((x, i) => {\n      this.state.data.push({\n        \"姓名\": x.Name,\n        \"学号\": x.ID,\n        \"一卡通\": x.CardID,\n        \"成绩\": 70\n      });\n    });\n    this.setState({});\n  }\n\n  register() {}\n\n  reset() {}\n\n  logout() {\n    this.props.setState({\n      isWelcome: true,\n      isLogin: false,\n      isStudent: false,\n      isAllDone: false,\n      isAdmin: false,\n      isTeacher: false,\n      host: \"\",\n      userInfo: {\n        name: '',\n        username: \"\",\n        token: '',\n        access: -1,\n        score: -1\n      },\n      answer: []\n    });\n  }\n\n  componentWillMount() {\n    this.get(); //测试数据输入\n  }\n\n  render() {\n    let title = [_objectSpread({\n      title: \"姓名\",\n      dataIndex: \"姓名\",\n      key: \"姓名\",\n      width: \"15%\"\n    }, this.getColumnSearchProps(\"姓名\")), _objectSpread({\n      title: \"学号\",\n      dataIndex: \"学号\",\n      key: \"学号\",\n      width: \"15%\"\n    }, this.getColumnSearchProps(\"学号\")), _objectSpread({\n      title: \"一卡通\",\n      dataIndex: \"一卡通\",\n      key: \"一卡通\",\n      width: \"15%\"\n    }, this.getColumnSearchProps(\"一卡通\")), _objectSpread({\n      title: \"院系\",\n      dataIndex: \"院系\",\n      key: \"院系\",\n      width: \"15%\"\n    }, this.getColumnSearchProps(\"院系\")), {\n      title: \"成绩\",\n      dataIndex: \"成绩\",\n      key: \"成绩\",\n      width: \"15%\",\n      filters: [{\n        text: \"已完成\",\n        value: \"已完成\"\n      }, {\n        text: \"未完成\",\n        value: \"未完成\"\n      }],\n      onFilter: (value, record) => {\n        if (value == \"已完成\") {\n          return record[\"成绩\"] >= 0;\n        } else {\n          return record[\"成绩\"] == \"未完成\";\n        }\n      },\n\n      render(score) {\n        if (score >= 90) {\n          return React.createElement(Tag, {\n            color: \"green\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }, score);\n        } else if (score >= 60) {\n          return React.createElement(Tag, {\n            color: \"gold\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, score);\n        } else {\n          return React.createElement(Tag, {\n            color: \"#f50\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, \"\\u672A\\u5B8C\\u6210\");\n        }\n      }\n\n    }, _objectSpread({\n      title: \"排名\",\n      dataIndex: \"排名\",\n      key: \"排名\",\n      width: \"15%\"\n    }, this.getColumnSearchProps(\"排名\")), {\n      title: \"答题详情\",\n      dataIndex: \"答题详情\",\n      key: \"答题详情\",\n      width: \"30%\",\n\n      render(e) {}\n\n    }];\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      title: \"\\u6CE8\\u518C\",\n      visible: this.state.register.Visible,\n      onCancel: () => {\n        this.setState({\n          register: {\n            Visible: false\n          }\n        });\n      },\n      footer: [React.createElement(Button, {\n        key: \"\\u8FD4\\u56DE\",\n        type: \"defult\",\n        onClick: () => {\n          this.setState({\n            register: {\n              Visible: false\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"), React.createElement(Button, {\n        key: \"\\u6CE8\\u518C\",\n        type: \"primary\",\n        onClick: this.register,\n        loading: this.state.register.posted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"check-circle\",\n        theme: \"twoTone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), \"\\u6CE8\\u518C\")],\n      visible: this.state.register.Visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"   \", React.createElement(Input, {\n      id: \"name\",\n      addonBefore: \" \\u59D3\\u540D \",\n      placeholder: \"\\u6CE8\\u518C\\u59D3\\u540D\",\n      allowClear: true,\n      onChange: e => {\n        this.setState({\n          register: {\n            name: e.target.value\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: \"username\",\n      addonBefore: \" \\u8D26\\u6237 \",\n      placeholder: \"\\u5B66\\u53F7\",\n      allowClear: true,\n      onChange: e => {\n        this.setState({\n          register: {\n            username: e.target.value\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(Input.Password, {\n      id: \"password\",\n      addonBefore: \" \\u5BC6\\u7801 \",\n      placeholder: \"\\u4E00\\u5361\\u901A\\u53F7\\u7801\",\n      allowClear: true,\n      onChange: e => {\n        this.setState({\n          register: {\n            password: e.target.value\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      title: \"\\u6CE8\\u518C\",\n      visible: this.state.reset.Visible,\n      onCancel: () => {\n        this.setState({\n          reset: {\n            Visible: false\n          }\n        });\n      },\n      footer: [React.createElement(Button, {\n        key: \"\\u8FD4\\u56DE\",\n        type: \"defult\",\n        onClick: () => {\n          this.setState({\n            reset: {\n              Visible: false\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"\\u8FD4\\u56DE\"), React.createElement(Button, {\n        key: \"\\u6CE8\\u518C\",\n        type: \"primary\",\n        onClick: this.reset,\n        loading: this.state.reset.posted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"check-circle\",\n        theme: \"twoTone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), \"\\u4FEE\\u6539\")],\n      visible: this.state.reset.Visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: \"username\",\n      addonBefore: \" \\u8D26\\u6237 \",\n      placeholder: \"\\u9700\\u8981\\u4FEE\\u6539\\u7684\\u8D26\\u6237(\\u5B66\\u53F7)\",\n      allowClear: true,\n      onChange: e => {\n        this.setState({\n          reset: {\n            username: e.target.value\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(Input.Password, {\n      id: \"password\",\n      addonBefore: \" \\u65B0\\u5BC6\\u7801 \",\n      placeholder: \"\\u63A8\\u8350\\u4E00\\u5361\\u901A\\u53F7\\u7801\",\n      allowClear: true,\n      onChange: e => {\n        this.setState({\n          reset: {\n            password: e.target.value\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Input.Password, {\n      id: \"repassword\",\n      addonBefore: \" \\u65B0\\u5BC6\\u7801 \",\n      placeholder: \"\\u518D\\u6B21\\u8F93\\u5165\\u5BC6\\u7801\",\n      allowClear: true,\n      onChange: e => {\n        this.setState({\n          reset: {\n            conpassword: e.target.value\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })), React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: 'white',\n        fontSize: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: mark,\n      height: \"45px\",\n      width: \"45px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), \"\\xA0\\u6821\\u53F2\\u6821\\u60C5\\u77E5\\u8BC6\\u7ADE\\u8D5B\\xA0\\xA0\\u7BA1\\u7406\\u7CFB\\u7EDF\")), React.createElement(Col, {\n      span: 2,\n      offset: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Button, {\n      ghost: true,\n      type: \"primary\",\n      onClick: this.get,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"redo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), \"\\u5237\\u65B0\")), \" \", React.createElement(Col, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Button, {\n      ghost: true,\n      type: \"dashed\",\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), \"\\u9000\\u51FA\")))), React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 20,\n      offset: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Descriptions, {\n      bordered: true,\n      title: React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: \"30px\",\n          marginTop: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, this.state.depart, \"\\xA0\\u7EDF\\u8BA1\\u4FE1\\u606F\")), React.createElement(Col, {\n        span: 2,\n        offset: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: () => {\n          this.setState({\n            register: {\n              Visible: true\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"\\u5B66\\u751F\\u6CE8\\u518C\"))), React.createElement(Col, {\n        span: 2,\n        offset: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: () => {\n          this.setState({\n            reset: {\n              Visible: true\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"\\u5B66\\u751F\\u4FEE\\u6539\\u5BC6\\u7801\")))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Descriptions.Item, {\n      label: \"\\u603B\\u4EBA\\u6570\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, this.state.num), React.createElement(Descriptions.Item, {\n      label: \"\\u5DF2\\u5B8C\\u6210\\u4EBA\\u6570\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, this.state.numOfDone), React.createElement(Descriptions.Item, {\n      label: \"\\u5E73\\u5747\\u5206\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, this.state.average)), React.createElement(Table, {\n      columns: title,\n      loading: this.state.loading,\n      bordered: true,\n      dataSource: this.state.data,\n      title: () => {\n        React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, \"\\u8BE6\\u7EC6\\u5217\\u8868\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["E:\\projects\\HistoryContest-2019\\historycontest2019\\src\\Components\\admin\\admin.js"],"names":["React","Row","Col","Icon","Tabs","Button","Modal","Layout","Badge","Table","Descriptions","Input","Tag","bg1","mark","async","Header","Footer","Sider","Content","Admin","Component","constructor","props","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","setState","searchText","state","data","num","depart","average","numOfDone","loading","register","Visible","post","name","username","password","reset","conpassword","logout","bind","get","testdata","require","forEach","x","i","push","Name","ID","CardID","isWelcome","isLogin","isStudent","isAllDone","isAdmin","isTeacher","host","userInfo","token","access","score","answer","componentWillMount","render","title","key","filters","text","posted","fontSize","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Icon, Tabs, Button, Modal, Layout, Badge, Table, Descriptions, Input,Tag } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport bg1 from '../../img/background1.png';\r\n\r\nimport mark from '../../img/校徽实体.png'\r\nimport { async } from 'q';\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nclass Admin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            num: 150,\r\n            depart: \"计算机类\",\r\n            average: 90,\r\n            numOfDone: 80,\r\n            searchText: '',\r\n            loading:false,\r\n            register: {\r\n                Visible: false,\r\n                post: false,\r\n                name: \"\",\r\n                username: \"\",\r\n                password: \"\"\r\n            },\r\n            reset: {\r\n                Visible: false,\r\n                post: false,\r\n                username: \"\",\r\n                password: \"\",\r\n                conpassword:\"\"\r\n            }\r\n        }\r\n        this.logout = this.logout.bind(this);\r\n        this.get = this.get.bind(this);\r\n        this.register = this.register.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n    }\r\n    async get() {\r\n        const testdata=await require(\"./Students.json\");\r\n        await testdata.forEach((x,i)=>{\r\n            this.state.data.push({\r\n                \"姓名\":x.Name,\r\n                \"学号\":x.ID,\r\n                \"一卡通\":x.CardID,\r\n                \"成绩\":70\r\n            })\r\n        })\r\n        this.setState({});\r\n    }\r\n    register() {\r\n\r\n    }\r\n    reset() {\r\n\r\n    }\r\n    logout() {\r\n        this.props.setState({\r\n            isWelcome: true,\r\n            isLogin: false,\r\n            isStudent: false,\r\n            isAllDone: false,\r\n            isAdmin: false,\r\n            isTeacher: false,\r\n            host: \"\",\r\n            userInfo:\r\n            {\r\n                name: '',\r\n                username: \"\",\r\n                token: '',\r\n                access: -1,\r\n                score: -1\r\n            },\r\n            answer: []\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.get();\r\n        //测试数据输入\r\n\r\n    }\r\n\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`按 ${dataIndex}查找`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              查找\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              重置\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" size=\"large\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .includes(value),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        }\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      };\r\n  \r\n\r\n    render() {\r\n        let title=[\r\n            {\r\n                title:\"姓名\",\r\n                dataIndex:\"姓名\",\r\n                key:\"姓名\",\r\n                width:\"15%\",\r\n                ...this.getColumnSearchProps(\"姓名\")\r\n            },\r\n            {\r\n                title:\"学号\",\r\n                dataIndex:\"学号\",\r\n                key:\"学号\",\r\n                width:\"15%\",\r\n                ...this.getColumnSearchProps(\"学号\")\r\n            },\r\n            {\r\n                title:\"一卡通\",\r\n                dataIndex:\"一卡通\",\r\n                key:\"一卡通\",\r\n                width:\"15%\",\r\n                ...this.getColumnSearchProps(\"一卡通\")\r\n            },\r\n            {\r\n                title:\"院系\",\r\n                dataIndex:\"院系\",\r\n                key:\"院系\",\r\n                width:\"15%\",\r\n                ...this.getColumnSearchProps(\"院系\")\r\n            },\r\n            {\r\n                title:\"成绩\",\r\n                dataIndex:\"成绩\",\r\n                key:\"成绩\",\r\n                width:\"15%\",\r\n                filters:[{text:\"已完成\",value:\"已完成\"},{text:\"未完成\",value:\"未完成\"}],\r\n                onFilter: (value, record) => {\r\n                    if(value==\"已完成\"){\r\n                        return record[\"成绩\"]>=0;\r\n                    }\r\n                    else{\r\n                        return record[\"成绩\"]==\"未完成\"\r\n                    }\r\n                },\r\n                render(score) {\r\n                    if(score>=90){\r\n                        return <Tag color=\"green\">{score}</Tag>\r\n                    }   \r\n                    else if(score>=60){\r\n                        return <Tag color=\"gold\">{score}</Tag>\r\n                    }\r\n                    else{\r\n                        return <Tag color=\"#f50\">未完成</Tag>\r\n                    }\r\n                },\r\n            },\r\n            {\r\n                title:\"排名\",\r\n                dataIndex:\"排名\",\r\n                key:\"排名\",\r\n                width:\"15%\",\r\n                ...this.getColumnSearchProps(\"排名\")\r\n            },\r\n            {\r\n                title:\"答题详情\",\r\n                dataIndex:\"答题详情\",\r\n                key:\"答题详情\",\r\n                width:\"30%\",\r\n                render(e) {\r\n                    \r\n                },\r\n            },\r\n        ]\r\n        return (\r\n            <React.Fragment>\r\n                <Modal\r\n                    title=\"注册\"\r\n                    visible={this.state.register.Visible}\r\n                    onCancel={() => { this.setState({ register: { Visible: false } }) }}\r\n                    footer={[\r\n                        <Button key=\"返回\" type=\"defult\" onClick={() => { this.setState({ register: { Visible: false } }) }}>\r\n                            返回\r\n              </Button>,\r\n                        <Button key=\"注册\" type=\"primary\" onClick={this.register} loading={this.state.register.posted}>\r\n                            <Icon type=\"check-circle\" theme=\"twoTone\" />\r\n                            注册\r\n              </Button>\r\n                    ]}\r\n                    visible={this.state.register.Visible}\r\n                >   <Input id=\"name\" addonBefore=\" 姓名 \" placeholder=\"注册姓名\" allowClear onChange={(e) => { this.setState({ register: { name: e.target.value } }) }}></Input>\r\n                    <p></p>\r\n                    <Input id=\"username\" addonBefore=\" 账户 \" placeholder=\"学号\" allowClear onChange={(e) => { this.setState({ register: { username: e.target.value } }) }}></Input>\r\n                    <p></p>\r\n                    <Input.Password id=\"password\" addonBefore=\" 密码 \" placeholder=\"一卡通号码\" allowClear onChange={(e) => { this.setState({ register: { password: e.target.value } }) }} />\r\n                    <p></p>\r\n\r\n                </Modal>\r\n                <Modal\r\n                    title=\"注册\"\r\n                    visible={this.state.reset.Visible}\r\n                    onCancel={() => { this.setState({ reset: { Visible: false } }) }}\r\n                    footer={[\r\n                        <Button key=\"返回\" type=\"defult\" onClick={() => { this.setState({ reset: { Visible: false } }) }}>\r\n                            返回\r\n              </Button>,\r\n                        <Button key=\"注册\" type=\"primary\" onClick={this.reset} loading={this.state.reset.posted}>\r\n                            <Icon type=\"check-circle\" theme=\"twoTone\" />\r\n                            修改\r\n              </Button>\r\n                    ]}\r\n                    visible={this.state.reset.Visible}\r\n                > \r\n                    <Input id=\"username\" addonBefore=\" 账户 \" placeholder=\"需要修改的账户(学号)\" allowClear onChange={(e) => { this.setState({ reset: { username: e.target.value } }) }}></Input>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <Input.Password id=\"password\" addonBefore=\" 新密码 \" placeholder=\"推荐一卡通号码\" allowClear onChange={(e) => { this.setState({ reset: { password: e.target.value } }) }} />\r\n                    <Input.Password id=\"repassword\" addonBefore=\" 新密码 \" placeholder=\"再次输入密码\" allowClear onChange={(e) => { this.setState({ reset: { conpassword: e.target.value } }) }} />\r\n                    <p></p>\r\n\r\n                </Modal>\r\n                <Layout>\r\n                    <Header>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <h1 style={{ color: 'white', fontSize: \"25px\" }}><img src={mark} height=\"45px\" width=\"45px\" />&nbsp;校史校情知识竞赛&nbsp;&nbsp;管理系统</h1>\r\n                            </Col>\r\n                            <Col span={2} offset={8}>\r\n                                <Button ghost type=\"primary\" onClick={this.get}><Icon type=\"redo\" />刷新</Button>\r\n                            </Col> <Col span={2} >\r\n                                <Button ghost type=\"dashed\" onClick={this.logout}><Icon type=\"logout\" />退出</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Header>\r\n                    <Content>\r\n                        <Row>\r\n                            <Col span={20} offset={2}>\r\n                                <Descriptions bordered title={\r\n                                    <Row>\r\n                                        <Col span={5}><p style={{ fontSize: \"30px\", marginTop: '20px' }}>{this.state.depart}&nbsp;统计信息</p></Col>\r\n                                        <Col span={2} offset={1}>\r\n                                            <div style={{ marginTop: '20px' }}><Button type=\"primary\" size=\"large\"\r\n                                                onClick={() => { this.setState({ register: { Visible: true } }) }}>\r\n                                                学生注册\r\n                                                </Button>\r\n                                            </div>\r\n\r\n                                        </Col>\r\n                                        <Col span={2} offset={0}>\r\n                                            <div style={{ marginTop: '20px' }}><Button type=\"primary\" size=\"large\"\r\n                                                onClick={() => { this.setState({ reset: { Visible: true } }) }}>\r\n                                                学生修改密码\r\n                                                </Button>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }>\r\n                                    <Descriptions.Item label=\"总人数\">{this.state.num}</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"已完成人数\">{this.state.numOfDone}</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"平均分\">{this.state.average}</Descriptions.Item>\r\n                                </Descriptions>\r\n                                <Table \r\n                                columns={title} \r\n                                loading={this.state.loading} bordered \r\n                                dataSource={this.state.data}\r\n                                title={()=>{<p>详细列表</p>}}\r\n                                >\r\n\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                    </Content>\r\n                </Layout>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Admin"]},"metadata":{},"sourceType":"module"}