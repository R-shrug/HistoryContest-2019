{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\HistoryContest-2019\\\\historycontest2019\\\\src\\\\Components\\\\Test\\\\Test.js\";\nimport React from 'react';\nimport { Row, Col, Icon, Tabs, Button, Modal, Layout, Badge } from 'antd';\nimport 'antd/dist/antd.css';\nimport './Test.css';\nimport bg1 from '../../img/background1.png';\nimport bg2 from '../../img/background2.png';\nimport bg3 from '../../img/background3.png';\nimport bg4 from '../../img/background4.jpg';\nimport bg5 from '../../img/background5.jpg';\nimport bg6 from '../../img/background6.jpg';\nimport bg7 from '../../img/background7.jpg';\nimport bg8 from '../../img/background8.jpg';\nimport bg9 from '../../img/background9.jpg';\nimport bg10 from '../../img/background10.jpg';\nimport bg11 from '../../img/background11.jpg';\nimport BG from '../../img/图片2.jpg';\nimport Timer from '../Timer/Timer';\nimport Choice from '../Choice/Choice';\nimport TrueFalse from '../TrueFalse/TrueFalse';\nimport { nullLiteral } from '@babel/types';\nlet imgs = [bg1, bg2, bg3, bg4, bg5, bg6, bg7, bg8, bg9, bg10, bg11];\nconst TabPane = Tabs.TabPane;\nconst Header = Layout.Header,\n      Footer = Layout.Footer,\n      Sider = Layout.Sider,\n      Content = Layout.Content;\n\nconst testQuestion = require(\"./question-test.json\");\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isTesting: false,\n      isPaperGet: false,\n      isAllDone: false,\n      focusOn: 0,\n      pic: 0,\n      question: []\n    };\n\n    for (let i = 0; i < 20; i++) {\n      this.state.question.push({\n        isFinish: false,\n        kind: \"选择题\",\n        title: \"\",\n        choice: [{}, {}, {}, {}],\n        isRight: false,\n        value: -1\n      });\n    }\n\n    for (let i = 20; i < 30; i++) {\n      this.state.question.push({\n        isFinish: false,\n        kind: \"判断题\",\n        title: \"\",\n        choice: ['√', '×'],\n        isRight: false,\n        value: -1\n      });\n    }\n\n    this.logout = this.logout.bind(this);\n    this.done = this.done.bind(this);\n    this.Next = this.Next.bind(this);\n    this.Prev = this.Prev.bind(this);\n    this.submit = this.submit.bind(this); //测试初始化\n\n    testQuestion.question.forEach((x, i) => {\n      this.state.question[i] = x;\n    });\n  }\n\n  Next() {\n    let x = this.state.focusOn;\n    x++;\n\n    if (x < 30) {\n      this.setState({\n        focusOn: x\n      });\n    }\n  }\n\n  Prev() {\n    let n = this.state.focusOn;\n    n--;\n\n    if (n >= 0) {\n      this.setState({\n        focusOn: n\n      });\n    }\n  }\n\n  Random(arr) {\n    let length = arr.length,\n        randomIndex,\n        temp;\n\n    while (length) {\n      randomIndex = Math.floor(Math.random() * --length);\n      temp = arr[randomIndex];\n      arr[randomIndex] = arr[length];\n      arr[length] = temp;\n    }\n\n    return arr;\n  }\n\n  componentWillMount() {// let that=this;\n    // fetch('http://'+that.props.state.host+'/api/student/test',{\n    //     method: 'POST',\n    //     mode: 'cors',\n    //     headers: {\n    //         \"Content-Type\": \"application/x-www-form-urlencoded\"\n    //     },\n    //     body: JSON.stringify({\n    //         Username: that.props.state.username,\n    //     })\n    // }\n    // ).then(\n    //     res=>{return res.json()}\n    // ).then(\n    //     data=>{\n    //         for(let i=0;i<20;i++){\n    //             that.state.question[i].title=data.test[i].text;\n    //             let temp=[\n    //                 {\n    //                     text:data.test[i].option[0],\n    //                     value:1\n    //                 },\n    //                 {\n    //                     text:data.test[i].option[1],\n    //                     value:2\n    //                 },\n    //                 {\n    //                     text:data.test[i].option[2],\n    //                     value:3\n    //                 },\n    //                 {\n    //                     text:data.test[i].option[3],\n    //                     value:4\n    //                 }\n    //             ]\n    //             that.state.question[i].choice=this.Random(temp);\n    //         }\n    //         for(let i=20;i<30;i++){\n    //             that.state.question[i].title=data.test[i].text;\n    //         }\n    //     }\n    // )\n  }\n\n  componentWillUnmount() {// clearInterval(this.timer);\n  }\n\n  logout() {\n    this.props.setState({\n      isWelcome: true,\n      isLogin: false,\n      isStudent: false,\n      isAdmin: false,\n      isTeacher: false,\n      userInfo: {\n        name: '',\n        token: '',\n        access: -1,\n        score: 0\n      },\n      answer: {\n        choice: {},\n        true_false: {}\n      }\n    });\n  }\n\n  submit() {//     //提交函数\n    //     let that = this;\n    //     let data={answer:[]};\n    //     this.state.question.forEach((x,i)=>{\n    //         data.answer.push(x.value)\n    //     })\n    //     fetch(\"htttp://\" + that.props.state.host + \"/api/student/hangin\",\n    //         {\n    //             method: 'POST',\n    //             mode: 'cors',\n    //             headers: {\n    //                 \"Content-Type\": \"application/x-www-form-urlencoded\"\n    //             },\n    //             body: JSON.stringify(data)\n    //         }.then((res)=>{that.setState({isAllDone:true});return res.json()}\n    //     ).then(()=>{console.log(\"handin successfully\")}//data=>{that.props.setState({userInfo:{score:data.score}})}\n    //     )\n    //     )\n  }\n\n  done(i, value) {\n    let x = this.state.question;\n    x[i].isFinish = true;\n    x[i].value = value;\n    this.setState({\n      question: x\n    });\n  }\n\n  render() {\n    // if (!this.state.isTesting) {\n    //     return (\n    //         <div style={{\n    //             backgroundImage: `url(${BG})`,\n    //             backgroundSize: 'cover',\n    //             backgroundPosition: 'center',\n    //             width: \"100%\", height: \"100%\",\n    //             position: \"absolute\",\n    //             top: \"0px\",\n    //             bottom: \"0px\"\n    //         }}>\n    //             <Modal\n    //                 visible={!this.state.isTesting}\n    //                 title=\"答题须知\"\n    //                 centered={true}\n    //                 footer={[\n    //                     <Button type=\"primary\" onClick={() => {\n    //                         let that = this;\n    //                         //temp\n    //                         that.setState({ isTesting: true })\n    //                         // fetch(\"http://\" + this.props.state.host + '/api/student/start',\n    //                         //     {\n    //                         //         method: 'POST',\n    //                         //         mode: 'cors',\n    //                         //         headers: {\n    //                         //             \"Content-Type\": \"application/x-www-form-urlencoded\"\n    //                         //         },\n    //                         //         body: JSON.stringify({\n    //                         //             Username: that.props.state.username,\n    //                         //         }).then(() => { that.setState({ isTesting: true }) })\n    //                         //     })\n    //                     }}>\n    //                         开始答题\n    //               </Button>\n    //                 ]}>\n    //                 <b style={{fontSize:\"18px\",color:\"#1890ff\"}}>&nbsp;{this.props.state.userInfo.name}同学,你好!</b><br></br>\n    //                 <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;欢迎来到校史校情竞赛答题!</p><p></p>\n    //                 <ul style={{fontSize:\"15px\"}}>\n    //                 <li>本答题共有<b>30道题</b>,&nbsp;其中有<b>20道选择题,&nbsp;10道判断题</b></li>\n    //                 <li>选择题每道4分,&nbsp;判断题每道2分,&nbsp;满分共<b>100分</b></li>\n    //                 <li>答题时限为<b>30分钟</b>,&nbsp;时间用完自动交卷</li>\n    //                 <li>在未成功交卷前,&nbsp;出现特殊情况,可重新进入答题</li>\n    //                 <li>对本答题有疑问,&nbsp;可联系在场负责老师</li>\n    //                 </ul>\n    //             </Modal>\n    //         </div>\n    //     )\n    // }\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      style: {\n        overflow: \"hidder\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 16,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: 'white',\n        fontSize: \"25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"\\u4E1C\\u5357\\u5927\\u5B66\\u6821\\u53F2\\u6821\\u60C5\\u77E5\\u8BC6\\u7ADE\\u8D5B\")), React.createElement(Col, {\n      span: 6,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      state: this.state,\n      setState: this.setState.bind(this),\n      submit: this.submit,\n      min: 29,\n      sec: 59,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })))), React.createElement(Content, {\n      style: {\n        backgroundColor: 'rgb(17,17,19)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 22,\n      offset: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      className: \"background-1\",\n      activeKey: \"\".concat(this.state.focusOn),\n      animated: \"true\",\n      onTabClick: x => {\n        this.setState({\n          focusOn: x\n        });\n      },\n      tabBarGutter: \"0\",\n      tabPosition: \"bottom\",\n      style: {\n        marginBottom: \"0\",\n        marginLeft: \"40px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, this.state.question.map((x, i) => React.createElement(TabPane, {\n      tab: !x.isFinish ? React.createElement(Badge, {\n        dot: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, i + 1)) : React.createElement(\"div\", {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, i + 1),\n      key: i,\n      onChange: () => {\n        this.done(i);\n      },\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(Col, {\n      span: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, x.kind == \"选择题\" ? React.createElement(Choice, {\n      className: \"choice\",\n      Id: i,\n      state: x,\n      setFinish: this.done.bind(this),\n      Next: this.Next,\n      Prev: this.Prev,\n      submit: this.submint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }) : React.createElement(TrueFalse, {\n      Id: i,\n      state: x,\n      setFinish: this.done.bind(this),\n      Next: this.Next,\n      Prev: this.Prev,\n      submit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })))))))), React.createElement(Footer, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"\\u56FE\\u6E90\\uFF1A\\u4E1C\\u5357\\u5927\\u5B66\\u5B98\\u5FAE \\xA0\\u7248\\u6743\\u6240\\u6709\\xA9\")));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["E:\\projects\\HistoryContest-2019\\historycontest2019\\src\\Components\\Test\\Test.js"],"names":["React","Row","Col","Icon","Tabs","Button","Modal","Layout","Badge","bg1","bg2","bg3","bg4","bg5","bg6","bg7","bg8","bg9","bg10","bg11","BG","Timer","Choice","TrueFalse","nullLiteral","imgs","TabPane","Header","Footer","Sider","Content","testQuestion","require","Test","Component","constructor","props","state","isTesting","isPaperGet","isAllDone","focusOn","pic","question","i","push","isFinish","kind","title","choice","isRight","value","logout","bind","done","Next","Prev","submit","forEach","x","setState","n","Random","arr","length","randomIndex","temp","Math","floor","random","componentWillMount","componentWillUnmount","isWelcome","isLogin","isStudent","isAdmin","isTeacher","userInfo","name","token","access","score","answer","true_false","render","overflow","color","fontSize","backgroundColor","marginBottom","marginLeft","textAlign","map","submint"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Icon, Tabs, Button, Modal, Layout ,Badge} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './Test.css';\r\nimport bg1 from '../../img/background1.png';\r\nimport bg2 from '../../img/background2.png';\r\nimport bg3 from '../../img/background3.png';\r\nimport bg4 from '../../img/background4.jpg';\r\nimport bg5 from '../../img/background5.jpg';\r\nimport bg6 from '../../img/background6.jpg';\r\nimport bg7 from '../../img/background7.jpg';\r\nimport bg8 from '../../img/background8.jpg';\r\nimport bg9 from '../../img/background9.jpg';\r\nimport bg10 from '../../img/background10.jpg';\r\nimport bg11 from '../../img/background11.jpg';\r\nimport BG from '../../img/图片2.jpg'\r\n\r\nimport Timer from '../Timer/Timer';\r\nimport Choice from '../Choice/Choice';\r\nimport TrueFalse from '../TrueFalse/TrueFalse';\r\nimport { nullLiteral } from '@babel/types';\r\n\r\nlet imgs = [bg1, bg2, bg3, bg4, bg5, bg6, bg7, bg8, bg9, bg10, bg11];\r\nconst { TabPane } = Tabs;\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst testQuestion=require(\"./question-test.json\")\r\nclass Test extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isTesting: false,\r\n            isPaperGet: false,\r\n            isAllDone: false,\r\n            focusOn: 0,\r\n            pic: 0,\r\n            question:[],\r\n        }\r\n        for (let i = 0; i < 20; i++) {\r\n          this.state.question.push({\r\n              isFinish: false,\r\n              kind: \"选择题\",\r\n              title: \"\",\r\n              choice: [{}, {}, {}, {}],\r\n              isRight: false,\r\n              value: -1\r\n          });\r\n      }\r\n      for (let i = 20; i < 30; i++) {\r\n          this.state.question.push({\r\n              isFinish: false,\r\n              kind: \"判断题\",\r\n              title: \"\",\r\n              choice: ['√', '×'],\r\n              isRight: false,\r\n              value: -1\r\n          });\r\n      }\r\n        this.logout = this.logout.bind(this);\r\n        this.done = this.done.bind(this);\r\n        this.Next = this.Next.bind(this);\r\n        this.Prev = this.Prev.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n\r\n        //测试初始化\r\n       testQuestion.question.forEach((x,i)=>{\r\n          this.state.question[i]=x\r\n       })\r\n    }\r\n    Next() {\r\n        let x = this.state.focusOn;\r\n        x++;\r\n        if (x < 30) {\r\n            this.setState({ focusOn: x })\r\n        }\r\n    }\r\n    Prev() {\r\n        let n = this.state.focusOn;\r\n        n--;\r\n        if (n >= 0) {\r\n            this.setState({ focusOn: n })\r\n        }\r\n    }\r\n    Random(arr) {\r\n        let length = arr.length,\r\n            randomIndex,\r\n            temp;\r\n        while (length) {\r\n            randomIndex = Math.floor(Math.random() * (--length));\r\n            temp = arr[randomIndex];\r\n            arr[randomIndex] = arr[length];\r\n            arr[length] = temp\r\n        }\r\n        return arr;\r\n    }\r\n    componentWillMount() {\r\n        // let that=this;\r\n        // fetch('http://'+that.props.state.host+'/api/student/test',{\r\n        //     method: 'POST',\r\n        //     mode: 'cors',\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        //     },\r\n        //     body: JSON.stringify({\r\n        //         Username: that.props.state.username,\r\n        //     })\r\n        // }\r\n        // ).then(\r\n        //     res=>{return res.json()}\r\n        // ).then(\r\n        //     data=>{\r\n        //         for(let i=0;i<20;i++){\r\n        //             that.state.question[i].title=data.test[i].text;\r\n        //             let temp=[\r\n        //                 {\r\n        //                     text:data.test[i].option[0],\r\n        //                     value:1\r\n        //                 },\r\n        //                 {\r\n        //                     text:data.test[i].option[1],\r\n        //                     value:2\r\n        //                 },\r\n        //                 {\r\n        //                     text:data.test[i].option[2],\r\n        //                     value:3\r\n        //                 },\r\n        //                 {\r\n        //                     text:data.test[i].option[3],\r\n        //                     value:4\r\n        //                 }\r\n        //             ]\r\n        //             that.state.question[i].choice=this.Random(temp);\r\n        //         }\r\n        //         for(let i=20;i<30;i++){\r\n        //             that.state.question[i].title=data.test[i].text;\r\n        //         }\r\n        //     }\r\n        // )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // clearInterval(this.timer);\r\n    }\r\n    logout() {\r\n        this.props.setState({\r\n            isWelcome: true,\r\n            isLogin: false,\r\n            isStudent: false,\r\n            isAdmin: false,\r\n            isTeacher: false,\r\n            userInfo:\r\n            {\r\n                name: '',\r\n                token: '',\r\n                access: -1,\r\n                score: 0\r\n            },\r\n            answer: {\r\n                choice: {},\r\n                true_false: {}\r\n            },\r\n        })\r\n    }\r\n    submit() {\r\n    //     //提交函数\r\n    //     let that = this;\r\n    //     let data={answer:[]};\r\n    //     this.state.question.forEach((x,i)=>{\r\n    //         data.answer.push(x.value)\r\n    //     })\r\n    //     fetch(\"htttp://\" + that.props.state.host + \"/api/student/hangin\",\r\n    //         {\r\n    //             method: 'POST',\r\n    //             mode: 'cors',\r\n    //             headers: {\r\n    //                 \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n    //             },\r\n    //             body: JSON.stringify(data)\r\n    //         }.then((res)=>{that.setState({isAllDone:true});return res.json()}\r\n    //     ).then(()=>{console.log(\"handin successfully\")}//data=>{that.props.setState({userInfo:{score:data.score}})}\r\n    //     )\r\n    //     )\r\n     }\r\n    done(i, value) {\r\n        let x = this.state.question;\r\n        x[i].isFinish = true;\r\n        x[i].value = value;\r\n        this.setState({ question: x });\r\n    }\r\n    render() {\r\n        // if (!this.state.isTesting) {\r\n        //     return (\r\n        //         <div style={{\r\n        //             backgroundImage: `url(${BG})`,\r\n        //             backgroundSize: 'cover',\r\n        //             backgroundPosition: 'center',\r\n        //             width: \"100%\", height: \"100%\",\r\n        //             position: \"absolute\",\r\n        //             top: \"0px\",\r\n        //             bottom: \"0px\"\r\n        //         }}>\r\n        //             <Modal\r\n        //                 visible={!this.state.isTesting}\r\n        //                 title=\"答题须知\"\r\n        //                 centered={true}\r\n        //                 footer={[\r\n        //                     <Button type=\"primary\" onClick={() => {\r\n        //                         let that = this;\r\n        //                         //temp\r\n        //                         that.setState({ isTesting: true })\r\n\r\n        //                         // fetch(\"http://\" + this.props.state.host + '/api/student/start',\r\n        //                         //     {\r\n        //                         //         method: 'POST',\r\n        //                         //         mode: 'cors',\r\n        //                         //         headers: {\r\n        //                         //             \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        //                         //         },\r\n        //                         //         body: JSON.stringify({\r\n        //                         //             Username: that.props.state.username,\r\n        //                         //         }).then(() => { that.setState({ isTesting: true }) })\r\n        //                         //     })\r\n        //                     }}>\r\n        //                         开始答题\r\n        //               </Button>\r\n        //                 ]}>\r\n        //                 <b style={{fontSize:\"18px\",color:\"#1890ff\"}}>&nbsp;{this.props.state.userInfo.name}同学,你好!</b><br></br>\r\n        //                 <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;欢迎来到校史校情竞赛答题!</p><p></p>\r\n\r\n        //                 <ul style={{fontSize:\"15px\"}}>\r\n        //                 <li>本答题共有<b>30道题</b>,&nbsp;其中有<b>20道选择题,&nbsp;10道判断题</b></li>\r\n        //                 <li>选择题每道4分,&nbsp;判断题每道2分,&nbsp;满分共<b>100分</b></li>\r\n        //                 <li>答题时限为<b>30分钟</b>,&nbsp;时间用完自动交卷</li>\r\n        //                 <li>在未成功交卷前,&nbsp;出现特殊情况,可重新进入答题</li>\r\n        //                 <li>对本答题有疑问,&nbsp;可联系在场负责老师</li>\r\n        //                 </ul>\r\n        //             </Modal>\r\n        //         </div>\r\n        //     )\r\n        // }\r\n        return (\r\n            <React.Fragment>\r\n                <Layout style={{ overflow: \"hidder\" }}>\r\n                    <Header>\r\n                        <Row>\r\n                            <Col span={16} offset={1}>\r\n                                <h1 style={{ color: 'white' ,fontSize:\"25px\"}}>东南大学校史校情知识竞赛</h1>\r\n                            </Col>\r\n                            <Col span={6} offset={1}>\r\n                                <Timer state={this.state} setState={this.setState.bind(this)} submit={this.submit} min={29} sec={59}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Header>\r\n                    <Content style={{ backgroundColor: 'rgb(17,17,19)' }}>\r\n                        <Row >\r\n                          <Col span={22} offset={1}>\r\n                            <Tabs className=\"background-1\" \r\n                            activeKey={`${this.state.focusOn}`}\r\n                            animated='true'\r\n                            onTabClick={(x) => { this.setState({ focusOn: x }) }}\r\n                            tabBarGutter='0'\r\n                            tabPosition=\"bottom\"\r\n                            style={{marginBottom:\"0\",marginLeft:\"40px\",textAlign:\"center\"}}>\r\n                            {this.state.question.map((x, i) => (\r\n                                <TabPane tab={!x.isFinish ? \r\n                                <Badge dot={true} > <div style={{color: 'white'}}>{i + 1}</div></Badge> : \r\n                                <div style={{ color: 'white'}}>{i + 1}</div>}\r\n                                    key={i}\r\n                                    onChange={() => { this.done(i) }}\r\n                                    style={{ textAlign: \"left\" }}\r\n                                >\r\n                                    <Col span={2}>\r\n\r\n                                    </Col>\r\n                                    <Col span={20}>\r\n                                    {x.kind == \"选择题\" ?\r\n                                        <Choice className=\"choice\" Id={i} state={x} setFinish={this.done.bind(this)} Next={this.Next} Prev={this.Prev} \r\n                                        submit={this.submint}/>\r\n                                        : <TrueFalse Id={i} state={x} setFinish={this.done.bind(this)} Next={this.Next} Prev={this.Prev} submit={this.submit} />\r\n                                    }\r\n                                    </Col>\r\n                                </TabPane>)\r\n                            )\r\n                            }\r\n                        </Tabs>\r\n                        </Col>\r\n                        </Row>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>图源：东南大学官微 &nbsp;版权所有©</Footer>\r\n                </Layout>\r\n              </React.Fragment>\r\n              )\r\n    }\r\n  }\r\n  export default Test\r\n               "]},"metadata":{},"sourceType":"module"}