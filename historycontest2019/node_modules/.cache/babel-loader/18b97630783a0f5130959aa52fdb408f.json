{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\87102\\\\Documents\\\\GitHub\\\\HistoryContest-2019\\\\historycontest2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\87102\\\\Documents\\\\GitHub\\\\HistoryContest-2019\\\\historycontest2019\\\\src\\\\Components\\\\VerifyCode\\\\VerifyCode.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\n\nclass VerifyCode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, this.initState());\n  }\n\n  initState() {\n    return {\n      data: this.getRandom(109, 48, 4),\n      rotate: this.getRandom(75, -75, 4),\n      fz: this.getRandom(18, 20, 4),\n      color: [this.getRandom(100, 255, 3), this.getRandom(100, 255, 3), this.getRandom(100, 255, 3), this.getRandom(100, 255, 3)]\n    };\n  }\n\n  getRandom(max, min, num) {\n    const asciiNum = ~~(Math.random() * (max - min + 1) + min);\n\n    if (!Boolean(num)) {\n      return asciiNum;\n    }\n\n    const arr = [];\n\n    for (let i = 0; i < num; i++) {\n      arr.push(this.getRandom(max, min));\n    }\n\n    return arr;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"vcodewrap\",\n      style: {\n        width: 200,\n        height: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.data.map((v, i) => React.createElement(\"div\", {\n      key: i,\n      className: \"itemStr\",\n      style: {\n        transform: \"rotate(\".concat(this.state.rotate[i], \"deg)\"),\n        fontSize: \"\".concat(this.state.fz[i], \"px\"),\n        color: \"rgb(\".concat(this.state.color[i].toString(), \")\")\n      },\n      onMouseEnter: () => this.setState({\n        refresh: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13), \"\\xA0\\xA0\")), this.state.refresh ? React.createElement(\"div\", {\n      className: \"mask\",\n      onClick: () => {\n        this.setState(_objectSpread({}, this.initState(), {\n          refresh: false\n        }));\n      },\n      onMouseLeave: () => {\n        this.setState({\n          refresh: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" \\u770B\\u4E0D\\u6E05\\uFF1F\\u70B9\\u51FB\\u5237\\u65B0\") : null);\n  }\n\n}\n\nexport default VerifyCode;","map":{"version":3,"sources":["C:\\Users\\87102\\Documents\\GitHub\\HistoryContest-2019\\historycontest2019\\src\\Components\\VerifyCode\\VerifyCode.js"],"names":["React","VerifyCode","Component","constructor","props","state","initState","data","getRandom","rotate","fz","color","max","min","num","asciiNum","Math","random","Boolean","arr","i","push","render","width","height","map","v","transform","fontSize","toString","setState","refresh","String","fromCharCode"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\n\r\nclass VerifyCode extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.initState()\r\n        }\r\n    }\r\n    initState() {\r\n        return {\r\n            data: this.getRandom(109, 48, 4),\r\n            rotate: this.getRandom(75, -75, 4),\r\n            fz: this.getRandom(18, 20, 4),\r\n            color: [this.getRandom(100, 255, 3), this.getRandom(100, 255, 3), this.getRandom(100, 255, 3), this.getRandom(100, 255, 3)]\r\n        }\r\n    }\r\n\r\n    getRandom(max, min, num) {\r\n        const asciiNum = ~~(Math.random() * (max - min + 1) + min)\r\n        if (!Boolean(num)) {\r\n            return asciiNum\r\n        }\r\n        const arr = []\r\n        for (let i = 0; i < num; i++) {\r\n            arr.push(this.getRandom(max, min))\r\n        }\r\n        return arr\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='vcodewrap' style={{width:200, height:200}} >\r\n                {this.state.data.map((v, i) =>\r\n                    <div\r\n                        key={i}\r\n                        className='itemStr'\r\n                        style={{\r\n                            transform: `rotate(${this.state.rotate[i]}deg)`,\r\n                            fontSize: `${this.state.fz[i]}px`,\r\n                            color: `rgb(${this.state.color[i].toString()})`,\r\n                        }}\r\n                        onMouseEnter={() => this.setState({ refresh: true })}\r\n                    >\r\n                        {String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13))}&nbsp;&nbsp;\r\n                    </div>\r\n                )}\r\n                {\r\n                    this.state.refresh\r\n                        ? <div\r\n                            className='mask'\r\n                            onClick={() => {\r\n                                this.setState({ ...this.initState(), refresh: false })\r\n                            }}\r\n                            onMouseLeave={() => { this.setState({ refresh: false }) }}\r\n                        > 看不清？点击刷新\r\n              </div>\r\n                        : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default VerifyCode;"]},"metadata":{},"sourceType":"module"}