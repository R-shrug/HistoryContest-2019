{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\87102\\\\Documents\\\\GitHub\\\\HistoryContest-2019\\\\historycontest2019\\\\src\\\\Components\\\\Test\\\\Test.js\";\nimport React from 'react';\nimport { Row, Col, Icon, Tabs, Button, Modal, Layout } from 'antd';\nimport 'antd/dist/antd.css';\nimport './Test.css';\nimport BannerAnim from 'rc-banner-anim';\nimport TweenOne, { TweenOneGroup } from 'rc-tween-one';\nimport 'rc-banner-anim/assets/index.css';\nimport bg1 from '../../img/background1.png';\nimport bg2 from '../../img/background2.png';\nimport bg3 from '../../img/background3.png';\nimport bg4 from '../../img/background4.jpg';\nimport bg5 from '../../img/background5.jpg';\nimport bg6 from '../../img/background6.jpg';\nimport bg7 from '../../img/background7.jpg';\nimport bg8 from '../../img/background8.jpg';\nimport bg9 from '../../img/background9.jpg';\nimport bg10 from '../../img/background10.jpg';\nimport bg11 from '../../img/background11.jpg';\nimport bg12 from '../../img/background12.jpg';\nimport Title from '../../img/标题.PNG';\nimport Timer from '../Timer/Timer';\nimport Choice from '../Choice/Choice';\nimport TrueFalse from '../TrueFalse/TrueFalse';\nlet imgs = [bg1, bg2, bg3, bg4, bg5, bg6, bg7, bg8, bg9, bg10, bg11, bg12];\nconst TabPane = Tabs.TabPane;\nconst Header = Layout.Header,\n      Footer = Layout.Footer,\n      Sider = Layout.Sider,\n      Content = Layout.Content;\nconst Element = BannerAnim.Element,\n      Arrow = BannerAnim.Arrow,\n      Thumb = BannerAnim.Thumb;\nconst BgElement = Element.BgElement;\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernanme: \"\",\n      isTesting: false,\n      isPaperGet: false,\n      isAllDone: false,\n      settingVisible: false,\n      focusOn: 0,\n      pic: 0,\n      question: [],\n      intShow: 0,\n      prevEnter: false,\n      nextEnter: false,\n      thumbEnter: false\n    };\n    ['onChange', 'prevEnter', 'prevLeave', 'nextEnter', 'nextLeave', 'onMouseEnter', 'onMouseLeave'].forEach(method => this[method] = this[method].bind(this));\n\n    for (let i = 0; i < 20; i++) {\n      this.state.question.push({\n        isFinish: false,\n        kind: \"选择题\",\n        title: \"\",\n        choice: ['', '', '', ''],\n        isRight: false\n      });\n    }\n\n    for (let i = 20; i < 30; i++) {\n      this.state.question.push({\n        isFinish: false,\n        kind: \"判断题\",\n        title: \"\",\n        choice: ['√', '×'],\n        isRight: false\n      });\n    }\n\n    this.openControl = this.openControl.bind(this);\n    this.closeControl = this.closeControl.bind(this);\n    this.logout = this.logout.bind(this);\n    this.done = this.done.bind(this);\n    this.Next = this.Next.bind(this);\n    this.Prev = this.Prev.bind(this);\n    this.submit = this.submit.bind(this); //测试初始化\n\n    this.state.question[0] = {\n      isFinish: false,\n      kind: \"选择题\",\n      title: \"燃煤联合循环发电技术由哪个研究所长期研究计划\",\n      choice: ['东大建筑与环境研究所', '东大热能工程研究所', '东大能源与环境工程研究所', '东大动力研究所'],\n      isRight: false\n    };\n    this.state.question[1] = {\n      isFinish: false,\n      kind: \"选择题\",\n      title: \"东南大学的历史最早可追溯至哪一年?\",\n      choice: ['1902', '1988', '1905', '1900'],\n      isRight: false\n    };\n    this.state.question[2] = {\n      isFinish: false,\n      kind: \"选择题\",\n      title: \"东南大学的历史最早可追溯至哪一年?\",\n      choice: ['1902', '1988', '1905', '1900'],\n      isRight: false\n    };\n    this.state.question[20] = {\n      isFinish: false,\n      kind: \"判断题\",\n      title: \"东南大学的历史最早可追溯至哪一年?\",\n      choice: ['√', '×'],\n      isRight: false\n    };\n    this.state.question[21] = {\n      isFinish: false,\n      kind: \"判断题\",\n      title: \"东南大学的历史最早可追溯至哪一年?\",\n      choice: ['√', '×'],\n      isRight: false\n    };\n    this.state.question[22] = {\n      isFinish: false,\n      kind: \"判断题\",\n      title: \"东南大学的历史最早可追溯至哪一年?\",\n      choice: ['√', '×'],\n      isRight: false\n    };\n  }\n\n  getNextPrevNumber() {\n    let nextInt = this.state.intShow + 1;\n    let prevInt = this.state.intShow - 1;\n\n    if (nextInt >= this.imgArray.length) {\n      nextInt = 0;\n    }\n\n    if (prevInt < 0) {\n      prevInt = this.imgArray.length - 1;\n    }\n\n    return [prevInt, nextInt];\n  }\n\n  prevEnter() {\n    this.setState({\n      prevEnter: true\n    });\n  }\n\n  prevLeave() {\n    this.setState({\n      prevEnter: false\n    });\n  }\n\n  nextEnter() {\n    this.setState({\n      nextEnter: true\n    });\n  }\n\n  nextLeave() {\n    this.setState({\n      nextEnter: false\n    });\n  }\n\n  onMouseEnter() {\n    this.setState({\n      thumbEnter: true\n    });\n  }\n\n  onMouseLeave() {\n    this.setState({\n      thumbEnter: false\n    });\n  }\n\n  Next() {\n    let x = this.state.focusOn;\n    x++;\n\n    if (x < 30) {\n      this.setState({\n        focusOn: x\n      });\n    }\n  }\n\n  Prev() {\n    let n = this.state.focusOn;\n    n--;\n\n    if (n >= 0) {\n      this.setState({\n        focusOn: n\n      });\n    }\n  }\n\n  componentWillMount() {\n    //设定背景定时；获取试卷\n    this.timer = setInterval(() => {\n      let x = (this.state.pic + 1) % 4;\n      this.setState({\n        pic: x\n      });\n    }, 3000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  openControl() {\n    this.setState({\n      settingVisible: true\n    });\n  }\n\n  closeControl() {\n    this.setState({\n      settingVisible: false\n    });\n  }\n\n  logout() {\n    this.props.setState({\n      isWelcome: true,\n      isLogin: false,\n      isStudent: false\n    });\n  }\n\n  submit() {\n    this.setState({\n      isAllDone: true\n    });\n  }\n\n  onChange(type, int) {\n    if (type === 'before') {\n      this.setState({\n        intShow: int\n      });\n    }\n  }\n\n  done(i) {\n    let x = this.state.question;\n    x[i].isFinish = true;\n    this.setState({\n      question: x\n    });\n  }\n\n  render() {\n    if (!this.state.isTesting) {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(imgs[0], \")\"),\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          width: \"100%\",\n          height: \"100%\",\n          position: \"absolute\",\n          top: \"0px\",\n          bottom: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        visible: !this.state.isTesting,\n        title: \"\\u7B54\\u9898\\u987B\\u77E5\",\n        centered: true,\n        footer: [React.createElement(Button, {\n          type: \"primary\",\n          onClick: () => {\n            this.setState({\n              isTesting: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, \"\\u5F00\\u59CB\\u7B54\\u9898\")],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"1.\\u672C\\u7B54\\u9898\\u5171\\u670930\\u9053\\u9898\")));\n    }\n\n    const intArray = this.getNextPrevNumber();\n    const thumbChildren = imgs.map((img, i) => React.createElement(\"span\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      style: {\n        backgroundImage: \"url(\".concat(img, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(BannerAnim, {\n      onChange: this.onChange,\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n      prefixCls: \"custom-arrow-thumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      activeKey: \"\".concat(this.state.focusOn),\n      animated: \"true\",\n      onTabClick: x => {\n        this.setState({\n          focusOn: x\n        });\n      },\n      tabBarGutter: \"0\",\n      tabPosition: \"bottom\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, this.state.question.map((x, i) => React.createElement(TabPane, {\n      tab: !x.isFinish ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, i + 1) : React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#572A3F',\n          color: 'white',\n          borderRadius: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, i + 1),\n      key: i,\n      onChange: () => {\n        this.done(i);\n      },\n      style: {\n        transition: '1s'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Element, {\n      key: i,\n      prefixCls: \"banner-user-elem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, x.kind == \"选择题\" ? React.createElement(Choice, {\n      className: \"choice\",\n      Id: i,\n      state: x,\n      setFinish: this.done.bind(this),\n      Next: this.Next,\n      Prev: this.Prev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }) : React.createElement(TrueFalse, {\n      Id: i,\n      state: x,\n      setFinish: this.done.bind(this),\n      Next: this.Next,\n      Prev: this.Prev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }))))), React.createElement(Arrow, {\n      arrowType: \"prev\",\n      key: \"prev\",\n      prefixCls: \"user-arrow\",\n      component: TweenOne,\n      onMouseEnter: this.prevEnter,\n      onMouseLeave: this.prevLeave,\n      animation: {\n        left: this.state.prevEnter ? 0 : -120\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(TweenOneGroup, {\n      enter: {\n        opacity: 0,\n        type: 'from'\n      },\n      leave: {\n        opacity: 0\n      },\n      appear: false,\n      className: \"img-wrapper\",\n      component: \"ul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      style: {\n        backgroundImage: \"url(\".concat(this.imgArray[intArray[0]], \")\")\n      },\n      key: intArray[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }))), React.createElement(Arrow, {\n      arrowType: \"next\",\n      key: \"next\",\n      prefixCls: \"user-arrow\",\n      component: TweenOne,\n      onMouseEnter: this.nextEnter,\n      onMouseLeave: this.nextLeave,\n      animation: {\n        right: this.state.nextEnter ? 0 : -120\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(TweenOneGroup, {\n      enter: {\n        opacity: 0,\n        type: 'from'\n      },\n      leave: {\n        opacity: 0\n      },\n      appear: false,\n      className: \"img-wrapper\",\n      component: \"ul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      style: {\n        backgroundImage: \"url(\".concat(this.imgArray[intArray[1]], \")\")\n      },\n      key: intArray[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }))), React.createElement(Thumb, {\n      prefixCls: \"user-thumb\",\n      key: \"thumb\",\n      component: TweenOne,\n      animation: {\n        bottom: this.state.thumbEnter ? 0 : -70\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, thumbChildren)));\n  }\n\n}\n\nexport default Test;\n{\n  /*\r\n     import BannerAnim from 'rc-banner-anim';\r\n  import TweenOne, { TweenOneGroup } from 'rc-tween-one';\r\n  import 'rc-banner-anim/assets/index.css';\r\n  const { Element, Arrow, Thumb } = BannerAnim;\r\n  const BgElement = Element.BgElement;\r\n  class Demo extends React.Component {\r\n   constructor() {\r\n     super(...arguments);\r\n     this.imgArray = [\r\n       'https://zos.alipayobjects.com/rmsportal/hzPBTkqtFpLlWCi.jpg',\r\n       'https://zos.alipayobjects.com/rmsportal/gGlUMYGEIvjDOOw.jpg',\r\n     ];\r\n     this.state = {\r\n       intShow: 0,\r\n       prevEnter: false,\r\n       nextEnter: false,\r\n       thumbEnter: false,\r\n     };\r\n     [\r\n       'onChange',\r\n       'prevEnter',\r\n       'prevLeave',\r\n       'nextEnter',\r\n       'nextLeave',\r\n       'onMouseEnter',\r\n       'onMouseLeave',\r\n     ].forEach((method) => this[method] = this[method].bind(this));\r\n   }\r\n  \n   onChange(type, int) {\r\n     if (type === 'before') {\r\n       this.setState({\r\n         intShow: int,\r\n       });\r\n     }\r\n   }\r\n  \n   getNextPrevNumber() {\r\n     let nextInt = this.state.intShow + 1;\r\n     let prevInt = this.state.intShow - 1;\r\n     if (nextInt >= this.imgArray.length) {\r\n       nextInt = 0;\r\n     }\r\n     if (prevInt < 0) {\r\n       prevInt = this.imgArray.length - 1;\r\n     }\r\n  \n     return [prevInt, nextInt];\r\n   }\r\n  \n   prevEnter() {\r\n     this.setState({\r\n       prevEnter: true,\r\n     });\r\n   }\r\n  \n   prevLeave() {\r\n     this.setState({\r\n       prevEnter: false,\r\n     });\r\n   }\r\n  \n   nextEnter() {\r\n     this.setState({\r\n       nextEnter: true,\r\n     });\r\n   }\r\n  \n   nextLeave() {\r\n     this.setState({\r\n       nextEnter: false,\r\n     });\r\n   }\r\n   \r\n   onMouseEnter() {\r\n     this.setState({\r\n       thumbEnter: true,\r\n     });\r\n   }\r\n  \n   onMouseLeave() {\r\n     this.setState({\r\n       thumbEnter: false,\r\n     });\r\n   }\r\n  \n   render() {\r\n     const intArray = this.getNextPrevNumber();\r\n     const thumbChildren = this.imgArray.map((img, i) =>\r\n           <span key={i}><i style={{ backgroundImage: `url(${img})` }} /></span>\r\n         );\r\n     return (\r\n       <BannerAnim \r\n         onChange={this.onChange} \r\n         onMouseEnter={this.onMouseEnter} \r\n         onMouseLeave={this.onMouseLeave} \r\n         prefixCls=\"custom-arrow-thumb\"\r\n       >\r\n         <Element key=\"aaa\"\r\n           prefixCls=\"banner-user-elem\"\r\n         >\r\n           <BgElement\r\n             key=\"bg\"\r\n             className=\"bg\"\r\n             style={{\r\n               backgroundImage: `url(${this.imgArray[0]})`,\r\n               backgroundSize: 'cover',\r\n               backgroundPosition: 'center',\r\n             }}\r\n           />\r\n           <TweenOne className=\"banner-user-title\" animation={{ y: 30, opacity: 0, type: 'from' }}>\r\n             Ant Motion Banner\r\n           </TweenOne>\r\n           <TweenOne \r\n             className=\"banner-user-text\" \r\n             animation={{ y: 30, opacity: 0, type: 'from', delay: 100 }}\r\n           >\r\n             The Fast Way Use Animation In React\r\n             </TweenOne>\r\n         </Element>\r\n         <Element key=\"bbb\"\r\n           prefixCls=\"banner-user-elem\"\r\n         >\r\n           <BgElement\r\n             key=\"bg\"\r\n             className=\"bg\"\r\n             style={{\r\n               backgroundImage: `url(${this.imgArray[1]})`,\r\n               backgroundSize: 'cover',\r\n               backgroundPosition: 'center',\r\n             }}\r\n           />\r\n           <TweenOne className=\"banner-user-title\" animation={{ y: 30, opacity: 0, type: 'from' }}>\r\n             Ant Motion Banner\r\n           </TweenOne>\r\n           <TweenOne \r\n             className=\"banner-user-text\" \r\n             animation={{ y: 30, opacity: 0, type: 'from', delay: 100 }}\r\n           >\r\n             The Fast Way Use Animation In React\r\n           </TweenOne>\r\n         </Element>\r\n         <Arrow arrowType=\"prev\" key=\"prev\" prefixCls=\"user-arrow\" component={TweenOne}\r\n           onMouseEnter={this.prevEnter}\r\n           onMouseLeave={this.prevLeave}\r\n           animation={{ left: this.state.prevEnter ? 0 : -120 }}\r\n         >\r\n           <div className=\"arrow\"></div>\r\n           <TweenOneGroup \r\n             enter={{ opacity: 0, type: 'from' }} \r\n             leave={{ opacity: 0 }} \r\n             appear={false} \r\n             className=\"img-wrapper\" component=\"ul\"\r\n           >\r\n             <li style={{ backgroundImage: `url(${this.imgArray[intArray[0]]})`}} key={intArray[0]} />\r\n           </TweenOneGroup>\r\n         </Arrow>\r\n         <Arrow arrowType=\"next\" key=\"next\" prefixCls=\"user-arrow\" component={TweenOne}\r\n           onMouseEnter={this.nextEnter}\r\n           onMouseLeave={this.nextLeave}\r\n           animation={{ right: this.state.nextEnter ? 0 : -120 }}\r\n         >\r\n           <div className=\"arrow\"></div>\r\n           <TweenOneGroup \r\n             enter={{ opacity: 0, type: 'from' }} \r\n             leave={{ opacity: 0 }} \r\n             appear={false} \r\n             className=\"img-wrapper\" \r\n             component=\"ul\"\r\n           >\r\n             <li style={{ backgroundImage: `url(${this.imgArray[intArray[1]]})`}} key={intArray[1]} />\r\n           </TweenOneGroup>\r\n         </Arrow>\r\n         <Thumb prefixCls=\"user-thumb\" key=\"thumb\" component={TweenOne}\r\n           animation={{ bottom: this.state.thumbEnter ? 0 : -70 }}\r\n         >\r\n           {thumbChildren}\r\n         </Thumb>\r\n       </BannerAnim>\r\n     );\r\n   }\r\n  }\r\n  ReactDOM.render(\r\n   <Demo />\r\n  , mountNode);\r\n  */\n}","map":{"version":3,"sources":["C:\\Users\\87102\\Documents\\GitHub\\HistoryContest-2019\\historycontest2019\\src\\Components\\Test\\Test.js"],"names":["React","Row","Col","Icon","Tabs","Button","Modal","Layout","BannerAnim","TweenOne","TweenOneGroup","bg1","bg2","bg3","bg4","bg5","bg6","bg7","bg8","bg9","bg10","bg11","bg12","Title","Timer","Choice","TrueFalse","imgs","TabPane","Header","Footer","Sider","Content","Element","Arrow","Thumb","BgElement","Test","Component","constructor","props","state","usernanme","isTesting","isPaperGet","isAllDone","settingVisible","focusOn","pic","question","intShow","prevEnter","nextEnter","thumbEnter","forEach","method","bind","i","push","isFinish","kind","title","choice","isRight","openControl","closeControl","logout","done","Next","Prev","submit","getNextPrevNumber","nextInt","prevInt","imgArray","length","setState","prevLeave","nextLeave","onMouseEnter","onMouseLeave","x","n","componentWillMount","timer","setInterval","componentWillUnmount","clearInterval","isWelcome","isLogin","isStudent","onChange","type","int","render","backgroundImage","backgroundSize","backgroundPosition","width","height","position","top","bottom","intArray","thumbChildren","map","img","backgroundColor","color","borderRadius","transition","left","opacity","right"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Icon, Tabs, Button, Modal, Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './Test.css';\r\nimport BannerAnim from 'rc-banner-anim';\r\nimport TweenOne, { TweenOneGroup } from 'rc-tween-one';\r\nimport 'rc-banner-anim/assets/index.css';\r\nimport bg1 from '../../img/background1.png';\r\nimport bg2 from '../../img/background2.png';\r\nimport bg3 from '../../img/background3.png';\r\nimport bg4 from '../../img/background4.jpg';\r\nimport bg5 from '../../img/background5.jpg';\r\nimport bg6 from '../../img/background6.jpg';\r\nimport bg7 from '../../img/background7.jpg';\r\nimport bg8 from '../../img/background8.jpg';\r\nimport bg9 from '../../img/background9.jpg';\r\nimport bg10 from '../../img/background10.jpg';\r\nimport bg11 from '../../img/background11.jpg';\r\nimport bg12 from '../../img/background12.jpg';\r\nimport Title from '../../img/标题.PNG';\r\nimport Timer from '../Timer/Timer';\r\nimport Choice from '../Choice/Choice';\r\nimport TrueFalse from '../TrueFalse/TrueFalse';\r\n\r\nlet imgs = [bg1, bg2, bg3, bg4, bg5, bg6, bg7, bg8, bg9, bg10, bg11, bg12];\r\nconst { TabPane } = Tabs;\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst { Element, Arrow, Thumb } = BannerAnim;\r\nconst BgElement = Element.BgElement;\r\n\r\nclass Test extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            usernanme: \"\",\r\n            isTesting: false,\r\n            isPaperGet: false,\r\n            isAllDone: false,\r\n            settingVisible: false,\r\n            focusOn: 0,\r\n            pic: 0,\r\n            question: [],\r\n            intShow: 0,\r\n            prevEnter: false,\r\n            nextEnter: false,\r\n            thumbEnter: false,\r\n        };\r\n        [\r\n            'onChange',\r\n            'prevEnter',\r\n            'prevLeave',\r\n            'nextEnter',\r\n            'nextLeave',\r\n            'onMouseEnter',\r\n            'onMouseLeave',\r\n        ].forEach((method) => this[method] = this[method].bind(this));\r\n        for (let i = 0; i < 20; i++) {\r\n            this.state.question.push({\r\n                isFinish: false,\r\n                kind: \"选择题\",\r\n                title: \"\",\r\n                choice: ['', '', '', ''],\r\n                isRight: false\r\n            });\r\n        }\r\n        for (let i = 20; i < 30; i++) {\r\n            this.state.question.push({\r\n                isFinish: false,\r\n                kind: \"判断题\",\r\n                title: \"\",\r\n                choice: ['√', '×'],\r\n                isRight: false\r\n            });\r\n        }\r\n        this.openControl = this.openControl.bind(this);\r\n        this.closeControl = this.closeControl.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.done = this.done.bind(this);\r\n        this.Next = this.Next.bind(this);\r\n        this.Prev = this.Prev.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        //测试初始化\r\n        this.state.question[0] = {\r\n            isFinish: false,\r\n            kind: \"选择题\",\r\n            title: \"燃煤联合循环发电技术由哪个研究所长期研究计划\",\r\n            choice: ['东大建筑与环境研究所', '东大热能工程研究所', '东大能源与环境工程研究所', '东大动力研究所'],\r\n            isRight: false\r\n        }\r\n        this.state.question[1] = {\r\n            isFinish: false,\r\n            kind: \"选择题\",\r\n            title: \"东南大学的历史最早可追溯至哪一年?\",\r\n            choice: ['1902', '1988', '1905', '1900'],\r\n            isRight: false\r\n        }\r\n        this.state.question[2] = {\r\n            isFinish: false,\r\n            kind: \"选择题\",\r\n            title: \"东南大学的历史最早可追溯至哪一年?\",\r\n            choice: ['1902', '1988', '1905', '1900'],\r\n            isRight: false\r\n        }\r\n        this.state.question[20] = {\r\n            isFinish: false,\r\n            kind: \"判断题\",\r\n            title: \"东南大学的历史最早可追溯至哪一年?\",\r\n            choice: ['√', '×'],\r\n            isRight: false\r\n        }\r\n        this.state.question[21] = {\r\n            isFinish: false,\r\n            kind: \"判断题\",\r\n            title: \"东南大学的历史最早可追溯至哪一年?\",\r\n            choice: ['√', '×'],\r\n            isRight: false\r\n        }\r\n        this.state.question[22] = {\r\n            isFinish: false,\r\n            kind: \"判断题\",\r\n            title: \"东南大学的历史最早可追溯至哪一年?\",\r\n            choice: ['√', '×'],\r\n            isRight: false\r\n        }\r\n    }\r\n\r\n    getNextPrevNumber() {\r\n        let nextInt = this.state.intShow + 1;\r\n        let prevInt = this.state.intShow - 1;\r\n        if (nextInt >= this.imgArray.length) {\r\n            nextInt = 0;\r\n        }\r\n        if (prevInt < 0) {\r\n            prevInt = this.imgArray.length - 1;\r\n        }\r\n\r\n        return [prevInt, nextInt];\r\n    }\r\n\r\n    prevEnter() {\r\n        this.setState({\r\n            prevEnter: true,\r\n        });\r\n    }\r\n\r\n    prevLeave() {\r\n        this.setState({\r\n            prevEnter: false,\r\n        });\r\n    }\r\n\r\n    nextEnter() {\r\n        this.setState({\r\n            nextEnter: true,\r\n        });\r\n    }\r\n\r\n    nextLeave() {\r\n        this.setState({\r\n            nextEnter: false,\r\n        });\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this.setState({\r\n            thumbEnter: true,\r\n        });\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.setState({\r\n            thumbEnter: false,\r\n        });\r\n    }\r\n    Next() {\r\n        let x = this.state.focusOn;\r\n        x++;\r\n        if (x < 30) {\r\n            this.setState({ focusOn: x })\r\n        }\r\n    }\r\n    Prev() {\r\n        let n = this.state.focusOn;\r\n        n--;\r\n        if (n >= 0) {\r\n            this.setState({ focusOn: n })\r\n        }\r\n    }\r\n    componentWillMount() {//设定背景定时；获取试卷\r\n        this.timer = setInterval(() => {\r\n            let x = (this.state.pic + 1) % 4;\r\n            this.setState({ pic: x });\r\n        },\r\n            3000)\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n    openControl() {\r\n        this.setState({ settingVisible: true });\r\n    }\r\n    closeControl() {\r\n        this.setState({ settingVisible: false });\r\n    }\r\n    logout() {\r\n        this.props.setState({\r\n            isWelcome: true,\r\n            isLogin: false,\r\n            isStudent: false\r\n        })\r\n    }\r\n    submit() {\r\n        this.setState({ isAllDone: true })\r\n    }\r\n    onChange(type, int) {\r\n        if (type === 'before') {\r\n            this.setState({\r\n                intShow: int,\r\n            });\r\n        }\r\n    }\r\n    done(i) {\r\n        let x = this.state.question;\r\n        x[i].isFinish = true;\r\n        this.setState({ question: x });\r\n    }\r\n    render() {\r\n        if (!this.state.isTesting) {\r\n            return (\r\n                <div style={{\r\n                    backgroundImage: `url(${imgs[0]})`,\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center',\r\n                    width: \"100%\", height: \"100%\",\r\n                    position: \"absolute\",\r\n                    top: \"0px\",\r\n                    bottom: \"0px\"\r\n                }}>\r\n                    <Modal\r\n                        visible={!this.state.isTesting}\r\n                        title=\"答题须知\"\r\n                        centered={true}\r\n                        footer={[\r\n                            <Button type=\"primary\" onClick={() => {\r\n                                this.setState({ isTesting: true })\r\n                            }}>\r\n                                开始答题\r\n                      </Button>\r\n                        ]}>\r\n                        <p>1.本答题共有30道题</p>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        }\r\n        const intArray = this.getNextPrevNumber();\r\n        const thumbChildren = imgs.map((img, i) =>\r\n            <span key={i}><i style={{ backgroundImage: `url(${img})` }} /></span>\r\n        );\r\n        return (\r\n            <React.Fragment>\r\n                <BannerAnim\r\n                    onChange={this.onChange}\r\n                    onMouseEnter={this.onMouseEnter}\r\n                    onMouseLeave={this.onMouseLeave}\r\n                    prefixCls=\"custom-arrow-thumb\"\r\n                >\r\n                    <Tabs activeKey={`${this.state.focusOn}`}\r\n                                    animated='true'\r\n                                    onTabClick={(x) => { this.setState({ focusOn: x }) }}\r\n                                    tabBarGutter='0'\r\n                                    tabPosition=\"bottom\"\r\n                                    size=\"small\">\r\n                                    {this.state.question.map((x, i) => (\r\n                                        <TabPane tab={!x.isFinish ? <div>{i + 1}</div> : <div style={{ backgroundColor: '#572A3F', color: 'white', borderRadius: 20 }}>{i + 1}</div>}\r\n                                            key={i}\r\n                                            onChange={() => { this.done(i) }}\r\n                                            style={{ transition: '1s' }}\r\n                                        >\r\n                                            <Element key={i} prefixCls=\"banner-user-elem\">\r\n                                            {x.kind == \"选择题\" ?\r\n                                                <Choice className=\"choice\" Id={i} state={x} setFinish={this.done.bind(this)} Next={this.Next} Prev={this.Prev} />\r\n                                                : <TrueFalse Id={i} state={x} setFinish={this.done.bind(this)} Next={this.Next} Prev={this.Prev} />\r\n                                            }\r\n                                            </Element>\r\n                                        </TabPane>))\r\n                                    }\r\n                                </Tabs>\r\n                    <Arrow arrowType=\"prev\" key=\"prev\" prefixCls=\"user-arrow\" component={TweenOne}\r\n                        onMouseEnter={this.prevEnter}\r\n                        onMouseLeave={this.prevLeave}\r\n                        animation={{ left: this.state.prevEnter ? 0 : -120 }}\r\n                    >\r\n                        <div className=\"arrow\"></div>\r\n                        <TweenOneGroup\r\n                            enter={{ opacity: 0, type: 'from' }}\r\n                            leave={{ opacity: 0 }}\r\n                            appear={false}\r\n                            className=\"img-wrapper\" component=\"ul\"\r\n                        >\r\n                            <li style={{ backgroundImage: `url(${this.imgArray[intArray[0]]})` }} key={intArray[0]} />\r\n                        </TweenOneGroup>\r\n                    </Arrow>\r\n                    <Arrow arrowType=\"next\" key=\"next\" prefixCls=\"user-arrow\" component={TweenOne}\r\n                        onMouseEnter={this.nextEnter}\r\n                        onMouseLeave={this.nextLeave}\r\n                        animation={{ right: this.state.nextEnter ? 0 : -120 }}\r\n                    >\r\n                        <div className=\"arrow\"></div>\r\n                        <TweenOneGroup\r\n                            enter={{ opacity: 0, type: 'from' }}\r\n                            leave={{ opacity: 0 }}\r\n                            appear={false}\r\n                            className=\"img-wrapper\"\r\n                            component=\"ul\"\r\n                        >\r\n                            <li style={{ backgroundImage: `url(${this.imgArray[intArray[1]]})` }} key={intArray[1]} />\r\n                        </TweenOneGroup>\r\n                    </Arrow>\r\n                    <Thumb prefixCls=\"user-thumb\" key=\"thumb\" component={TweenOne}\r\n                        animation={{ bottom: this.state.thumbEnter ? 0 : -70 }}\r\n                    >\r\n                        {thumbChildren}\r\n                    </Thumb>\r\n                </BannerAnim>\r\n                {/* <Layout>\r\n                    <Header>\r\n                        <h1 style={{ color: 'white' }}>东南大学校史校情知识竞赛</h1>\r\n                    </Header>\r\n                    <Content style={{ backgroundColor: '#1C1C1C' }}>\r\n                        <Row>\r\n                            <Col span={2}>\r\n\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Tabs activeKey={`${this.state.focusOn}`}\r\n                                    animated='true'\r\n                                    onTabClick={(x) => { this.setState({ focusOn: x }) }}\r\n                                    tabBarGutter='0'\r\n                                    tabPosition=\"bottom\"\r\n                                    size=\"small\">\r\n                                    {this.state.question.map((x, i) => (\r\n                                        <TabPane tab={!x.isFinish ? <div>{i + 1}</div> : <div style={{ backgroundColor: '#572A3F', color: 'white', borderRadius: 20 }}>{i + 1}</div>}\r\n                                            key={i}\r\n                                            onChange={() => { this.done(i) }}\r\n                                            style={{ transition: '1s' }}\r\n                                        >\r\n                                            {x.kind == \"选择题\" ?\r\n                                                <Choice className=\"choice\" Id={i} state={x} setFinish={this.done.bind(this)} Next={this.Next} Prev={this.Prev} />\r\n                                                : <TrueFalse Id={i} state={x} setFinish={this.done.bind(this)} Next={this.Next} Prev={this.Prev} />\r\n                                            }\r\n                                        </TabPane>))\r\n                                    }\r\n                                </Tabs>\r\n                            </Col>\r\n                            <Col span={2}>\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>Footer</Footer>\r\n                </Layout> */}\r\n                {/* <body style={{ backgroundImage: `url(${imgs[(this.state.focusOn % 3)]})`, backgroundSize: 'cover', backgroundRepeat: 'no-repeat', backgroundPosition: 'center', transition: '2s' }}>\r\n                    <header>\r\n                        <Row>\r\n                            <Col span={1}></Col>\r\n                            <Col span={1}>\r\n                                <br />\r\n                                <br />\r\n                                <Icon style={{ color: 'white', fontSize: '30px' }} type=\"home\" onClick={this.logout} block={true} />\r\n                            </Col>\r\n                            <Col span={16}>\r\n                                <img src={Title}></img>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <br />\r\n                                <br />\r\n                                <Timer state={this.state} setState={this.setState.bind(this)} />\r\n                            </Col>\r\n                        </Row>\r\n                    </header>\r\n                    <Row>\r\n                    <Col span={18} >\r\n                        <div className=\"Question\">\r\n                                <Tabs activeKey={`${this.state.focusOn}`}\r\n                                    onTabClick={(x) => { this.setState({ focusOn: x }) }}\r\n                                    tabPosition=\"left\"\r\n                                    style={{ height: 640 }} >\r\n                                    {this.state.question.map((x, i) => (\r\n                                        <TabPane tab={!x.isFinish ? <div><Icon type=\"clock-circle\" /> {x.kind}{i + 1}&nbsp;</div> : <div style={{backgroundColor:'#572A3F', color:'white', borderRadius:20}}><Icon type=\"clock-circle\" />{x.kind}{i + 1}&nbsp;</div>}\r\n                                            key={i}\r\n                                            onChange={() => { this.done(i) }}\r\n                                        >\r\n                                            {x.kind == \"选择题\" ?\r\n                                                <Choice className=\"choice\" Id={i} state={x} setFinish={this.done.bind(this)} Next={this.Next} />\r\n                                                : <TrueFalse Id={i} state={x} setFinish={this.done.bind(this)} Next={this.Next} />\r\n                                            }\r\n                                        </TabPane>))\r\n                                    }\r\n                                    <Row>\r\n                                        <Col span={16}></Col>\r\n                                        <Col span={3}>\r\n                                            <Button onClick={this.Prev}>上一题</Button>\r\n                                        </Col>\r\n                                        <Col span={4}>\r\n                                            {this.state.focusOn < 29 && <Button onClick={this.Next}>下一题</Button>}\r\n                                            {this.state.focusOn == 29 && <Button type='primary' onClick={this.submit}>提交</Button>}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Tabs>\r\n                                </div>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <div style={{width:200}}>\r\n                                <br/>\r\n                                {this.state.question.map((x, i) => (\r\n                                x.isFinish?<Button ghost style={{width:10, textAlign:'center'}}>{i+1}</Button>:<Button style={{width:10}} onClick={() => { this.setState({ focusOn: i }) }}>{i+1}</Button>))}\r\n                                </div>\r\n                            </Col>\r\n                        <iframe onClick={this.submit} src=\"https://zhanyuzhang.github.io/lovely-cat/cat.html\"></iframe>\r\n                    </Row>\r\n                </body> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test\r\n\r\n{/*\r\n    import BannerAnim from 'rc-banner-anim';\r\nimport TweenOne, { TweenOneGroup } from 'rc-tween-one';\r\nimport 'rc-banner-anim/assets/index.css';\r\nconst { Element, Arrow, Thumb } = BannerAnim;\r\nconst BgElement = Element.BgElement;\r\nclass Demo extends React.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.imgArray = [\r\n      'https://zos.alipayobjects.com/rmsportal/hzPBTkqtFpLlWCi.jpg',\r\n      'https://zos.alipayobjects.com/rmsportal/gGlUMYGEIvjDOOw.jpg',\r\n    ];\r\n    this.state = {\r\n      intShow: 0,\r\n      prevEnter: false,\r\n      nextEnter: false,\r\n      thumbEnter: false,\r\n    };\r\n    [\r\n      'onChange',\r\n      'prevEnter',\r\n      'prevLeave',\r\n      'nextEnter',\r\n      'nextLeave',\r\n      'onMouseEnter',\r\n      'onMouseLeave',\r\n    ].forEach((method) => this[method] = this[method].bind(this));\r\n  }\r\n\r\n  onChange(type, int) {\r\n    if (type === 'before') {\r\n      this.setState({\r\n        intShow: int,\r\n      });\r\n    }\r\n  }\r\n\r\n  getNextPrevNumber() {\r\n    let nextInt = this.state.intShow + 1;\r\n    let prevInt = this.state.intShow - 1;\r\n    if (nextInt >= this.imgArray.length) {\r\n      nextInt = 0;\r\n    }\r\n    if (prevInt < 0) {\r\n      prevInt = this.imgArray.length - 1;\r\n    }\r\n\r\n    return [prevInt, nextInt];\r\n  }\r\n\r\n  prevEnter() {\r\n    this.setState({\r\n      prevEnter: true,\r\n    });\r\n  }\r\n\r\n  prevLeave() {\r\n    this.setState({\r\n      prevEnter: false,\r\n    });\r\n  }\r\n\r\n  nextEnter() {\r\n    this.setState({\r\n      nextEnter: true,\r\n    });\r\n  }\r\n\r\n  nextLeave() {\r\n    this.setState({\r\n      nextEnter: false,\r\n    });\r\n  }\r\n  \r\n  onMouseEnter() {\r\n    this.setState({\r\n      thumbEnter: true,\r\n    });\r\n  }\r\n\r\n  onMouseLeave() {\r\n    this.setState({\r\n      thumbEnter: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const intArray = this.getNextPrevNumber();\r\n    const thumbChildren = this.imgArray.map((img, i) =>\r\n          <span key={i}><i style={{ backgroundImage: `url(${img})` }} /></span>\r\n        );\r\n    return (\r\n      <BannerAnim \r\n        onChange={this.onChange} \r\n        onMouseEnter={this.onMouseEnter} \r\n        onMouseLeave={this.onMouseLeave} \r\n        prefixCls=\"custom-arrow-thumb\"\r\n      >\r\n        <Element key=\"aaa\"\r\n          prefixCls=\"banner-user-elem\"\r\n        >\r\n          <BgElement\r\n            key=\"bg\"\r\n            className=\"bg\"\r\n            style={{\r\n              backgroundImage: `url(${this.imgArray[0]})`,\r\n              backgroundSize: 'cover',\r\n              backgroundPosition: 'center',\r\n            }}\r\n          />\r\n          <TweenOne className=\"banner-user-title\" animation={{ y: 30, opacity: 0, type: 'from' }}>\r\n            Ant Motion Banner\r\n          </TweenOne>\r\n          <TweenOne \r\n            className=\"banner-user-text\" \r\n            animation={{ y: 30, opacity: 0, type: 'from', delay: 100 }}\r\n          >\r\n            The Fast Way Use Animation In React\r\n            </TweenOne>\r\n        </Element>\r\n        <Element key=\"bbb\"\r\n          prefixCls=\"banner-user-elem\"\r\n        >\r\n          <BgElement\r\n            key=\"bg\"\r\n            className=\"bg\"\r\n            style={{\r\n              backgroundImage: `url(${this.imgArray[1]})`,\r\n              backgroundSize: 'cover',\r\n              backgroundPosition: 'center',\r\n            }}\r\n          />\r\n          <TweenOne className=\"banner-user-title\" animation={{ y: 30, opacity: 0, type: 'from' }}>\r\n            Ant Motion Banner\r\n          </TweenOne>\r\n          <TweenOne \r\n            className=\"banner-user-text\" \r\n            animation={{ y: 30, opacity: 0, type: 'from', delay: 100 }}\r\n          >\r\n            The Fast Way Use Animation In React\r\n          </TweenOne>\r\n        </Element>\r\n        <Arrow arrowType=\"prev\" key=\"prev\" prefixCls=\"user-arrow\" component={TweenOne}\r\n          onMouseEnter={this.prevEnter}\r\n          onMouseLeave={this.prevLeave}\r\n          animation={{ left: this.state.prevEnter ? 0 : -120 }}\r\n        >\r\n          <div className=\"arrow\"></div>\r\n          <TweenOneGroup \r\n            enter={{ opacity: 0, type: 'from' }} \r\n            leave={{ opacity: 0 }} \r\n            appear={false} \r\n            className=\"img-wrapper\" component=\"ul\"\r\n          >\r\n            <li style={{ backgroundImage: `url(${this.imgArray[intArray[0]]})`}} key={intArray[0]} />\r\n          </TweenOneGroup>\r\n        </Arrow>\r\n        <Arrow arrowType=\"next\" key=\"next\" prefixCls=\"user-arrow\" component={TweenOne}\r\n          onMouseEnter={this.nextEnter}\r\n          onMouseLeave={this.nextLeave}\r\n          animation={{ right: this.state.nextEnter ? 0 : -120 }}\r\n        >\r\n          <div className=\"arrow\"></div>\r\n          <TweenOneGroup \r\n            enter={{ opacity: 0, type: 'from' }} \r\n            leave={{ opacity: 0 }} \r\n            appear={false} \r\n            className=\"img-wrapper\" \r\n            component=\"ul\"\r\n          >\r\n            <li style={{ backgroundImage: `url(${this.imgArray[intArray[1]]})`}} key={intArray[1]} />\r\n          </TweenOneGroup>\r\n        </Arrow>\r\n        <Thumb prefixCls=\"user-thumb\" key=\"thumb\" component={TweenOne}\r\n          animation={{ bottom: this.state.thumbEnter ? 0 : -70 }}\r\n        >\r\n          {thumbChildren}\r\n        </Thumb>\r\n      </BannerAnim>\r\n    );\r\n  }\r\n}\r\nReactDOM.render(\r\n  <Demo />\r\n, mountNode);\r\n*/}"]},"metadata":{},"sourceType":"module"}