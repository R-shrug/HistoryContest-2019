{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\87102\\\\Documents\\\\GitHub\\\\HistoryContest-2019\\\\historycontest2019\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\87102\\\\Documents\\\\GitHub\\\\HistoryContest-2019\\\\historycontest2019\\\\src\\\\Components\\\\VerifyCode\\\\VerifyCode.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport bg from '../../img/VerifyCodeBG.png';\nimport { Row, Col, Input, Button } from 'antd';\n\nclass VerifyCode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, this.initState(), {\n      inputValue: \"\",\n      verifyCode: \"\"\n    });\n    this.getInput = this.getInput.bind(this);\n  }\n\n  initState() {\n    return {\n      data: this.getRandom(109, 48, 4),\n      rotate: this.getRandom(60, -60, 4),\n      fz: this.getRandom(10, 20, 4),\n      color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\n    };\n  }\n\n  getRandom(max, min, num) {\n    const asciiNum = ~~(Math.random() * (max - min + 1) + min);\n\n    if (!Boolean(num)) {\n      return asciiNum;\n    }\n\n    const arr = [];\n\n    for (let i = 0; i < num; i++) {\n      arr.push(this.getRandom(max, min));\n    }\n\n    return arr;\n  }\n\n  getInput(e) {\n    console.log(e.target.value);\n    this.setState({\n      inputValue: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u9A8C\\u8BC1\\u7801\\uFF08\\u4E0D\\u533A\\u5206\\u5927\\u5C0F\\u5199\\uFF09\",\n      onChange: this.getInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"vcodewrap\",\n      style: {\n        width: 100,\n        height: 25,\n        backgroundImage: \"url(\".concat(bg, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.data.map((v, i) => React.createElement(\"div\", {\n      key: i,\n      className: \"itemStr\",\n      style: {\n        transform: \"skewX(\".concat(this.state.rotate[i], \"deg)\"),\n        fontSize: \"\".concat(this.state.fz[i], \"px\"),\n        color: \"rgb(\".concat(this.state.color[i].toString(), \")\"),\n        display: 'inline-block'\n      },\n      onMouseEnter: () => this.setState({\n        refresh: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, String.fromCharCode(v > 57 && v < 84 ? v + 7 : v < 57 ? v : v + 13), \"\\xA0\\xA0\")), this.state.refresh ? React.createElement(\"div\", {\n      className: \"mask\",\n      onClick: () => {\n        this.setState(_objectSpread({}, this.initState(), {\n          refresh: false\n        }));\n      },\n      onMouseLeave: () => {\n        this.setState({\n          refresh: false\n        });\n      },\n      style: {\n        fontSize: \"12px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" \\u770B\\u4E0D\\u6E05\\uFF1F\\u70B9\\u51FB\\u6B64\\u5904\\u5237\\u65B0\") : null))));\n  }\n\n}\n\nexport default VerifyCode;","map":{"version":3,"sources":["C:\\Users\\87102\\Documents\\GitHub\\HistoryContest-2019\\historycontest2019\\src\\Components\\VerifyCode\\VerifyCode.js"],"names":["React","bg","Row","Col","Input","Button","VerifyCode","Component","constructor","props","state","initState","inputValue","verifyCode","getInput","bind","data","getRandom","rotate","fz","color","max","min","num","asciiNum","Math","random","Boolean","arr","i","push","e","console","log","target","value","setState","render","width","height","backgroundImage","map","v","transform","fontSize","toString","display","refresh","String","fromCharCode"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport bg from '../../img/VerifyCodeBG.png'\r\nimport {Row, Col, Input, Button}from 'antd';\r\n\r\nclass VerifyCode extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.initState(),\r\n            inputValue:\"\",\r\n            verifyCode:\"\",\r\n        }\r\n        this.getInput=this.getInput.bind(this);\r\n    }\r\n    initState() {\r\n        return {\r\n            data: this.getRandom(109, 48, 4),\r\n            rotate: this.getRandom(60, -60, 4),\r\n            fz: this.getRandom(10, 20, 4),\r\n            color: [this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3), this.getRandom(100, 200, 3)]\r\n        }\r\n    }\r\n\r\n    getRandom(max, min, num) {\r\n        const asciiNum = ~~(Math.random() * (max - min + 1) + min)\r\n        if (!Boolean(num)) {\r\n            return asciiNum\r\n        }\r\n        const arr = []\r\n        for (let i = 0; i < num; i++) {\r\n            arr.push(this.getRandom(max, min))\r\n        }\r\n        return arr\r\n    }\r\n\r\n\r\n    getInput(e){\r\n        console.log(e.target.value);\r\n        this.setState({inputValue:e.target.value});\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col span={6}>\r\n                        <Input placeholder=\"请输入验证码（不区分大小写）\" onChange={this.getInput}>\r\n                        </Input>\r\n                    </Col>\r\n                    <Col span={18}>\r\n            <div className='vcodewrap' style={{ width: 100, height: 25, backgroundImage: `url(${bg})`}} >\r\n                {this.state.data.map((v, i) =>\r\n                    <div\r\n                        key={i}\r\n                        className='itemStr'\r\n                        style={{\r\n                            transform: `skewX(${this.state.rotate[i]}deg)`,\r\n                            fontSize: `${this.state.fz[i]}px`,\r\n                            color: `rgb(${this.state.color[i].toString()})`,\r\n                            display:'inline-block'\r\n                        }}\r\n                        onMouseEnter={() => this.setState({ refresh: true })}\r\n                    >\r\n                        {String.fromCharCode(v > 57 && v < 84 ? v + 7 : (v < 57 ? v : v + 13))}&nbsp;&nbsp;\r\n                    </div>\r\n                )}\r\n                {\r\n                    this.state.refresh\r\n                        ? <div\r\n                            className='mask'\r\n                            onClick={() => {\r\n                                this.setState({ ...this.initState(), refresh: false })\r\n                            }}\r\n                            onMouseLeave={() => { this.setState({ refresh: false }) }}\r\n                            style={{fontSize:\"12px\"}}\r\n                        > 看不清？点击此处刷新\r\n              </div>\r\n                        : null}\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nexport default VerifyCode;"]},"metadata":{},"sourceType":"module"}